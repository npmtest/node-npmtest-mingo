{"/home/travis/build/npmtest/node-npmtest-mingo/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-mingo/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_mingo */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - init-after","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - init-after","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-mingo/lib.npmtest_mingo.js":{"path":"/home/travis/build/npmtest/node-npmtest-mingo/lib.npmtest_mingo.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":50}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":56}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_mingo */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_mingo = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_mingo = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-mingo/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-mingo/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":49}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":63},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-mingo && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_mingo */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_mingo","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // init-after","    // run browser js-env code - init-after","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_mingo.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_mingo.rollup.js'] =","            local.assetsDict['/assets.npmtest_mingo.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_mingo.__dirname + '/lib.npmtest_mingo.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-mingo/node_modules/mingo/mingo.js":{"path":"/home/travis/build/npmtest/node-npmtest-mingo/node_modules/mingo/mingo.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1,"105":0,"106":1,"107":2,"108":0,"109":1,"110":0,"111":1,"112":0,"113":0,"114":0,"115":0,"116":1,"117":2,"118":1,"119":0,"120":1,"121":0,"122":1,"123":0,"124":1,"125":2,"126":1,"127":0,"128":1,"129":0,"130":1,"131":0,"132":1,"133":0,"134":1,"135":0,"136":1,"137":0,"138":1,"139":0,"140":1,"141":0,"142":1,"143":0,"144":1,"145":0,"146":1,"147":0,"148":1,"149":2,"150":1,"151":0,"152":1,"153":0,"154":1,"155":4,"156":1,"157":15,"158":1,"159":0,"160":1,"161":2,"162":1,"163":2,"164":2,"165":1,"166":1,"167":15,"168":15,"169":1,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":1,"181":0,"182":1,"183":0,"184":0,"185":0,"186":0,"187":1,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":1,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":1,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":1,"242":0,"243":1,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":1,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":1,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":1,"294":0,"295":1,"296":1,"297":0,"298":1,"299":0,"300":1,"301":0,"302":0,"303":1,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":1,"324":1,"325":1,"326":0,"327":1,"328":0,"329":1,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":1,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":1,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":1,"393":0,"394":0,"395":1,"396":0,"397":0,"398":0,"399":0,"400":0,"401":1,"402":1,"403":0,"404":0,"405":0,"406":0,"407":1,"408":0,"409":1,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":1,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":1,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":1,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":1,"485":0,"486":0,"487":0,"488":0,"489":1,"490":0,"491":0,"492":0,"493":1,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":1,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":1,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":1,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":1,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":1,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":1,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":1,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":1,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":0,"825":1,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":1,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":1,"900":0,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":0,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":0,"926":0,"927":0,"928":0,"929":0,"930":0,"931":0,"932":0,"933":1,"934":15,"935":15,"936":0,"937":0,"938":0,"939":1,"940":0,"941":0,"942":0,"943":0,"944":0,"945":0,"946":0,"947":0,"948":0,"949":0,"950":0,"951":0,"952":0,"953":0,"954":0,"955":0,"956":0,"957":0,"958":0,"959":0,"960":0,"961":0,"962":0,"963":0,"964":0,"965":0,"966":0,"967":0,"968":0,"969":0,"970":0,"971":0,"972":0,"973":0,"974":0,"975":0,"976":0,"977":0,"978":0,"979":0,"980":0,"981":0,"982":0,"983":0,"984":0,"985":0,"986":0,"987":0,"988":0,"989":0,"990":0,"991":0,"992":0,"993":0,"994":0,"995":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":0,"1004":0,"1005":0,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1011":0,"1012":0,"1013":0,"1014":0,"1015":0,"1016":1,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1029":0,"1030":0,"1031":0,"1032":0,"1033":0,"1034":0,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1040":0,"1041":0,"1042":0,"1043":0,"1044":0,"1045":0,"1046":0,"1047":0,"1048":0,"1049":0,"1050":0,"1051":0,"1052":0,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1058":0,"1059":0,"1060":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":0,"1072":0,"1073":0,"1074":0,"1075":0,"1076":0,"1077":0,"1078":0,"1079":0,"1080":0,"1081":0,"1082":0,"1083":0,"1084":0,"1085":0,"1086":0,"1087":0,"1088":0,"1089":0,"1090":0,"1091":0,"1092":0,"1093":0,"1094":0,"1095":0,"1096":0,"1097":0,"1098":0,"1099":0,"1100":0,"1101":0,"1102":0,"1103":0,"1104":0,"1105":0,"1106":0,"1107":0,"1108":1,"1109":0,"1110":0,"1111":0,"1112":0,"1113":0,"1114":1,"1115":0,"1116":0,"1117":0,"1118":0,"1119":0,"1120":0,"1121":1,"1122":8,"1123":0,"1124":0,"1125":1,"1126":0,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":0,"1133":0,"1134":0,"1135":0,"1136":0,"1137":0,"1138":0,"1139":0,"1140":0,"1141":0,"1142":0,"1143":0,"1144":0,"1145":0,"1146":0,"1147":0,"1148":0,"1149":0,"1150":0,"1151":0,"1152":0,"1153":1,"1154":1,"1155":0,"1156":0,"1157":0,"1158":0,"1159":0,"1160":0,"1161":0,"1162":0,"1163":0,"1164":0,"1165":0,"1166":0,"1167":0,"1168":0,"1169":0,"1170":0,"1171":0,"1172":0,"1173":0,"1174":0,"1175":0,"1176":0,"1177":0,"1178":0,"1179":0,"1180":0,"1181":0,"1182":0,"1183":0,"1184":0,"1185":0,"1186":0,"1187":0,"1188":0,"1189":0,"1190":0,"1191":0,"1192":0,"1193":0,"1194":0,"1195":0,"1196":1,"1197":0,"1198":1,"1199":0,"1200":1,"1201":0,"1202":0,"1203":0,"1204":0,"1205":0,"1206":0,"1207":0,"1208":0,"1209":0,"1210":0,"1211":0,"1212":0,"1213":0,"1214":0,"1215":0,"1216":0,"1217":1,"1218":0,"1219":0,"1220":0,"1221":0,"1222":0,"1223":0,"1224":0,"1225":0,"1226":0,"1227":0,"1228":0,"1229":0,"1230":0,"1231":0,"1232":0,"1233":0,"1234":0,"1235":0,"1236":0,"1237":0,"1238":0,"1239":0,"1240":0,"1241":0,"1242":0,"1243":0,"1244":0,"1245":0,"1246":0,"1247":0,"1248":0,"1249":0,"1250":0,"1251":0,"1252":0,"1253":0,"1254":0,"1255":0,"1256":0,"1257":0,"1258":0,"1259":0,"1260":0,"1261":1,"1262":0,"1263":0,"1264":0,"1265":0,"1266":0,"1267":0,"1268":0,"1269":0,"1270":0,"1271":0,"1272":0,"1273":0,"1274":0,"1275":0,"1276":0,"1277":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":0,"1283":0,"1284":0,"1285":0,"1286":0,"1287":0,"1288":0,"1289":0,"1290":0,"1291":0,"1292":1,"1293":1,"1294":1,"1295":1,"1296":1,"1297":1,"1298":1,"1299":1,"1300":0,"1301":1,"1302":0,"1303":0,"1304":0,"1305":0,"1306":0,"1307":0,"1308":0,"1309":0,"1310":0,"1311":0,"1312":0,"1313":0,"1314":0,"1315":0,"1316":0,"1317":0,"1318":0,"1319":0,"1320":0,"1321":0,"1322":0,"1323":0,"1324":0,"1325":0,"1326":0,"1327":0,"1328":0,"1329":0,"1330":0,"1331":0,"1332":0,"1333":0,"1334":1,"1335":0,"1336":1,"1337":0,"1338":1,"1339":0,"1340":0,"1341":0,"1342":1,"1343":0,"1344":0,"1345":1,"1346":1,"1347":0},"b":{"1":[1,0],"2":[0,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,1],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,1],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,1],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,1],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,1],"24":[0,0],"25":[0,0],"26":[1,0],"27":[0,0],"28":[0,0],"29":[0,2],"30":[0,0,0],"31":[0,0],"32":[0,0,0,0,0,0],"33":[0,0],"34":[1,1],"35":[15,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0,0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0,0],"215":[0,0],"216":[0,0,0,0],"217":[0,0,0],"218":[0,0,0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0,0,0,0,0,0,0,0,0,0,0],"229":[0,0],"230":[0,0,0],"231":[0,0,0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0],"265":[0,0],"266":[0,0],"267":[0,0],"268":[0,0],"269":[0,0],"270":[0,0],"271":[0,0],"272":[0,0],"273":[0,0],"274":[0,0],"275":[0,0,0,0],"276":[0,0],"277":[0,0],"278":[0,0],"279":[0,0],"280":[0,0],"281":[0,0],"282":[0,0],"283":[0,0],"284":[0,0],"285":[0,0],"286":[0,0],"287":[0,0],"288":[0,0],"289":[0,0],"290":[0,0],"291":[0,0],"292":[0,0],"293":[0,0],"294":[0,0],"295":[0,0],"296":[0,0],"297":[0,0],"298":[0,0],"299":[0,0],"300":[0,0],"301":[0,0],"302":[0,0],"303":[0,0],"304":[0,0],"305":[0,0],"306":[0,0],"307":[0,0],"308":[0,0],"309":[0,0],"310":[0,0],"311":[0,0],"312":[0,0],"313":[0,0],"314":[0,0],"315":[0,0],"316":[0,0],"317":[0,0,0,0],"318":[0,0],"319":[0,0,0,0],"320":[0,0],"321":[0,0],"322":[0,0],"323":[0,0],"324":[0,0],"325":[0,0],"326":[0,0],"327":[0,0],"328":[0,0],"329":[0,0],"330":[0,0],"331":[0,0],"332":[0,0],"333":[0,0],"334":[0,0],"335":[0,0,0],"336":[0,0],"337":[0,0],"338":[0,0],"339":[1,0],"340":[1,1,1]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":2,"14":0,"15":0,"16":2,"17":0,"18":0,"19":0,"20":2,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":2,"33":0,"34":0,"35":4,"36":15,"37":0,"38":2,"39":2,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":15,"206":15,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":8,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":2},"end":{"line":5,"column":16}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":19},"end":{"line":18,"column":31}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":28},"end":{"line":39,"column":45}}},"4":{"name":"(anonymous_4)","line":48,"loc":{"start":{"line":48,"column":15},"end":{"line":48,"column":27}}},"5":{"name":"(anonymous_5)","line":49,"loc":{"start":{"line":49,"column":17},"end":{"line":49,"column":29}}},"6":{"name":"(anonymous_6)","line":69,"loc":{"start":{"line":69,"column":11},"end":{"line":69,"column":31}}},"7":{"name":"(anonymous_7)","line":99,"loc":{"start":{"line":99,"column":11},"end":{"line":99,"column":31}}},"8":{"name":"(anonymous_8)","line":128,"loc":{"start":{"line":128,"column":11},"end":{"line":128,"column":46}}},"9":{"name":"(anonymous_9)","line":155,"loc":{"start":{"line":155,"column":18},"end":{"line":155,"column":44}}},"10":{"name":"(anonymous_10)","line":182,"loc":{"start":{"line":182,"column":16},"end":{"line":182,"column":29}}},"11":{"name":"(anonymous_11)","line":199,"loc":{"start":{"line":199,"column":18},"end":{"line":199,"column":31}}},"12":{"name":"util","line":213,"loc":{"start":{"line":213,"column":0},"end":{"line":213,"column":17}}},"13":{"name":"assert","line":232,"loc":{"start":{"line":232,"column":0},"end":{"line":232,"column":37}}},"14":{"name":"assertExists","line":236,"loc":{"start":{"line":236,"column":0},"end":{"line":236,"column":30}}},"15":{"name":"clone","line":243,"loc":{"start":{"line":243,"column":0},"end":{"line":243,"column":21}}},"16":{"name":"isType","line":254,"loc":{"start":{"line":254,"column":0},"end":{"line":254,"column":23}}},"17":{"name":"isBoolean","line":255,"loc":{"start":{"line":255,"column":0},"end":{"line":255,"column":23}}},"18":{"name":"isString","line":256,"loc":{"start":{"line":256,"column":0},"end":{"line":256,"column":22}}},"19":{"name":"isNumber","line":257,"loc":{"start":{"line":257,"column":0},"end":{"line":257,"column":22}}},"20":{"name":"isArray","line":258,"loc":{"start":{"line":258,"column":0},"end":{"line":258,"column":21}}},"21":{"name":"isObject","line":259,"loc":{"start":{"line":259,"column":0},"end":{"line":259,"column":22}}},"22":{"name":"isObjectLike","line":260,"loc":{"start":{"line":260,"column":0},"end":{"line":260,"column":26}}},"23":{"name":"isDate","line":261,"loc":{"start":{"line":261,"column":0},"end":{"line":261,"column":20}}},"24":{"name":"isRegExp","line":262,"loc":{"start":{"line":262,"column":0},"end":{"line":262,"column":25}}},"25":{"name":"isFunction","line":263,"loc":{"start":{"line":263,"column":0},"end":{"line":263,"column":27}}},"26":{"name":"isNil","line":264,"loc":{"start":{"line":264,"column":0},"end":{"line":264,"column":19}}},"27":{"name":"isNull","line":265,"loc":{"start":{"line":265,"column":0},"end":{"line":265,"column":20}}},"28":{"name":"isUndefined","line":266,"loc":{"start":{"line":266,"column":0},"end":{"line":266,"column":25}}},"29":{"name":"inArray","line":267,"loc":{"start":{"line":267,"column":0},"end":{"line":267,"column":29}}},"30":{"name":"notInArray","line":268,"loc":{"start":{"line":268,"column":0},"end":{"line":268,"column":32}}},"31":{"name":"truthy","line":269,"loc":{"start":{"line":269,"column":0},"end":{"line":269,"column":22}}},"32":{"name":"falsey","line":270,"loc":{"start":{"line":270,"column":0},"end":{"line":270,"column":22}}},"33":{"name":"isEmpty","line":271,"loc":{"start":{"line":271,"column":0},"end":{"line":271,"column":21}}},"34":{"name":"array","line":278,"loc":{"start":{"line":278,"column":0},"end":{"line":278,"column":19}}},"35":{"name":"getType","line":279,"loc":{"start":{"line":279,"column":0},"end":{"line":279,"column":25}}},"36":{"name":"has","line":280,"loc":{"start":{"line":280,"column":0},"end":{"line":280,"column":25}}},"37":{"name":"err","line":281,"loc":{"start":{"line":281,"column":0},"end":{"line":281,"column":17}}},"38":{"name":"keys","line":282,"loc":{"start":{"line":282,"column":0},"end":{"line":282,"column":18}}},"39":{"name":"each","line":293,"loc":{"start":{"line":293,"column":0},"end":{"line":293,"column":35}}},"40":{"name":"map","line":314,"loc":{"start":{"line":314,"column":0},"end":{"line":314,"column":34}}},"41":{"name":"intersection","line":336,"loc":{"start":{"line":336,"column":0},"end":{"line":336,"column":31}}},"42":{"name":"union","line":347,"loc":{"start":{"line":347,"column":0},"end":{"line":347,"column":24}}},"43":{"name":"flatten","line":360,"loc":{"start":{"line":360,"column":0},"end":{"line":360,"column":29}}},"44":{"name":"(anonymous_44)","line":363,"loc":{"start":{"line":363,"column":15},"end":{"line":363,"column":35}}},"45":{"name":"isEqual","line":383,"loc":{"start":{"line":383,"column":0},"end":{"line":383,"column":24}}},"46":{"name":"unique","line":439,"loc":{"start":{"line":439,"column":0},"end":{"line":439,"column":21}}},"47":{"name":"(anonymous_47)","line":442,"loc":{"start":{"line":442,"column":11},"end":{"line":442,"column":27}}},"48":{"name":"encode","line":453,"loc":{"start":{"line":453,"column":0},"end":{"line":453,"column":24}}},"49":{"name":"getHash","line":459,"loc":{"start":{"line":459,"column":0},"end":{"line":459,"column":25}}},"50":{"name":"sortBy","line":476,"loc":{"start":{"line":476,"column":0},"end":{"line":476,"column":38}}},"51":{"name":"(anonymous_51)","line":490,"loc":{"start":{"line":490,"column":14},"end":{"line":490,"column":30}}},"52":{"name":"groupBy","line":509,"loc":{"start":{"line":509,"column":0},"end":{"line":509,"column":39}}},"53":{"name":"(anonymous_53)","line":517,"loc":{"start":{"line":517,"column":19},"end":{"line":517,"column":34}}},"54":{"name":"into","line":536,"loc":{"start":{"line":536,"column":0},"end":{"line":536,"column":27}}},"55":{"name":"(anonymous_55)","line":553,"loc":{"start":{"line":553,"column":14},"end":{"line":553,"column":33}}},"56":{"name":"(anonymous_56)","line":561,"loc":{"start":{"line":561,"column":18},"end":{"line":561,"column":29}}},"57":{"name":"(anonymous_57)","line":572,"loc":{"start":{"line":572,"column":12},"end":{"line":572,"column":38}}},"58":{"name":"(anonymous_58)","line":573,"loc":{"start":{"line":573,"column":15},"end":{"line":573,"column":41}}},"59":{"name":"(anonymous_59)","line":581,"loc":{"start":{"line":581,"column":12},"end":{"line":581,"column":38}}},"60":{"name":"(anonymous_60)","line":582,"loc":{"start":{"line":582,"column":13},"end":{"line":582,"column":39}}},"61":{"name":"(anonymous_61)","line":583,"loc":{"start":{"line":583,"column":15},"end":{"line":583,"column":41}}},"62":{"name":"(anonymous_62)","line":589,"loc":{"start":{"line":589,"column":14},"end":{"line":589,"column":38}}},"63":{"name":"(anonymous_63)","line":593,"loc":{"start":{"line":593,"column":24},"end":{"line":593,"column":47}}},"64":{"name":"keyId","line":621,"loc":{"start":{"line":621,"column":0},"end":{"line":621,"column":18}}},"65":{"name":"getValue","line":632,"loc":{"start":{"line":632,"column":0},"end":{"line":632,"column":31}}},"66":{"name":"resolve","line":642,"loc":{"start":{"line":642,"column":0},"end":{"line":642,"column":43}}},"67":{"name":"(anonymous_67)","line":657,"loc":{"start":{"line":657,"column":24},"end":{"line":657,"column":40}}},"68":{"name":"resolveObj","line":684,"loc":{"start":{"line":684,"column":0},"end":{"line":684,"column":36}}},"69":{"name":"(anonymous_69)","line":707,"loc":{"start":{"line":707,"column":18},"end":{"line":707,"column":34}}},"70":{"name":"traverse","line":737,"loc":{"start":{"line":737,"column":0},"end":{"line":737,"column":45}}},"71":{"name":"(anonymous_71)","line":746,"loc":{"start":{"line":746,"column":16},"end":{"line":746,"column":32}}},"72":{"name":"setValue","line":769,"loc":{"start":{"line":769,"column":0},"end":{"line":769,"column":41}}},"73":{"name":"(anonymous_73)","line":770,"loc":{"start":{"line":770,"column":26},"end":{"line":770,"column":47}}},"74":{"name":"removeValue","line":775,"loc":{"start":{"line":775,"column":0},"end":{"line":775,"column":37}}},"75":{"name":"(anonymous_75)","line":776,"loc":{"start":{"line":776,"column":26},"end":{"line":776,"column":47}}},"76":{"name":"isPrimitive","line":791,"loc":{"start":{"line":791,"column":0},"end":{"line":791,"column":29}}},"77":{"name":"isSimpleType","line":801,"loc":{"start":{"line":801,"column":0},"end":{"line":801,"column":30}}},"78":{"name":"normalize","line":810,"loc":{"start":{"line":810,"column":0},"end":{"line":810,"column":26}}},"79":{"name":"computeValue","line":853,"loc":{"start":{"line":853,"column":0},"end":{"line":853,"column":46}}},"80":{"name":"(anonymous_80)","line":882,"loc":{"start":{"line":882,"column":33},"end":{"line":882,"column":46}}},"81":{"name":"(anonymous_81)","line":897,"loc":{"start":{"line":897,"column":22},"end":{"line":897,"column":38}}},"82":{"name":"slice","line":929,"loc":{"start":{"line":929,"column":0},"end":{"line":929,"column":33}}},"83":{"name":"stddev","line":955,"loc":{"start":{"line":955,"column":0},"end":{"line":955,"column":22}}},"84":{"name":"(anonymous_84)","line":956,"loc":{"start":{"line":956,"column":31},"end":{"line":956,"column":49}}},"85":{"name":"(anonymous_85)","line":961,"loc":{"start":{"line":961,"column":23},"end":{"line":961,"column":41}}},"86":{"name":"redactObj","line":972,"loc":{"start":{"line":972,"column":0},"end":{"line":972,"column":36}}},"87":{"name":"(anonymous_87)","line":988,"loc":{"start":{"line":988,"column":19},"end":{"line":988,"column":40}}},"88":{"name":"(anonymous_88)","line":1001,"loc":{"start":{"line":1001,"column":33},"end":{"line":1001,"column":62}}},"89":{"name":"(anonymous_89)","line":1029,"loc":{"start":{"line":1029,"column":15},"end":{"line":1029,"column":56}}},"90":{"name":"(anonymous_90)","line":1044,"loc":{"start":{"line":1044,"column":10},"end":{"line":1044,"column":22}}},"91":{"name":"(anonymous_91)","line":1064,"loc":{"start":{"line":1064,"column":51},"end":{"line":1064,"column":65}}},"92":{"name":"(anonymous_92)","line":1083,"loc":{"start":{"line":1083,"column":7},"end":{"line":1083,"column":19}}},"93":{"name":"(anonymous_93)","line":1091,"loc":{"start":{"line":1091,"column":9},"end":{"line":1091,"column":21}}},"94":{"name":"(anonymous_94)","line":1099,"loc":{"start":{"line":1099,"column":8},"end":{"line":1099,"column":20}}},"95":{"name":"(anonymous_95)","line":1107,"loc":{"start":{"line":1107,"column":9},"end":{"line":1107,"column":21}}},"96":{"name":"(anonymous_96)","line":1116,"loc":{"start":{"line":1116,"column":8},"end":{"line":1116,"column":21}}},"97":{"name":"(anonymous_97)","line":1126,"loc":{"start":{"line":1126,"column":9},"end":{"line":1126,"column":22}}},"98":{"name":"(anonymous_98)","line":1136,"loc":{"start":{"line":1136,"column":8},"end":{"line":1136,"column":28}}},"99":{"name":"(anonymous_99)","line":1145,"loc":{"start":{"line":1145,"column":8},"end":{"line":1145,"column":20}}},"100":{"name":"(anonymous_100)","line":1156,"loc":{"start":{"line":1156,"column":11},"end":{"line":1156,"column":23}}},"101":{"name":"(anonymous_101)","line":1165,"loc":{"start":{"line":1165,"column":7},"end":{"line":1165,"column":23}}},"102":{"name":"(anonymous_102)","line":1174,"loc":{"start":{"line":1174,"column":7},"end":{"line":1174,"column":23}}},"103":{"name":"(anonymous_103)","line":1183,"loc":{"start":{"line":1183,"column":7},"end":{"line":1183,"column":27}}},"104":{"name":"(anonymous_104)","line":1191,"loc":{"start":{"line":1191,"column":11},"end":{"line":1191,"column":31}}},"105":{"name":"(anonymous_105)","line":1202,"loc":{"start":{"line":1202,"column":14},"end":{"line":1202,"column":46}}},"106":{"name":"(anonymous_106)","line":1213,"loc":{"start":{"line":1213,"column":12},"end":{"line":1213,"column":24}}},"107":{"name":"(anonymous_107)","line":1236,"loc":{"start":{"line":1236,"column":20},"end":{"line":1236,"column":54}}},"108":{"name":"(anonymous_108)","line":1249,"loc":{"start":{"line":1249,"column":8},"end":{"line":1249,"column":23}}},"109":{"name":"(anonymous_109)","line":1264,"loc":{"start":{"line":1264,"column":8},"end":{"line":1264,"column":42}}},"110":{"name":"(anonymous_110)","line":1273,"loc":{"start":{"line":1273,"column":10},"end":{"line":1273,"column":32}}},"111":{"name":"(anonymous_111)","line":1275,"loc":{"start":{"line":1275,"column":29},"end":{"line":1275,"column":48}}},"112":{"name":"(anonymous_112)","line":1298,"loc":{"start":{"line":1298,"column":13},"end":{"line":1298,"column":41}}},"113":{"name":"(anonymous_113)","line":1309,"loc":{"start":{"line":1309,"column":8},"end":{"line":1309,"column":36}}},"114":{"name":"(anonymous_114)","line":1316,"loc":{"start":{"line":1316,"column":64},"end":{"line":1316,"column":82}}},"115":{"name":"(anonymous_115)","line":1328,"loc":{"start":{"line":1328,"column":8},"end":{"line":1328,"column":36}}},"116":{"name":"(anonymous_116)","line":1330,"loc":{"start":{"line":1330,"column":25},"end":{"line":1330,"column":43}}},"117":{"name":"(anonymous_117)","line":1343,"loc":{"start":{"line":1343,"column":8},"end":{"line":1343,"column":36}}},"118":{"name":"(anonymous_118)","line":1345,"loc":{"start":{"line":1345,"column":25},"end":{"line":1345,"column":43}}},"119":{"name":"(anonymous_119)","line":1358,"loc":{"start":{"line":1358,"column":8},"end":{"line":1358,"column":36}}},"120":{"name":"(anonymous_120)","line":1360,"loc":{"start":{"line":1360,"column":29},"end":{"line":1360,"column":47}}},"121":{"name":"(anonymous_121)","line":1371,"loc":{"start":{"line":1371,"column":9},"end":{"line":1371,"column":37}}},"122":{"name":"(anonymous_122)","line":1374,"loc":{"start":{"line":1374,"column":26},"end":{"line":1374,"column":41}}},"123":{"name":"(anonymous_123)","line":1386,"loc":{"start":{"line":1386,"column":10},"end":{"line":1386,"column":38}}},"124":{"name":"(anonymous_124)","line":1397,"loc":{"start":{"line":1397,"column":9},"end":{"line":1397,"column":37}}},"125":{"name":"(anonymous_125)","line":1407,"loc":{"start":{"line":1407,"column":14},"end":{"line":1407,"column":42}}},"126":{"name":"(anonymous_126)","line":1418,"loc":{"start":{"line":1418,"column":15},"end":{"line":1418,"column":43}}},"127":{"name":"(anonymous_127)","line":1436,"loc":{"start":{"line":1436,"column":14},"end":{"line":1436,"column":42}}},"128":{"name":"(anonymous_128)","line":1439,"loc":{"start":{"line":1439,"column":26},"end":{"line":1439,"column":41}}},"129":{"name":"(anonymous_129)","line":1442,"loc":{"start":{"line":1442,"column":22},"end":{"line":1442,"column":42}}},"130":{"name":"(anonymous_130)","line":1450,"loc":{"start":{"line":1450,"column":40},"end":{"line":1450,"column":53}}},"131":{"name":"(anonymous_131)","line":1464,"loc":{"start":{"line":1464,"column":32},"end":{"line":1464,"column":50}}},"132":{"name":"(anonymous_132)","line":1480,"loc":{"start":{"line":1480,"column":10},"end":{"line":1480,"column":38}}},"133":{"name":"(anonymous_133)","line":1484,"loc":{"start":{"line":1484,"column":41},"end":{"line":1484,"column":56}}},"134":{"name":"(anonymous_134)","line":1493,"loc":{"start":{"line":1493,"column":26},"end":{"line":1493,"column":46}}},"135":{"name":"(anonymous_135)","line":1519,"loc":{"start":{"line":1519,"column":11},"end":{"line":1519,"column":39}}},"136":{"name":"hashCode","line":1533,"loc":{"start":{"line":1533,"column":4},"end":{"line":1533,"column":26}}},"137":{"name":"(anonymous_137)","line":1536,"loc":{"start":{"line":1536,"column":21},"end":{"line":1536,"column":39}}},"138":{"name":"(anonymous_138)","line":1542,"loc":{"start":{"line":1542,"column":23},"end":{"line":1542,"column":38}}},"139":{"name":"(anonymous_139)","line":1546,"loc":{"start":{"line":1546,"column":39},"end":{"line":1546,"column":52}}},"140":{"name":"(anonymous_140)","line":1554,"loc":{"start":{"line":1554,"column":23},"end":{"line":1554,"column":41}}},"141":{"name":"(anonymous_141)","line":1561,"loc":{"start":{"line":1561,"column":21},"end":{"line":1561,"column":36}}},"142":{"name":"(anonymous_142)","line":1564,"loc":{"start":{"line":1564,"column":22},"end":{"line":1564,"column":35}}},"143":{"name":"(anonymous_143)","line":1587,"loc":{"start":{"line":1587,"column":10},"end":{"line":1587,"column":38}}},"144":{"name":"(anonymous_144)","line":1599,"loc":{"start":{"line":1599,"column":12},"end":{"line":1599,"column":40}}},"145":{"name":"(anonymous_145)","line":1611,"loc":{"start":{"line":1611,"column":18},"end":{"line":1611,"column":31}}},"146":{"name":"(anonymous_146)","line":1634,"loc":{"start":{"line":1634,"column":21},"end":{"line":1634,"column":39}}},"147":{"name":"(anonymous_147)","line":1644,"loc":{"start":{"line":1644,"column":20},"end":{"line":1644,"column":35}}},"148":{"name":"(anonymous_148)","line":1705,"loc":{"start":{"line":1705,"column":23},"end":{"line":1705,"column":38}}},"149":{"name":"(anonymous_149)","line":1722,"loc":{"start":{"line":1722,"column":10},"end":{"line":1722,"column":39}}},"150":{"name":"(anonymous_150)","line":1733,"loc":{"start":{"line":1733,"column":9},"end":{"line":1733,"column":38}}},"151":{"name":"(anonymous_151)","line":1744,"loc":{"start":{"line":1744,"column":11},"end":{"line":1744,"column":39}}},"152":{"name":"(anonymous_152)","line":1752,"loc":{"start":{"line":1752,"column":20},"end":{"line":1752,"column":36}}},"153":{"name":"(anonymous_153)","line":1771,"loc":{"start":{"line":1771,"column":9},"end":{"line":1771,"column":41}}},"154":{"name":"(anonymous_154)","line":1774,"loc":{"start":{"line":1774,"column":32},"end":{"line":1774,"column":47}}},"155":{"name":"(anonymous_155)","line":1775,"loc":{"start":{"line":1775,"column":42},"end":{"line":1775,"column":57}}},"156":{"name":"(anonymous_156)","line":1779,"loc":{"start":{"line":1779,"column":24},"end":{"line":1779,"column":37}}},"157":{"name":"(anonymous_157)","line":1781,"loc":{"start":{"line":1781,"column":45},"end":{"line":1781,"column":64}}},"158":{"name":"(anonymous_158)","line":1790,"loc":{"start":{"line":1790,"column":24},"end":{"line":1790,"column":40}}},"159":{"name":"(anonymous_159)","line":1808,"loc":{"start":{"line":1808,"column":16},"end":{"line":1808,"column":44}}},"160":{"name":"(anonymous_160)","line":1826,"loc":{"start":{"line":1826,"column":11},"end":{"line":1826,"column":39}}},"161":{"name":"(anonymous_161)","line":1844,"loc":{"start":{"line":1844,"column":10},"end":{"line":1844,"column":38}}},"162":{"name":"(anonymous_162)","line":1865,"loc":{"start":{"line":1865,"column":16},"end":{"line":1865,"column":44}}},"163":{"name":"(anonymous_163)","line":1868,"loc":{"start":{"line":1868,"column":21},"end":{"line":1868,"column":36}}},"164":{"name":"(anonymous_164)","line":1881,"loc":{"start":{"line":1881,"column":11},"end":{"line":1881,"column":39}}},"165":{"name":"(anonymous_165)","line":1882,"loc":{"start":{"line":1882,"column":26},"end":{"line":1882,"column":41}}},"166":{"name":"accumulate","line":1896,"loc":{"start":{"line":1896,"column":0},"end":{"line":1896,"column":46}}},"167":{"name":"(anonymous_167)","line":1936,"loc":{"start":{"line":1936,"column":5},"end":{"line":1936,"column":33}}},"168":{"name":"(anonymous_168)","line":1948,"loc":{"start":{"line":1948,"column":14},"end":{"line":1948,"column":42}}},"169":{"name":"(anonymous_169)","line":1972,"loc":{"start":{"line":1972,"column":10},"end":{"line":1972,"column":38}}},"170":{"name":"(anonymous_170)","line":1992,"loc":{"start":{"line":1992,"column":14},"end":{"line":1992,"column":42}}},"171":{"name":"(anonymous_171)","line":2003,"loc":{"start":{"line":2003,"column":15},"end":{"line":2003,"column":43}}},"172":{"name":"(anonymous_172)","line":2021,"loc":{"start":{"line":2021,"column":7},"end":{"line":2021,"column":23}}},"173":{"name":"(anonymous_173)","line":2032,"loc":{"start":{"line":2032,"column":7},"end":{"line":2032,"column":23}}},"174":{"name":"(anonymous_174)","line":2043,"loc":{"start":{"line":2043,"column":7},"end":{"line":2043,"column":23}}},"175":{"name":"(anonymous_175)","line":2055,"loc":{"start":{"line":2055,"column":8},"end":{"line":2055,"column":24}}},"176":{"name":"(anonymous_176)","line":2066,"loc":{"start":{"line":2066,"column":7},"end":{"line":2066,"column":23}}},"177":{"name":"(anonymous_177)","line":2067,"loc":{"start":{"line":2067,"column":22},"end":{"line":2067,"column":37}}},"178":{"name":"(anonymous_178)","line":2080,"loc":{"start":{"line":2080,"column":8},"end":{"line":2080,"column":24}}},"179":{"name":"(anonymous_179)","line":2081,"loc":{"start":{"line":2081,"column":22},"end":{"line":2081,"column":37}}},"180":{"name":"(anonymous_180)","line":2094,"loc":{"start":{"line":2094,"column":7},"end":{"line":2094,"column":23}}},"181":{"name":"(anonymous_181)","line":2095,"loc":{"start":{"line":2095,"column":22},"end":{"line":2095,"column":37}}},"182":{"name":"(anonymous_182)","line":2108,"loc":{"start":{"line":2108,"column":8},"end":{"line":2108,"column":24}}},"183":{"name":"(anonymous_183)","line":2109,"loc":{"start":{"line":2109,"column":22},"end":{"line":2109,"column":37}}},"184":{"name":"(anonymous_184)","line":2122,"loc":{"start":{"line":2122,"column":8},"end":{"line":2122,"column":24}}},"185":{"name":"(anonymous_185)","line":2123,"loc":{"start":{"line":2123,"column":22},"end":{"line":2123,"column":37}}},"186":{"name":"(anonymous_186)","line":2136,"loc":{"start":{"line":2136,"column":10},"end":{"line":2136,"column":26}}},"187":{"name":"(anonymous_187)","line":2137,"loc":{"start":{"line":2137,"column":22},"end":{"line":2137,"column":37}}},"188":{"name":"(anonymous_188)","line":2150,"loc":{"start":{"line":2150,"column":11},"end":{"line":2150,"column":27}}},"189":{"name":"(anonymous_189)","line":2161,"loc":{"start":{"line":2161,"column":8},"end":{"line":2161,"column":24}}},"190":{"name":"(anonymous_190)","line":2184,"loc":{"start":{"line":2184,"column":9},"end":{"line":2184,"column":25}}},"191":{"name":"(anonymous_191)","line":2194,"loc":{"start":{"line":2194,"column":14},"end":{"line":2194,"column":30}}},"192":{"name":"(anonymous_192)","line":2213,"loc":{"start":{"line":2213,"column":9},"end":{"line":2213,"column":25}}},"193":{"name":"(anonymous_193)","line":2251,"loc":{"start":{"line":2251,"column":8},"end":{"line":2251,"column":35}}},"194":{"name":"(anonymous_194)","line":2254,"loc":{"start":{"line":2254,"column":16},"end":{"line":2254,"column":32}}},"195":{"name":"(anonymous_195)","line":2259,"loc":{"start":{"line":2259,"column":12},"end":{"line":2259,"column":27}}},"196":{"name":"(anonymous_196)","line":2277,"loc":{"start":{"line":2277,"column":7},"end":{"line":2277,"column":34}}},"197":{"name":"(anonymous_197)","line":2282,"loc":{"start":{"line":2282,"column":16},"end":{"line":2282,"column":32}}},"198":{"name":"(anonymous_198)","line":2287,"loc":{"start":{"line":2287,"column":12},"end":{"line":2287,"column":27}}},"199":{"name":"(anonymous_199)","line":2305,"loc":{"start":{"line":2305,"column":8},"end":{"line":2305,"column":35}}},"200":{"name":"(anonymous_200)","line":2311,"loc":{"start":{"line":2311,"column":12},"end":{"line":2311,"column":27}}},"201":{"name":"(anonymous_201)","line":2324,"loc":{"start":{"line":2324,"column":8},"end":{"line":2324,"column":35}}},"202":{"name":"(anonymous_202)","line":2329,"loc":{"start":{"line":2329,"column":12},"end":{"line":2329,"column":27}}},"203":{"name":"(anonymous_203)","line":2342,"loc":{"start":{"line":2342,"column":10},"end":{"line":2342,"column":37}}},"204":{"name":"(anonymous_204)","line":2347,"loc":{"start":{"line":2347,"column":12},"end":{"line":2347,"column":27}}},"205":{"name":"(anonymous_205)","line":2355,"loc":{"start":{"line":2355,"column":22},"end":{"line":2355,"column":40}}},"206":{"name":"(anonymous_206)","line":2356,"loc":{"start":{"line":2356,"column":24},"end":{"line":2356,"column":42}}},"207":{"name":"(anonymous_207)","line":2357,"loc":{"start":{"line":2357,"column":11},"end":{"line":2357,"column":38}}},"208":{"name":"(anonymous_208)","line":2359,"loc":{"start":{"line":2359,"column":14},"end":{"line":2359,"column":29}}},"209":{"name":"(anonymous_209)","line":2377,"loc":{"start":{"line":2377,"column":8},"end":{"line":2377,"column":29}}},"210":{"name":"(anonymous_210)","line":2389,"loc":{"start":{"line":2389,"column":8},"end":{"line":2389,"column":29}}},"211":{"name":"(anonymous_211)","line":2391,"loc":{"start":{"line":2391,"column":23},"end":{"line":2391,"column":44}}},"212":{"name":"(anonymous_212)","line":2403,"loc":{"start":{"line":2403,"column":9},"end":{"line":2403,"column":30}}},"213":{"name":"(anonymous_213)","line":2418,"loc":{"start":{"line":2418,"column":11},"end":{"line":2418,"column":32}}},"214":{"name":"(anonymous_214)","line":2430,"loc":{"start":{"line":2430,"column":8},"end":{"line":2430,"column":29}}},"215":{"name":"(anonymous_215)","line":2445,"loc":{"start":{"line":2445,"column":10},"end":{"line":2445,"column":31}}},"216":{"name":"(anonymous_216)","line":2460,"loc":{"start":{"line":2460,"column":7},"end":{"line":2460,"column":28}}},"217":{"name":"(anonymous_217)","line":2475,"loc":{"start":{"line":2475,"column":8},"end":{"line":2475,"column":29}}},"218":{"name":"(anonymous_218)","line":2491,"loc":{"start":{"line":2491,"column":10},"end":{"line":2491,"column":31}}},"219":{"name":"(anonymous_219)","line":2506,"loc":{"start":{"line":2506,"column":8},"end":{"line":2506,"column":29}}},"220":{"name":"(anonymous_220)","line":2518,"loc":{"start":{"line":2518,"column":13},"end":{"line":2518,"column":34}}},"221":{"name":"(anonymous_221)","line":2520,"loc":{"start":{"line":2520,"column":23},"end":{"line":2520,"column":44}}},"222":{"name":"(anonymous_222)","line":2532,"loc":{"start":{"line":2532,"column":8},"end":{"line":2532,"column":29}}},"223":{"name":"(anonymous_223)","line":2548,"loc":{"start":{"line":2548,"column":9},"end":{"line":2548,"column":30}}},"224":{"name":"(anonymous_224)","line":2563,"loc":{"start":{"line":2563,"column":13},"end":{"line":2563,"column":34}}},"225":{"name":"(anonymous_225)","line":2575,"loc":{"start":{"line":2575,"column":10},"end":{"line":2575,"column":31}}},"226":{"name":"(anonymous_226)","line":2592,"loc":{"start":{"line":2592,"column":16},"end":{"line":2592,"column":37}}},"227":{"name":"(anonymous_227)","line":2614,"loc":{"start":{"line":2614,"column":17},"end":{"line":2614,"column":38}}},"228":{"name":"(anonymous_228)","line":2630,"loc":{"start":{"line":2630,"column":11},"end":{"line":2630,"column":32}}},"229":{"name":"(anonymous_229)","line":2637,"loc":{"start":{"line":2637,"column":24},"end":{"line":2637,"column":37}}},"230":{"name":"(anonymous_230)","line":2653,"loc":{"start":{"line":2653,"column":17},"end":{"line":2653,"column":38}}},"231":{"name":"(anonymous_231)","line":2682,"loc":{"start":{"line":2682,"column":12},"end":{"line":2682,"column":33}}},"232":{"name":"(anonymous_232)","line":2693,"loc":{"start":{"line":2693,"column":10},"end":{"line":2693,"column":31}}},"233":{"name":"(anonymous_233)","line":2716,"loc":{"start":{"line":2716,"column":17},"end":{"line":2716,"column":38}}},"234":{"name":"(anonymous_234)","line":2735,"loc":{"start":{"line":2735,"column":11},"end":{"line":2735,"column":32}}},"235":{"name":"(anonymous_235)","line":2743,"loc":{"start":{"line":2743,"column":24},"end":{"line":2743,"column":42}}},"236":{"name":"(anonymous_236)","line":2754,"loc":{"start":{"line":2754,"column":9},"end":{"line":2754,"column":30}}},"237":{"name":"(anonymous_237)","line":2766,"loc":{"start":{"line":2766,"column":10},"end":{"line":2766,"column":31}}},"238":{"name":"(anonymous_238)","line":2781,"loc":{"start":{"line":2781,"column":8},"end":{"line":2781,"column":29}}},"239":{"name":"(anonymous_239)","line":2811,"loc":{"start":{"line":2811,"column":23},"end":{"line":2811,"column":45}}},"240":{"name":"(anonymous_240)","line":2830,"loc":{"start":{"line":2830,"column":8},"end":{"line":2830,"column":29}}},"241":{"name":"(anonymous_241)","line":2841,"loc":{"start":{"line":2841,"column":7},"end":{"line":2841,"column":28}}},"242":{"name":"(anonymous_242)","line":2852,"loc":{"start":{"line":2852,"column":8},"end":{"line":2852,"column":29}}},"243":{"name":"(anonymous_243)","line":2865,"loc":{"start":{"line":2865,"column":8},"end":{"line":2865,"column":29}}},"244":{"name":"(anonymous_244)","line":2873,"loc":{"start":{"line":2873,"column":66},"end":{"line":2873,"column":80}}},"245":{"name":"(anonymous_245)","line":2874,"loc":{"start":{"line":2874,"column":28},"end":{"line":2874,"column":49}}},"246":{"name":"(anonymous_246)","line":2889,"loc":{"start":{"line":2889,"column":9},"end":{"line":2889,"column":30}}},"247":{"name":"(anonymous_247)","line":2915,"loc":{"start":{"line":2915,"column":11},"end":{"line":2915,"column":32}}},"248":{"name":"(anonymous_248)","line":2920,"loc":{"start":{"line":2920,"column":41},"end":{"line":2920,"column":59}}},"249":{"name":"(anonymous_249)","line":2944,"loc":{"start":{"line":2944,"column":11},"end":{"line":2944,"column":32}}},"250":{"name":"(anonymous_250)","line":2972,"loc":{"start":{"line":2972,"column":14},"end":{"line":2972,"column":35}}},"251":{"name":"(anonymous_251)","line":2988,"loc":{"start":{"line":2988,"column":15},"end":{"line":2988,"column":36}}},"252":{"name":"(anonymous_252)","line":2998,"loc":{"start":{"line":2998,"column":14},"end":{"line":2998,"column":35}}},"253":{"name":"(anonymous_253)","line":3008,"loc":{"start":{"line":3008,"column":9},"end":{"line":3008,"column":30}}},"254":{"name":"(anonymous_254)","line":3018,"loc":{"start":{"line":3018,"column":10},"end":{"line":3018,"column":31}}},"255":{"name":"(anonymous_255)","line":3029,"loc":{"start":{"line":3029,"column":9},"end":{"line":3029,"column":30}}},"256":{"name":"(anonymous_256)","line":3050,"loc":{"start":{"line":3050,"column":9},"end":{"line":3050,"column":30}}},"257":{"name":"(anonymous_257)","line":3060,"loc":{"start":{"line":3060,"column":11},"end":{"line":3060,"column":32}}},"258":{"name":"(anonymous_258)","line":3070,"loc":{"start":{"line":3070,"column":11},"end":{"line":3070,"column":32}}},"259":{"name":"(anonymous_259)","line":3080,"loc":{"start":{"line":3080,"column":16},"end":{"line":3080,"column":37}}},"260":{"name":"(anonymous_260)","line":3103,"loc":{"start":{"line":3103,"column":17},"end":{"line":3103,"column":38}}},"261":{"name":"padDigits","line":3126,"loc":{"start":{"line":3126,"column":0},"end":{"line":3126,"column":36}}},"262":{"name":"(anonymous_262)","line":3136,"loc":{"start":{"line":3136,"column":12},"end":{"line":3136,"column":33}}},"263":{"name":"(anonymous_263)","line":3147,"loc":{"start":{"line":3147,"column":14},"end":{"line":3147,"column":35}}},"264":{"name":"(anonymous_264)","line":3159,"loc":{"start":{"line":3159,"column":20},"end":{"line":3159,"column":41}}},"265":{"name":"(anonymous_265)","line":3169,"loc":{"start":{"line":3169,"column":18},"end":{"line":3169,"column":39}}},"266":{"name":"(anonymous_266)","line":3179,"loc":{"start":{"line":3179,"column":13},"end":{"line":3179,"column":34}}},"267":{"name":"(anonymous_267)","line":3189,"loc":{"start":{"line":3189,"column":16},"end":{"line":3189,"column":37}}},"268":{"name":"(anonymous_268)","line":3199,"loc":{"start":{"line":3199,"column":19},"end":{"line":3199,"column":40}}},"269":{"name":"(anonymous_269)","line":3210,"loc":{"start":{"line":3210,"column":20},"end":{"line":3210,"column":41}}},"270":{"name":"(anonymous_270)","line":3226,"loc":{"start":{"line":3226,"column":11},"end":{"line":3226,"column":32}}},"271":{"name":"(anonymous_271)","line":3243,"loc":{"start":{"line":3243,"column":17},"end":{"line":3243,"column":38}}},"272":{"name":"(anonymous_272)","line":3284,"loc":{"start":{"line":3284,"column":10},"end":{"line":3284,"column":31}}},"273":{"name":"(anonymous_273)","line":3298,"loc":{"start":{"line":3298,"column":15},"end":{"line":3298,"column":36}}},"274":{"name":"(anonymous_274)","line":3316,"loc":{"start":{"line":3316,"column":11},"end":{"line":3316,"column":32}}},"275":{"name":"(anonymous_275)","line":3337,"loc":{"start":{"line":3337,"column":12},"end":{"line":3337,"column":33}}},"276":{"name":"(anonymous_276)","line":3349,"loc":{"start":{"line":3349,"column":12},"end":{"line":3349,"column":33}}},"277":{"name":"(anonymous_277)","line":3366,"loc":{"start":{"line":3366,"column":8},"end":{"line":3366,"column":29}}},"278":{"name":"(anonymous_278)","line":3380,"loc":{"start":{"line":3380,"column":25},"end":{"line":3380,"column":41}}},"279":{"name":"(anonymous_279)","line":3399,"loc":{"start":{"line":3399,"column":8},"end":{"line":3399,"column":29}}},"280":{"name":"(anonymous_280)","line":3406,"loc":{"start":{"line":3406,"column":19},"end":{"line":3406,"column":34}}},"281":{"name":"(anonymous_281)","line":3417,"loc":{"start":{"line":3417,"column":19},"end":{"line":3417,"column":34}}},"282":{"name":"ops","line":3468,"loc":{"start":{"line":3468,"column":0},"end":{"line":3468,"column":23}}},"283":{"name":"(anonymous_283)","line":3478,"loc":{"start":{"line":3478,"column":21},"end":{"line":3478,"column":44}}},"284":{"name":"(anonymous_284)","line":3493,"loc":{"start":{"line":3493,"column":21},"end":{"line":3493,"column":39}}},"285":{"name":"(anonymous_285)","line":3502,"loc":{"start":{"line":3502,"column":25},"end":{"line":3502,"column":43}}},"286":{"name":"(anonymous_286)","line":3503,"loc":{"start":{"line":3503,"column":23},"end":{"line":3503,"column":41}}},"287":{"name":"(anonymous_287)","line":3504,"loc":{"start":{"line":3504,"column":17},"end":{"line":3504,"column":44}}},"288":{"name":"(anonymous_288)","line":3506,"loc":{"start":{"line":3506,"column":20},"end":{"line":3506,"column":35}}},"289":{"name":"(anonymous_289)","line":3524,"loc":{"start":{"line":3524,"column":25},"end":{"line":3524,"column":43}}},"290":{"name":"(anonymous_290)","line":3525,"loc":{"start":{"line":3525,"column":23},"end":{"line":3525,"column":41}}},"291":{"name":"(anonymous_291)","line":3526,"loc":{"start":{"line":3526,"column":17},"end":{"line":3526,"column":48}}},"292":{"name":"(anonymous_292)","line":3534,"loc":{"start":{"line":3534,"column":25},"end":{"line":3534,"column":43}}},"293":{"name":"(anonymous_293)","line":3535,"loc":{"start":{"line":3535,"column":23},"end":{"line":3535,"column":41}}},"294":{"name":"(anonymous_294)","line":3536,"loc":{"start":{"line":3536,"column":17},"end":{"line":3536,"column":29}}},"295":{"name":"(anonymous_295)","line":3556,"loc":{"start":{"line":3556,"column":13},"end":{"line":3556,"column":57}}},"296":{"name":"(anonymous_296)","line":3567,"loc":{"start":{"line":3567,"column":15},"end":{"line":3567,"column":47}}},"297":{"name":"(anonymous_297)","line":3578,"loc":{"start":{"line":3578,"column":18},"end":{"line":3578,"column":50}}},"298":{"name":"(anonymous_298)","line":3596,"loc":{"start":{"line":3596,"column":9},"end":{"line":3596,"column":41}}},"299":{"name":"(anonymous_299)","line":3605,"loc":{"start":{"line":3605,"column":13},"end":{"line":3605,"column":33}}}},"statementMap":{"1":{"start":{"line":5,"column":1},"end":{"line":3618,"column":8}},"2":{"start":{"line":10,"column":0},"end":{"line":10,"column":14}},"3":{"start":{"line":11,"column":0},"end":{"line":11,"column":17}},"4":{"start":{"line":14,"column":0},"end":{"line":16,"column":1}},"5":{"start":{"line":15,"column":2},"end":{"line":15,"column":28}},"6":{"start":{"line":18,"column":0},"end":{"line":21,"column":1}},"7":{"start":{"line":19,"column":2},"end":{"line":19,"column":28}},"8":{"start":{"line":20,"column":2},"end":{"line":20,"column":14}},"9":{"start":{"line":23,"column":0},"end":{"line":23,"column":23}},"10":{"start":{"line":29,"column":0},"end":{"line":29,"column":32}},"11":{"start":{"line":30,"column":0},"end":{"line":30,"column":34}},"12":{"start":{"line":31,"column":0},"end":{"line":31,"column":30}},"13":{"start":{"line":38,"column":0},"end":{"line":64,"column":1}},"14":{"start":{"line":39,"column":2},"end":{"line":63,"column":3}},"15":{"start":{"line":40,"column":4},"end":{"line":44,"column":5}},"16":{"start":{"line":43,"column":6},"end":{"line":43,"column":93}},"17":{"start":{"line":46,"column":4},"end":{"line":46,"column":51}},"18":{"start":{"line":47,"column":4},"end":{"line":47,"column":22}},"19":{"start":{"line":48,"column":4},"end":{"line":48,"column":29}},"20":{"start":{"line":49,"column":4},"end":{"line":54,"column":5}},"21":{"start":{"line":50,"column":6},"end":{"line":53,"column":7}},"22":{"start":{"line":56,"column":4},"end":{"line":59,"column":5}},"23":{"start":{"line":58,"column":6},"end":{"line":58,"column":37}},"24":{"start":{"line":60,"column":4},"end":{"line":60,"column":33}},"25":{"start":{"line":62,"column":4},"end":{"line":62,"column":17}},"26":{"start":{"line":67,"column":0},"end":{"line":94,"column":1}},"27":{"start":{"line":68,"column":2},"end":{"line":93,"column":4}},"28":{"start":{"line":70,"column":6},"end":{"line":72,"column":7}},"29":{"start":{"line":71,"column":8},"end":{"line":71,"column":60}},"30":{"start":{"line":74,"column":6},"end":{"line":74,"column":26}},"31":{"start":{"line":75,"column":6},"end":{"line":75,"column":30}},"32":{"start":{"line":77,"column":6},"end":{"line":79,"column":7}},"33":{"start":{"line":78,"column":8},"end":{"line":78,"column":59}},"34":{"start":{"line":81,"column":6},"end":{"line":81,"column":32}},"35":{"start":{"line":82,"column":6},"end":{"line":82,"column":15}},"36":{"start":{"line":84,"column":6},"end":{"line":90,"column":7}},"37":{"start":{"line":85,"column":8},"end":{"line":85,"column":25}},"38":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"39":{"start":{"line":87,"column":10},"end":{"line":87,"column":23}},"40":{"start":{"line":89,"column":8},"end":{"line":89,"column":11}},"41":{"start":{"line":91,"column":6},"end":{"line":91,"column":22}},"42":{"start":{"line":97,"column":0},"end":{"line":123,"column":1}},"43":{"start":{"line":98,"column":2},"end":{"line":122,"column":4}},"44":{"start":{"line":100,"column":6},"end":{"line":102,"column":7}},"45":{"start":{"line":101,"column":8},"end":{"line":101,"column":60}},"46":{"start":{"line":104,"column":6},"end":{"line":104,"column":26}},"47":{"start":{"line":105,"column":6},"end":{"line":105,"column":30}},"48":{"start":{"line":107,"column":6},"end":{"line":109,"column":7}},"49":{"start":{"line":108,"column":8},"end":{"line":108,"column":59}},"50":{"start":{"line":111,"column":6},"end":{"line":111,"column":32}},"51":{"start":{"line":112,"column":6},"end":{"line":112,"column":15}},"52":{"start":{"line":113,"column":6},"end":{"line":119,"column":7}},"53":{"start":{"line":114,"column":8},"end":{"line":114,"column":25}},"54":{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},"55":{"start":{"line":116,"column":10},"end":{"line":116,"column":18}},"56":{"start":{"line":118,"column":8},"end":{"line":118,"column":11}},"57":{"start":{"line":120,"column":6},"end":{"line":120,"column":15}},"58":{"start":{"line":126,"column":0},"end":{"line":151,"column":1}},"59":{"start":{"line":127,"column":2},"end":{"line":150,"column":4}},"60":{"start":{"line":129,"column":6},"end":{"line":131,"column":7}},"61":{"start":{"line":130,"column":8},"end":{"line":130,"column":60}},"62":{"start":{"line":133,"column":6},"end":{"line":133,"column":26}},"63":{"start":{"line":134,"column":6},"end":{"line":134,"column":30}},"64":{"start":{"line":136,"column":6},"end":{"line":138,"column":7}},"65":{"start":{"line":137,"column":8},"end":{"line":137,"column":20}},"66":{"start":{"line":139,"column":6},"end":{"line":139,"column":27}},"67":{"start":{"line":140,"column":6},"end":{"line":140,"column":57}},"68":{"start":{"line":142,"column":6},"end":{"line":147,"column":7}},"69":{"start":{"line":143,"column":8},"end":{"line":145,"column":9}},"70":{"start":{"line":144,"column":10},"end":{"line":144,"column":21}},"71":{"start":{"line":146,"column":8},"end":{"line":146,"column":11}},"72":{"start":{"line":148,"column":6},"end":{"line":148,"column":18}},"73":{"start":{"line":154,"column":0},"end":{"line":178,"column":1}},"74":{"start":{"line":155,"column":2},"end":{"line":177,"column":3}},"75":{"start":{"line":157,"column":4},"end":{"line":159,"column":5}},"76":{"start":{"line":158,"column":6},"end":{"line":158,"column":71}},"77":{"start":{"line":161,"column":4},"end":{"line":161,"column":27}},"78":{"start":{"line":162,"column":4},"end":{"line":162,"column":47}},"79":{"start":{"line":164,"column":4},"end":{"line":175,"column":5}},"80":{"start":{"line":165,"column":6},"end":{"line":165,"column":34}},"81":{"start":{"line":167,"column":6},"end":{"line":174,"column":7}},"82":{"start":{"line":168,"column":8},"end":{"line":173,"column":9}},"83":{"start":{"line":170,"column":10},"end":{"line":172,"column":11}},"84":{"start":{"line":171,"column":12},"end":{"line":171,"column":45}},"85":{"start":{"line":176,"column":4},"end":{"line":176,"column":13}},"86":{"start":{"line":181,"column":0},"end":{"line":195,"column":1}},"87":{"start":{"line":182,"column":2},"end":{"line":194,"column":3}},"88":{"start":{"line":183,"column":4},"end":{"line":185,"column":5}},"89":{"start":{"line":184,"column":6},"end":{"line":184,"column":63}},"90":{"start":{"line":187,"column":4},"end":{"line":187,"column":19}},"91":{"start":{"line":188,"column":4},"end":{"line":192,"column":5}},"92":{"start":{"line":189,"column":6},"end":{"line":191,"column":7}},"93":{"start":{"line":190,"column":8},"end":{"line":190,"column":22}},"94":{"start":{"line":193,"column":4},"end":{"line":193,"column":17}},"95":{"start":{"line":198,"column":0},"end":{"line":211,"column":1}},"96":{"start":{"line":199,"column":2},"end":{"line":210,"column":3}},"97":{"start":{"line":200,"column":4},"end":{"line":202,"column":5}},"98":{"start":{"line":201,"column":6},"end":{"line":201,"column":65}},"99":{"start":{"line":203,"column":4},"end":{"line":203,"column":19}},"100":{"start":{"line":204,"column":4},"end":{"line":208,"column":5}},"101":{"start":{"line":205,"column":6},"end":{"line":207,"column":7}},"102":{"start":{"line":206,"column":8},"end":{"line":206,"column":25}},"103":{"start":{"line":209,"column":4},"end":{"line":209,"column":17}},"104":{"start":{"line":213,"column":0},"end":{"line":230,"column":1}},"105":{"start":{"line":214,"column":2},"end":{"line":229,"column":3}},"106":{"start":{"line":232,"column":0},"end":{"line":234,"column":1}},"107":{"start":{"line":233,"column":2},"end":{"line":233,"column":37}},"108":{"start":{"line":233,"column":25},"end":{"line":233,"column":37}},"109":{"start":{"line":236,"column":0},"end":{"line":238,"column":1}},"110":{"start":{"line":237,"column":2},"end":{"line":237,"column":36}},"111":{"start":{"line":243,"column":0},"end":{"line":252,"column":1}},"112":{"start":{"line":244,"column":2},"end":{"line":251,"column":3}},"113":{"start":{"line":246,"column":6},"end":{"line":246,"column":27}},"114":{"start":{"line":248,"column":6},"end":{"line":248,"column":28}},"115":{"start":{"line":250,"column":6},"end":{"line":250,"column":16}},"116":{"start":{"line":254,"column":0},"end":{"line":254,"column":50}},"117":{"start":{"line":254,"column":25},"end":{"line":254,"column":49}},"118":{"start":{"line":255,"column":0},"end":{"line":255,"column":54}},"119":{"start":{"line":255,"column":25},"end":{"line":255,"column":53}},"120":{"start":{"line":256,"column":0},"end":{"line":256,"column":52}},"121":{"start":{"line":256,"column":24},"end":{"line":256,"column":51}},"122":{"start":{"line":257,"column":0},"end":{"line":257,"column":52}},"123":{"start":{"line":257,"column":24},"end":{"line":257,"column":51}},"124":{"start":{"line":258,"column":0},"end":{"line":258,"column":50}},"125":{"start":{"line":258,"column":23},"end":{"line":258,"column":49}},"126":{"start":{"line":259,"column":0},"end":{"line":259,"column":52}},"127":{"start":{"line":259,"column":24},"end":{"line":259,"column":51}},"128":{"start":{"line":260,"column":0},"end":{"line":260,"column":52}},"129":{"start":{"line":260,"column":28},"end":{"line":260,"column":51}},"130":{"start":{"line":261,"column":0},"end":{"line":261,"column":48}},"131":{"start":{"line":261,"column":22},"end":{"line":261,"column":47}},"132":{"start":{"line":262,"column":0},"end":{"line":262,"column":55}},"133":{"start":{"line":262,"column":27},"end":{"line":262,"column":54}},"134":{"start":{"line":263,"column":0},"end":{"line":263,"column":59}},"135":{"start":{"line":263,"column":29},"end":{"line":263,"column":58}},"136":{"start":{"line":264,"column":0},"end":{"line":264,"column":57}},"137":{"start":{"line":264,"column":21},"end":{"line":264,"column":56}},"138":{"start":{"line":265,"column":0},"end":{"line":265,"column":48}},"139":{"start":{"line":265,"column":22},"end":{"line":265,"column":47}},"140":{"start":{"line":266,"column":0},"end":{"line":266,"column":58}},"141":{"start":{"line":266,"column":27},"end":{"line":266,"column":57}},"142":{"start":{"line":267,"column":0},"end":{"line":267,"column":58}},"143":{"start":{"line":267,"column":31},"end":{"line":267,"column":57}},"144":{"start":{"line":268,"column":0},"end":{"line":268,"column":62}},"145":{"start":{"line":268,"column":34},"end":{"line":268,"column":61}},"146":{"start":{"line":269,"column":0},"end":{"line":269,"column":38}},"147":{"start":{"line":269,"column":24},"end":{"line":269,"column":37}},"148":{"start":{"line":270,"column":0},"end":{"line":270,"column":37}},"149":{"start":{"line":270,"column":24},"end":{"line":270,"column":36}},"150":{"start":{"line":271,"column":0},"end":{"line":276,"column":1}},"151":{"start":{"line":272,"column":2},"end":{"line":275,"column":6}},"152":{"start":{"line":278,"column":0},"end":{"line":278,"column":50}},"153":{"start":{"line":278,"column":21},"end":{"line":278,"column":49}},"154":{"start":{"line":279,"column":0},"end":{"line":279,"column":102}},"155":{"start":{"line":279,"column":27},"end":{"line":279,"column":101}},"156":{"start":{"line":280,"column":0},"end":{"line":280,"column":78}},"157":{"start":{"line":280,"column":27},"end":{"line":280,"column":77}},"158":{"start":{"line":281,"column":0},"end":{"line":281,"column":39}},"159":{"start":{"line":281,"column":19},"end":{"line":281,"column":38}},"160":{"start":{"line":282,"column":0},"end":{"line":282,"column":43}},"161":{"start":{"line":282,"column":20},"end":{"line":282,"column":42}},"162":{"start":{"line":293,"column":0},"end":{"line":304,"column":1}},"163":{"start":{"line":294,"column":2},"end":{"line":294,"column":90}},"164":{"start":{"line":295,"column":2},"end":{"line":303,"column":3}},"165":{"start":{"line":296,"column":4},"end":{"line":296,"column":30}},"166":{"start":{"line":298,"column":4},"end":{"line":302,"column":5}},"167":{"start":{"line":299,"column":6},"end":{"line":301,"column":7}},"168":{"start":{"line":300,"column":8},"end":{"line":300,"column":37}},"169":{"start":{"line":314,"column":0},"end":{"line":327,"column":1}},"170":{"start":{"line":315,"column":2},"end":{"line":325,"column":3}},"171":{"start":{"line":316,"column":4},"end":{"line":316,"column":33}},"172":{"start":{"line":317,"column":9},"end":{"line":325,"column":3}},"173":{"start":{"line":318,"column":4},"end":{"line":318,"column":14}},"174":{"start":{"line":319,"column":4},"end":{"line":319,"column":23}},"175":{"start":{"line":320,"column":4},"end":{"line":323,"column":5}},"176":{"start":{"line":321,"column":6},"end":{"line":321,"column":16}},"177":{"start":{"line":322,"column":6},"end":{"line":322,"column":42}},"178":{"start":{"line":324,"column":4},"end":{"line":324,"column":12}},"179":{"start":{"line":326,"column":2},"end":{"line":326,"column":46}},"180":{"start":{"line":336,"column":0},"end":{"line":338,"column":1}},"181":{"start":{"line":337,"column":2},"end":{"line":337,"column":42}},"182":{"start":{"line":347,"column":0},"end":{"line":352,"column":1}},"183":{"start":{"line":348,"column":2},"end":{"line":348,"column":14}},"184":{"start":{"line":349,"column":2},"end":{"line":349,"column":15}},"185":{"start":{"line":350,"column":2},"end":{"line":350,"column":49}},"186":{"start":{"line":351,"column":2},"end":{"line":351,"column":12}},"187":{"start":{"line":360,"column":0},"end":{"line":374,"column":1}},"188":{"start":{"line":361,"column":2},"end":{"line":361,"column":47}},"189":{"start":{"line":362,"column":2},"end":{"line":362,"column":14}},"190":{"start":{"line":363,"column":2},"end":{"line":371,"column":3}},"191":{"start":{"line":364,"column":4},"end":{"line":370,"column":5}},"192":{"start":{"line":365,"column":6},"end":{"line":369,"column":7}},"193":{"start":{"line":366,"column":8},"end":{"line":366,"column":45}},"194":{"start":{"line":368,"column":8},"end":{"line":368,"column":23}},"195":{"start":{"line":372,"column":2},"end":{"line":372,"column":25}},"196":{"start":{"line":373,"column":2},"end":{"line":373,"column":12}},"197":{"start":{"line":383,"column":0},"end":{"line":432,"column":1}},"198":{"start":{"line":385,"column":2},"end":{"line":385,"column":26}},"199":{"start":{"line":385,"column":15},"end":{"line":385,"column":26}},"200":{"start":{"line":388,"column":2},"end":{"line":388,"column":23}},"201":{"start":{"line":389,"column":2},"end":{"line":389,"column":39}},"202":{"start":{"line":389,"column":27},"end":{"line":389,"column":39}},"203":{"start":{"line":392,"column":2},"end":{"line":392,"column":60}},"204":{"start":{"line":392,"column":49},"end":{"line":392,"column":60}},"205":{"start":{"line":395,"column":2},"end":{"line":395,"column":77}},"206":{"start":{"line":395,"column":41},"end":{"line":395,"column":77}},"207":{"start":{"line":397,"column":2},"end":{"line":397,"column":7}},"208":{"start":{"line":398,"column":2},"end":{"line":398,"column":9}},"209":{"start":{"line":400,"column":2},"end":{"line":429,"column":3}},"210":{"start":{"line":401,"column":4},"end":{"line":401,"column":60}},"211":{"start":{"line":401,"column":49},"end":{"line":401,"column":60}},"212":{"start":{"line":402,"column":4},"end":{"line":402,"column":43}},"213":{"start":{"line":402,"column":31},"end":{"line":402,"column":43}},"214":{"start":{"line":403,"column":4},"end":{"line":405,"column":5}},"215":{"start":{"line":404,"column":6},"end":{"line":404,"column":44}},"216":{"start":{"line":404,"column":32},"end":{"line":404,"column":44}},"217":{"start":{"line":406,"column":9},"end":{"line":429,"column":3}},"218":{"start":{"line":408,"column":4},"end":{"line":408,"column":20}},"219":{"start":{"line":409,"column":4},"end":{"line":409,"column":20}},"220":{"start":{"line":412,"column":4},"end":{"line":412,"column":45}},"221":{"start":{"line":412,"column":33},"end":{"line":412,"column":45}},"222":{"start":{"line":415,"column":4},"end":{"line":415,"column":13}},"223":{"start":{"line":416,"column":4},"end":{"line":416,"column":13}},"224":{"start":{"line":419,"column":4},"end":{"line":419,"column":38}},"225":{"start":{"line":419,"column":26},"end":{"line":419,"column":38}},"226":{"start":{"line":422,"column":4},"end":{"line":425,"column":5}},"227":{"start":{"line":423,"column":6},"end":{"line":423,"column":22}},"228":{"start":{"line":424,"column":6},"end":{"line":424,"column":50}},"229":{"start":{"line":424,"column":38},"end":{"line":424,"column":50}},"230":{"start":{"line":428,"column":4},"end":{"line":428,"column":16}},"231":{"start":{"line":431,"column":2},"end":{"line":431,"column":13}},"232":{"start":{"line":439,"column":0},"end":{"line":450,"column":1}},"233":{"start":{"line":440,"column":2},"end":{"line":440,"column":12}},"234":{"start":{"line":441,"column":2},"end":{"line":441,"column":14}},"235":{"start":{"line":442,"column":2},"end":{"line":448,"column":4}},"236":{"start":{"line":443,"column":4},"end":{"line":443,"column":25}},"237":{"start":{"line":444,"column":4},"end":{"line":447,"column":5}},"238":{"start":{"line":445,"column":6},"end":{"line":445,"column":20}},"239":{"start":{"line":446,"column":6},"end":{"line":446,"column":14}},"240":{"start":{"line":449,"column":2},"end":{"line":449,"column":12}},"241":{"start":{"line":453,"column":0},"end":{"line":455,"column":1}},"242":{"start":{"line":454,"column":2},"end":{"line":454,"column":61}},"243":{"start":{"line":459,"column":0},"end":{"line":468,"column":1}},"244":{"start":{"line":460,"column":2},"end":{"line":460,"column":46}},"245":{"start":{"line":461,"column":2},"end":{"line":461,"column":33}},"246":{"start":{"line":461,"column":22},"end":{"line":461,"column":33}},"247":{"start":{"line":462,"column":2},"end":{"line":466,"column":3}},"248":{"start":{"line":463,"column":4},"end":{"line":463,"column":25}},"249":{"start":{"line":464,"column":4},"end":{"line":464,"column":37}},"250":{"start":{"line":465,"column":4},"end":{"line":465,"column":13}},"251":{"start":{"line":467,"column":2},"end":{"line":467,"column":24}},"252":{"start":{"line":476,"column":0},"end":{"line":501,"column":1}},"253":{"start":{"line":477,"column":2},"end":{"line":477,"column":19}},"254":{"start":{"line":478,"column":2},"end":{"line":478,"column":17}},"255":{"start":{"line":479,"column":2},"end":{"line":479,"column":45}},"256":{"start":{"line":480,"column":2},"end":{"line":488,"column":3}},"257":{"start":{"line":481,"column":4},"end":{"line":481,"column":23}},"258":{"start":{"line":482,"column":4},"end":{"line":482,"column":30}},"259":{"start":{"line":483,"column":4},"end":{"line":483,"column":23}},"260":{"start":{"line":484,"column":4},"end":{"line":486,"column":5}},"261":{"start":{"line":485,"column":6},"end":{"line":485,"column":31}},"262":{"start":{"line":487,"column":4},"end":{"line":487,"column":27}},"263":{"start":{"line":490,"column":2},"end":{"line":498,"column":4}},"264":{"start":{"line":491,"column":4},"end":{"line":491,"column":32}},"265":{"start":{"line":492,"column":4},"end":{"line":492,"column":32}},"266":{"start":{"line":493,"column":4},"end":{"line":493,"column":30}},"267":{"start":{"line":493,"column":21},"end":{"line":493,"column":30}},"268":{"start":{"line":494,"column":4},"end":{"line":494,"column":29}},"269":{"start":{"line":494,"column":21},"end":{"line":494,"column":29}},"270":{"start":{"line":495,"column":4},"end":{"line":495,"column":30}},"271":{"start":{"line":495,"column":21},"end":{"line":495,"column":30}},"272":{"start":{"line":496,"column":4},"end":{"line":496,"column":29}},"273":{"start":{"line":496,"column":21},"end":{"line":496,"column":29}},"274":{"start":{"line":497,"column":4},"end":{"line":497,"column":12}},"275":{"start":{"line":499,"column":2},"end":{"line":499,"column":85}},"276":{"start":{"line":500,"column":2},"end":{"line":500,"column":15}},"277":{"start":{"line":509,"column":0},"end":{"line":534,"column":1}},"278":{"start":{"line":510,"column":2},"end":{"line":513,"column":3}},"279":{"start":{"line":515,"column":2},"end":{"line":515,"column":17}},"280":{"start":{"line":517,"column":2},"end":{"line":530,"column":4}},"281":{"start":{"line":518,"column":4},"end":{"line":518,"column":31}},"282":{"start":{"line":519,"column":4},"end":{"line":519,"column":27}},"283":{"start":{"line":520,"column":4},"end":{"line":520,"column":18}},"284":{"start":{"line":522,"column":4},"end":{"line":527,"column":5}},"285":{"start":{"line":523,"column":6},"end":{"line":523,"column":32}},"286":{"start":{"line":524,"column":6},"end":{"line":524,"column":26}},"287":{"start":{"line":525,"column":6},"end":{"line":525,"column":27}},"288":{"start":{"line":526,"column":6},"end":{"line":526,"column":28}},"289":{"start":{"line":528,"column":4},"end":{"line":528,"column":24}},"290":{"start":{"line":529,"column":4},"end":{"line":529,"column":34}},"291":{"start":{"line":532,"column":2},"end":{"line":532,"column":102}},"292":{"start":{"line":533,"column":2},"end":{"line":533,"column":15}},"293":{"start":{"line":536,"column":0},"end":{"line":538,"column":1}},"294":{"start":{"line":537,"column":2},"end":{"line":537,"column":35}},"295":{"start":{"line":545,"column":0},"end":{"line":547,"column":1}},"296":{"start":{"line":553,"column":0},"end":{"line":555,"column":1}},"297":{"start":{"line":554,"column":2},"end":{"line":554,"column":40}},"298":{"start":{"line":561,"column":0},"end":{"line":565,"column":1}},"299":{"start":{"line":562,"column":2},"end":{"line":564,"column":4}},"300":{"start":{"line":571,"column":0},"end":{"line":574,"column":1}},"301":{"start":{"line":572,"column":40},"end":{"line":572,"column":56}},"302":{"start":{"line":573,"column":43},"end":{"line":573,"column":54}},"303":{"start":{"line":580,"column":0},"end":{"line":612,"column":1}},"304":{"start":{"line":581,"column":40},"end":{"line":581,"column":51}},"305":{"start":{"line":582,"column":41},"end":{"line":582,"column":58}},"306":{"start":{"line":585,"column":4},"end":{"line":585,"column":39}},"307":{"start":{"line":585,"column":29},"end":{"line":585,"column":39}},"308":{"start":{"line":587,"column":4},"end":{"line":587,"column":14}},"309":{"start":{"line":589,"column":4},"end":{"line":609,"column":6}},"310":{"start":{"line":590,"column":6},"end":{"line":608,"column":7}},"311":{"start":{"line":591,"column":8},"end":{"line":601,"column":9}},"312":{"start":{"line":592,"column":10},"end":{"line":592,"column":21}},"313":{"start":{"line":593,"column":10},"end":{"line":598,"column":12}},"314":{"start":{"line":594,"column":12},"end":{"line":596,"column":13}},"315":{"start":{"line":595,"column":14},"end":{"line":595,"column":47}},"316":{"start":{"line":597,"column":12},"end":{"line":597,"column":53}},"317":{"start":{"line":597,"column":36},"end":{"line":597,"column":53}},"318":{"start":{"line":600,"column":10},"end":{"line":600,"column":48}},"319":{"start":{"line":603,"column":8},"end":{"line":607,"column":9}},"320":{"start":{"line":604,"column":10},"end":{"line":604,"column":25}},"321":{"start":{"line":606,"column":10},"end":{"line":606,"column":27}},"322":{"start":{"line":610,"column":4},"end":{"line":610,"column":14}},"323":{"start":{"line":615,"column":0},"end":{"line":615,"column":36}},"324":{"start":{"line":616,"column":0},"end":{"line":616,"column":39}},"325":{"start":{"line":621,"column":0},"end":{"line":623,"column":1}},"326":{"start":{"line":622,"column":2},"end":{"line":622,"column":21}},"327":{"start":{"line":632,"column":0},"end":{"line":634,"column":1}},"328":{"start":{"line":633,"column":2},"end":{"line":633,"column":19}},"329":{"start":{"line":642,"column":0},"end":{"line":675,"column":1}},"330":{"start":{"line":643,"column":2},"end":{"line":643,"column":33}},"331":{"start":{"line":644,"column":2},"end":{"line":644,"column":17}},"332":{"start":{"line":646,"column":2},"end":{"line":672,"column":3}},"333":{"start":{"line":647,"column":4},"end":{"line":647,"column":48}},"334":{"start":{"line":649,"column":4},"end":{"line":669,"column":5}},"335":{"start":{"line":653,"column":6},"end":{"line":655,"column":7}},"336":{"start":{"line":654,"column":8},"end":{"line":654,"column":20}},"337":{"start":{"line":657,"column":6},"end":{"line":659,"column":8}},"338":{"start":{"line":658,"column":8},"end":{"line":658,"column":44}},"339":{"start":{"line":663,"column":6},"end":{"line":665,"column":7}},"340":{"start":{"line":664,"column":8},"end":{"line":664,"column":24}},"341":{"start":{"line":667,"column":6},"end":{"line":667,"column":39}},"342":{"start":{"line":668,"column":6},"end":{"line":668,"column":22}},"343":{"start":{"line":671,"column":4},"end":{"line":671,"column":33}},"344":{"start":{"line":671,"column":28},"end":{"line":671,"column":33}},"345":{"start":{"line":674,"column":2},"end":{"line":674,"column":14}},"346":{"start":{"line":684,"column":0},"end":{"line":727,"column":1}},"347":{"start":{"line":685,"column":2},"end":{"line":685,"column":30}},"348":{"start":{"line":685,"column":24},"end":{"line":685,"column":30}},"349":{"start":{"line":687,"column":2},"end":{"line":687,"column":33}},"350":{"start":{"line":688,"column":2},"end":{"line":688,"column":20}},"351":{"start":{"line":690,"column":2},"end":{"line":690,"column":59}},"352":{"start":{"line":691,"column":2},"end":{"line":691,"column":43}},"353":{"start":{"line":692,"column":2},"end":{"line":692,"column":32}},"354":{"start":{"line":693,"column":2},"end":{"line":693,"column":12}},"355":{"start":{"line":694,"column":2},"end":{"line":694,"column":11}},"356":{"start":{"line":696,"column":2},"end":{"line":724,"column":3}},"357":{"start":{"line":697,"column":4},"end":{"line":721,"column":5}},"358":{"start":{"line":698,"column":6},"end":{"line":712,"column":7}},"359":{"start":{"line":699,"column":8},"end":{"line":699,"column":35}},"360":{"start":{"line":700,"column":8},"end":{"line":702,"column":9}},"361":{"start":{"line":701,"column":10},"end":{"line":701,"column":43}},"362":{"start":{"line":703,"column":8},"end":{"line":703,"column":28}},"363":{"start":{"line":704,"column":8},"end":{"line":704,"column":25}},"364":{"start":{"line":706,"column":8},"end":{"line":706,"column":19}},"365":{"start":{"line":707,"column":8},"end":{"line":710,"column":10}},"366":{"start":{"line":708,"column":10},"end":{"line":708,"column":44}},"367":{"start":{"line":709,"column":10},"end":{"line":709,"column":53}},"368":{"start":{"line":709,"column":35},"end":{"line":709,"column":53}},"369":{"start":{"line":711,"column":8},"end":{"line":711,"column":33}},"370":{"start":{"line":714,"column":6},"end":{"line":714,"column":32}},"371":{"start":{"line":715,"column":6},"end":{"line":717,"column":7}},"372":{"start":{"line":716,"column":8},"end":{"line":716,"column":39}},"373":{"start":{"line":718,"column":6},"end":{"line":718,"column":25}},"374":{"start":{"line":719,"column":6},"end":{"line":719,"column":17}},"375":{"start":{"line":720,"column":6},"end":{"line":720,"column":25}},"376":{"start":{"line":723,"column":4},"end":{"line":723,"column":22}},"377":{"start":{"line":726,"column":2},"end":{"line":726,"column":15}},"378":{"start":{"line":737,"column":0},"end":{"line":760,"column":1}},"379":{"start":{"line":738,"column":2},"end":{"line":738,"column":33}},"380":{"start":{"line":739,"column":2},"end":{"line":739,"column":20}},"381":{"start":{"line":740,"column":2},"end":{"line":740,"column":59}},"382":{"start":{"line":742,"column":2},"end":{"line":759,"column":3}},"383":{"start":{"line":743,"column":4},"end":{"line":743,"column":16}},"384":{"start":{"line":745,"column":4},"end":{"line":758,"column":5}},"385":{"start":{"line":746,"column":6},"end":{"line":748,"column":8}},"386":{"start":{"line":747,"column":8},"end":{"line":747,"column":43}},"387":{"start":{"line":751,"column":6},"end":{"line":756,"column":7}},"388":{"start":{"line":752,"column":8},"end":{"line":752,"column":34}},"389":{"start":{"line":753,"column":8},"end":{"line":755,"column":9}},"390":{"start":{"line":754,"column":10},"end":{"line":754,"column":23}},"391":{"start":{"line":757,"column":6},"end":{"line":757,"column":41}},"392":{"start":{"line":769,"column":0},"end":{"line":773,"column":1}},"393":{"start":{"line":770,"column":2},"end":{"line":772,"column":10}},"394":{"start":{"line":771,"column":4},"end":{"line":771,"column":21}},"395":{"start":{"line":775,"column":0},"end":{"line":783,"column":1}},"396":{"start":{"line":776,"column":2},"end":{"line":782,"column":4}},"397":{"start":{"line":777,"column":4},"end":{"line":781,"column":5}},"398":{"start":{"line":778,"column":6},"end":{"line":778,"column":35}},"399":{"start":{"line":779,"column":11},"end":{"line":781,"column":5}},"400":{"start":{"line":780,"column":6},"end":{"line":780,"column":22}},"401":{"start":{"line":787,"column":0},"end":{"line":789,"column":1}},"402":{"start":{"line":791,"column":0},"end":{"line":798,"column":1}},"403":{"start":{"line":792,"column":2},"end":{"line":796,"column":3}},"404":{"start":{"line":793,"column":4},"end":{"line":795,"column":5}},"405":{"start":{"line":794,"column":6},"end":{"line":794,"column":17}},"406":{"start":{"line":797,"column":2},"end":{"line":797,"column":14}},"407":{"start":{"line":801,"column":0},"end":{"line":803,"column":1}},"408":{"start":{"line":802,"column":2},"end":{"line":802,"column":51}},"409":{"start":{"line":810,"column":0},"end":{"line":843,"column":1}},"410":{"start":{"line":812,"column":2},"end":{"line":814,"column":3}},"411":{"start":{"line":813,"column":4},"end":{"line":813,"column":60}},"412":{"start":{"line":817,"column":2},"end":{"line":840,"column":3}},"413":{"start":{"line":818,"column":4},"end":{"line":818,"column":29}},"414":{"start":{"line":819,"column":4},"end":{"line":819,"column":70}},"415":{"start":{"line":822,"column":4},"end":{"line":824,"column":5}},"416":{"start":{"line":823,"column":6},"end":{"line":823,"column":26}},"417":{"start":{"line":827,"column":4},"end":{"line":839,"column":5}},"418":{"start":{"line":828,"column":6},"end":{"line":828,"column":32}},"419":{"start":{"line":829,"column":6},"end":{"line":829,"column":42}},"420":{"start":{"line":830,"column":6},"end":{"line":830,"column":24}},"421":{"start":{"line":831,"column":6},"end":{"line":836,"column":7}},"422":{"start":{"line":832,"column":8},"end":{"line":832,"column":79}},"423":{"start":{"line":833,"column":8},"end":{"line":833,"column":78}},"424":{"start":{"line":834,"column":8},"end":{"line":834,"column":75}},"425":{"start":{"line":835,"column":8},"end":{"line":835,"column":44}},"426":{"start":{"line":837,"column":6},"end":{"line":837,"column":28}},"427":{"start":{"line":838,"column":6},"end":{"line":838,"column":29}},"428":{"start":{"line":842,"column":2},"end":{"line":842,"column":13}},"429":{"start":{"line":853,"column":0},"end":{"line":919,"column":1}},"430":{"start":{"line":854,"column":2},"end":{"line":854,"column":17}},"431":{"start":{"line":855,"column":2},"end":{"line":855,"column":35}},"432":{"start":{"line":858,"column":2},"end":{"line":860,"column":3}},"433":{"start":{"line":859,"column":4},"end":{"line":859,"column":52}},"434":{"start":{"line":863,"column":2},"end":{"line":869,"column":3}},"435":{"start":{"line":865,"column":4},"end":{"line":865,"column":44}},"436":{"start":{"line":866,"column":4},"end":{"line":866,"column":80}},"437":{"start":{"line":868,"column":4},"end":{"line":868,"column":48}},"438":{"start":{"line":873,"column":2},"end":{"line":892,"column":3}},"439":{"start":{"line":875,"column":4},"end":{"line":879,"column":5}},"440":{"start":{"line":876,"column":6},"end":{"line":876,"column":50}},"441":{"start":{"line":877,"column":11},"end":{"line":879,"column":5}},"442":{"start":{"line":878,"column":6},"end":{"line":878,"column":17}},"443":{"start":{"line":882,"column":4},"end":{"line":882,"column":85}},"444":{"start":{"line":882,"column":48},"end":{"line":882,"column":83}},"445":{"start":{"line":883,"column":4},"end":{"line":889,"column":5}},"446":{"start":{"line":884,"column":6},"end":{"line":884,"column":24}},"447":{"start":{"line":885,"column":6},"end":{"line":887,"column":7}},"448":{"start":{"line":886,"column":8},"end":{"line":886,"column":22}},"449":{"start":{"line":888,"column":6},"end":{"line":888,"column":39}},"450":{"start":{"line":891,"column":4},"end":{"line":891,"column":38}},"451":{"start":{"line":895,"column":2},"end":{"line":918,"column":3}},"452":{"start":{"line":897,"column":6},"end":{"line":899,"column":8}},"453":{"start":{"line":898,"column":8},"end":{"line":898,"column":44}},"454":{"start":{"line":901,"column":6},"end":{"line":901,"column":21}},"455":{"start":{"line":902,"column":6},"end":{"line":914,"column":7}},"456":{"start":{"line":903,"column":8},"end":{"line":913,"column":9}},"457":{"start":{"line":904,"column":10},"end":{"line":904,"column":62}},"458":{"start":{"line":907,"column":10},"end":{"line":912,"column":11}},"459":{"start":{"line":909,"column":12},"end":{"line":909,"column":103}},"460":{"start":{"line":910,"column":12},"end":{"line":910,"column":32}},"461":{"start":{"line":911,"column":12},"end":{"line":911,"column":17}},"462":{"start":{"line":915,"column":6},"end":{"line":915,"column":19}},"463":{"start":{"line":917,"column":6},"end":{"line":917,"column":24}},"464":{"start":{"line":929,"column":0},"end":{"line":948,"column":1}},"465":{"start":{"line":932,"column":2},"end":{"line":946,"column":3}},"466":{"start":{"line":933,"column":4},"end":{"line":939,"column":5}},"467":{"start":{"line":934,"column":6},"end":{"line":934,"column":42}},"468":{"start":{"line":935,"column":6},"end":{"line":935,"column":34}},"469":{"start":{"line":937,"column":6},"end":{"line":937,"column":18}},"470":{"start":{"line":938,"column":6},"end":{"line":938,"column":14}},"471":{"start":{"line":941,"column":4},"end":{"line":943,"column":5}},"472":{"start":{"line":942,"column":6},"end":{"line":942,"column":42}},"473":{"start":{"line":944,"column":4},"end":{"line":944,"column":100}},"474":{"start":{"line":945,"column":4},"end":{"line":945,"column":17}},"475":{"start":{"line":947,"column":2},"end":{"line":947,"column":50}},"476":{"start":{"line":955,"column":0},"end":{"line":963,"column":1}},"477":{"start":{"line":956,"column":2},"end":{"line":956,"column":71}},"478":{"start":{"line":956,"column":51},"end":{"line":956,"column":66}},"479":{"start":{"line":957,"column":2},"end":{"line":957,"column":33}},"480":{"start":{"line":958,"column":2},"end":{"line":958,"column":40}},"481":{"start":{"line":959,"column":2},"end":{"line":959,"column":27}},"482":{"start":{"line":960,"column":2},"end":{"line":962,"column":3}},"483":{"start":{"line":961,"column":43},"end":{"line":961,"column":77}},"484":{"start":{"line":972,"column":0},"end":{"line":980,"column":1}},"485":{"start":{"line":973,"column":2},"end":{"line":973,"column":17}},"486":{"start":{"line":974,"column":2},"end":{"line":974,"column":35}},"487":{"start":{"line":976,"column":2},"end":{"line":976,"column":49}},"488":{"start":{"line":977,"column":2},"end":{"line":979,"column":12}},"489":{"start":{"line":988,"column":0},"end":{"line":992,"column":1}},"490":{"start":{"line":989,"column":2},"end":{"line":989,"column":81}},"491":{"start":{"line":989,"column":43},"end":{"line":989,"column":81}},"492":{"start":{"line":991,"column":2},"end":{"line":991,"column":30}},"493":{"start":{"line":1001,"column":0},"end":{"line":1020,"column":1}},"494":{"start":{"line":1002,"column":2},"end":{"line":1018,"column":3}},"495":{"start":{"line":1004,"column":4},"end":{"line":1017,"column":5}},"496":{"start":{"line":1005,"column":6},"end":{"line":1005,"column":40}},"497":{"start":{"line":1006,"column":6},"end":{"line":1006,"column":30}},"498":{"start":{"line":1007,"column":6},"end":{"line":1016,"column":7}},"499":{"start":{"line":1008,"column":8},"end":{"line":1008,"column":20}},"500":{"start":{"line":1009,"column":8},"end":{"line":1013,"column":9}},"501":{"start":{"line":1010,"column":10},"end":{"line":1010,"column":84}},"502":{"start":{"line":1012,"column":10},"end":{"line":1012,"column":72}},"503":{"start":{"line":1015,"column":8},"end":{"line":1015,"column":60}},"504":{"start":{"line":1019,"column":2},"end":{"line":1019,"column":19}},"505":{"start":{"line":1029,"column":0},"end":{"line":1040,"column":1}},"506":{"start":{"line":1030,"column":2},"end":{"line":1032,"column":3}},"507":{"start":{"line":1031,"column":4},"end":{"line":1031,"column":58}},"508":{"start":{"line":1034,"column":2},"end":{"line":1034,"column":22}},"509":{"start":{"line":1035,"column":2},"end":{"line":1035,"column":32}},"510":{"start":{"line":1036,"column":2},"end":{"line":1036,"column":54}},"511":{"start":{"line":1037,"column":2},"end":{"line":1037,"column":23}},"512":{"start":{"line":1038,"column":2},"end":{"line":1038,"column":23}},"513":{"start":{"line":1039,"column":2},"end":{"line":1039,"column":21}},"514":{"start":{"line":1042,"column":0},"end":{"line":1194,"column":1}},"515":{"start":{"line":1045,"column":4},"end":{"line":1045,"column":19}},"516":{"start":{"line":1047,"column":4},"end":{"line":1049,"column":5}},"517":{"start":{"line":1048,"column":6},"end":{"line":1048,"column":26}},"518":{"start":{"line":1052,"column":4},"end":{"line":1054,"column":5}},"519":{"start":{"line":1053,"column":6},"end":{"line":1053,"column":70}},"520":{"start":{"line":1056,"column":4},"end":{"line":1058,"column":5}},"521":{"start":{"line":1057,"column":6},"end":{"line":1057,"column":72}},"522":{"start":{"line":1061,"column":4},"end":{"line":1061,"column":77}},"523":{"start":{"line":1062,"column":4},"end":{"line":1062,"column":21}},"524":{"start":{"line":1064,"column":4},"end":{"line":1070,"column":6}},"525":{"start":{"line":1065,"column":6},"end":{"line":1069,"column":7}},"526":{"start":{"line":1066,"column":8},"end":{"line":1066,"column":25}},"527":{"start":{"line":1067,"column":8},"end":{"line":1067,"column":43}},"528":{"start":{"line":1068,"column":8},"end":{"line":1068,"column":31}},"529":{"start":{"line":1072,"column":4},"end":{"line":1075,"column":5}},"530":{"start":{"line":1073,"column":6},"end":{"line":1073,"column":53}},"531":{"start":{"line":1074,"column":6},"end":{"line":1074,"column":65}},"532":{"start":{"line":1076,"column":4},"end":{"line":1076,"column":24}},"533":{"start":{"line":1084,"column":4},"end":{"line":1084,"column":24}},"534":{"start":{"line":1092,"column":4},"end":{"line":1092,"column":53}},"535":{"start":{"line":1100,"column":4},"end":{"line":1100,"column":68}},"536":{"start":{"line":1108,"column":4},"end":{"line":1108,"column":31}},"537":{"start":{"line":1117,"column":4},"end":{"line":1117,"column":49}},"538":{"start":{"line":1118,"column":4},"end":{"line":1118,"column":15}},"539":{"start":{"line":1127,"column":4},"end":{"line":1127,"column":50}},"540":{"start":{"line":1128,"column":4},"end":{"line":1128,"column":15}},"541":{"start":{"line":1137,"column":4},"end":{"line":1137,"column":56}},"542":{"start":{"line":1138,"column":4},"end":{"line":1138,"column":15}},"543":{"start":{"line":1146,"column":4},"end":{"line":1148,"column":5}},"544":{"start":{"line":1147,"column":6},"end":{"line":1147,"column":45}},"545":{"start":{"line":1149,"column":4},"end":{"line":1149,"column":15}},"546":{"start":{"line":1157,"column":4},"end":{"line":1157,"column":41}},"547":{"start":{"line":1166,"column":4},"end":{"line":1166,"column":51}},"548":{"start":{"line":1175,"column":4},"end":{"line":1175,"column":51}},"549":{"start":{"line":1184,"column":4},"end":{"line":1184,"column":39}},"550":{"start":{"line":1192,"column":4},"end":{"line":1192,"column":33}},"551":{"start":{"line":1202,"column":0},"end":{"line":1209,"column":1}},"552":{"start":{"line":1203,"column":2},"end":{"line":1203,"column":82}},"553":{"start":{"line":1203,"column":38},"end":{"line":1203,"column":82}},"554":{"start":{"line":1205,"column":2},"end":{"line":1205,"column":28}},"555":{"start":{"line":1206,"column":2},"end":{"line":1206,"column":32}},"556":{"start":{"line":1207,"column":2},"end":{"line":1207,"column":22}},"557":{"start":{"line":1208,"column":2},"end":{"line":1208,"column":17}},"558":{"start":{"line":1211,"column":0},"end":{"line":1282,"column":1}},"559":{"start":{"line":1214,"column":4},"end":{"line":1214,"column":40}},"560":{"start":{"line":1214,"column":34},"end":{"line":1214,"column":40}},"561":{"start":{"line":1216,"column":4},"end":{"line":1216,"column":72}},"562":{"start":{"line":1218,"column":4},"end":{"line":1233,"column":5}},"563":{"start":{"line":1219,"column":6},"end":{"line":1232,"column":7}},"564":{"start":{"line":1220,"column":8},"end":{"line":1220,"column":41}},"565":{"start":{"line":1221,"column":8},"end":{"line":1231,"column":9}},"566":{"start":{"line":1222,"column":10},"end":{"line":1222,"column":51}},"567":{"start":{"line":1225,"column":10},"end":{"line":1225,"column":32}},"568":{"start":{"line":1226,"column":10},"end":{"line":1230,"column":11}},"569":{"start":{"line":1227,"column":12},"end":{"line":1229,"column":13}},"570":{"start":{"line":1228,"column":14},"end":{"line":1228,"column":56}},"571":{"start":{"line":1237,"column":4},"end":{"line":1241,"column":5}},"572":{"start":{"line":1238,"column":6},"end":{"line":1238,"column":66}},"573":{"start":{"line":1240,"column":6},"end":{"line":1240,"column":66}},"574":{"start":{"line":1250,"column":4},"end":{"line":1254,"column":5}},"575":{"start":{"line":1251,"column":6},"end":{"line":1253,"column":7}},"576":{"start":{"line":1252,"column":8},"end":{"line":1252,"column":20}},"577":{"start":{"line":1255,"column":4},"end":{"line":1255,"column":15}},"578":{"start":{"line":1265,"column":4},"end":{"line":1265,"column":57}},"579":{"start":{"line":1274,"column":4},"end":{"line":1274,"column":19}},"580":{"start":{"line":1275,"column":4},"end":{"line":1280,"column":10}},"581":{"start":{"line":1276,"column":6},"end":{"line":1278,"column":7}},"582":{"start":{"line":1277,"column":8},"end":{"line":1277,"column":21}},"583":{"start":{"line":1279,"column":6},"end":{"line":1279,"column":16}},"584":{"start":{"line":1289,"column":0},"end":{"line":1422,"column":1}},"585":{"start":{"line":1299,"column":4},"end":{"line":1299,"column":47}},"586":{"start":{"line":1310,"column":4},"end":{"line":1310,"column":38}},"587":{"start":{"line":1310,"column":30},"end":{"line":1310,"column":38}},"588":{"start":{"line":1312,"column":4},"end":{"line":1315,"column":5}},"589":{"start":{"line":1314,"column":6},"end":{"line":1314,"column":37}},"590":{"start":{"line":1316,"column":4},"end":{"line":1318,"column":9}},"591":{"start":{"line":1317,"column":6},"end":{"line":1317,"column":20}},"592":{"start":{"line":1329,"column":4},"end":{"line":1329,"column":45}},"593":{"start":{"line":1330,"column":4},"end":{"line":1333,"column":17}},"594":{"start":{"line":1331,"column":6},"end":{"line":1331,"column":41}},"595":{"start":{"line":1331,"column":33},"end":{"line":1331,"column":41}},"596":{"start":{"line":1332,"column":6},"end":{"line":1332,"column":16}},"597":{"start":{"line":1344,"column":4},"end":{"line":1344,"column":45}},"598":{"start":{"line":1345,"column":4},"end":{"line":1348,"column":17}},"599":{"start":{"line":1346,"column":6},"end":{"line":1346,"column":41}},"600":{"start":{"line":1346,"column":33},"end":{"line":1346,"column":41}},"601":{"start":{"line":1347,"column":6},"end":{"line":1347,"column":16}},"602":{"start":{"line":1359,"column":4},"end":{"line":1359,"column":63}},"603":{"start":{"line":1360,"column":4},"end":{"line":1360,"column":69}},"604":{"start":{"line":1360,"column":49},"end":{"line":1360,"column":64}},"605":{"start":{"line":1361,"column":4},"end":{"line":1361,"column":38}},"606":{"start":{"line":1372,"column":4},"end":{"line":1372,"column":38}},"607":{"start":{"line":1372,"column":21},"end":{"line":1372,"column":38}},"608":{"start":{"line":1374,"column":4},"end":{"line":1376,"column":6}},"609":{"start":{"line":1375,"column":6},"end":{"line":1375,"column":42}},"610":{"start":{"line":1387,"column":4},"end":{"line":1387,"column":82}},"611":{"start":{"line":1398,"column":4},"end":{"line":1398,"column":102}},"612":{"start":{"line":1408,"column":4},"end":{"line":1408,"column":63}},"613":{"start":{"line":1409,"column":4},"end":{"line":1409,"column":55}},"614":{"start":{"line":1419,"column":4},"end":{"line":1419,"column":63}},"615":{"start":{"line":1420,"column":4},"end":{"line":1420,"column":54}},"616":{"start":{"line":1427,"column":0},"end":{"line":1886,"column":1}},"617":{"start":{"line":1437,"column":4},"end":{"line":1437,"column":30}},"618":{"start":{"line":1439,"column":4},"end":{"line":1470,"column":6}},"619":{"start":{"line":1440,"column":6},"end":{"line":1440,"column":22}},"620":{"start":{"line":1442,"column":6},"end":{"line":1467,"column":8}},"621":{"start":{"line":1443,"column":8},"end":{"line":1443,"column":36}},"622":{"start":{"line":1444,"column":8},"end":{"line":1444,"column":20}},"623":{"start":{"line":1446,"column":8},"end":{"line":1462,"column":9}},"624":{"start":{"line":1447,"column":10},"end":{"line":1447,"column":37}},"625":{"start":{"line":1450,"column":10},"end":{"line":1452,"column":12}},"626":{"start":{"line":1451,"column":12},"end":{"line":1451,"column":39}},"627":{"start":{"line":1454,"column":10},"end":{"line":1459,"column":11}},"628":{"start":{"line":1455,"column":12},"end":{"line":1455,"column":89}},"629":{"start":{"line":1456,"column":12},"end":{"line":1456,"column":34}},"630":{"start":{"line":1457,"column":12},"end":{"line":1457,"column":39}},"631":{"start":{"line":1458,"column":12},"end":{"line":1458,"column":59}},"632":{"start":{"line":1461,"column":10},"end":{"line":1461,"column":53}},"633":{"start":{"line":1464,"column":8},"end":{"line":1466,"column":16}},"634":{"start":{"line":1465,"column":10},"end":{"line":1465,"column":27}},"635":{"start":{"line":1469,"column":6},"end":{"line":1469,"column":16}},"636":{"start":{"line":1482,"column":4},"end":{"line":1482,"column":29}},"637":{"start":{"line":1484,"column":4},"end":{"line":1486,"column":6}},"638":{"start":{"line":1485,"column":6},"end":{"line":1485,"column":44}},"639":{"start":{"line":1488,"column":4},"end":{"line":1488,"column":19}},"640":{"start":{"line":1491,"column":4},"end":{"line":1491,"column":24}},"641":{"start":{"line":1493,"column":4},"end":{"line":1508,"column":6}},"642":{"start":{"line":1494,"column":6},"end":{"line":1494,"column":18}},"643":{"start":{"line":1497,"column":6},"end":{"line":1499,"column":7}},"644":{"start":{"line":1498,"column":8},"end":{"line":1498,"column":28}},"645":{"start":{"line":1502,"column":6},"end":{"line":1506,"column":7}},"646":{"start":{"line":1503,"column":8},"end":{"line":1505,"column":9}},"647":{"start":{"line":1504,"column":10},"end":{"line":1504,"column":69}},"648":{"start":{"line":1507,"column":6},"end":{"line":1507,"column":22}},"649":{"start":{"line":1510,"column":4},"end":{"line":1510,"column":17}},"650":{"start":{"line":1520,"column":4},"end":{"line":1520,"column":28}},"651":{"start":{"line":1521,"column":4},"end":{"line":1521,"column":36}},"652":{"start":{"line":1522,"column":4},"end":{"line":1522,"column":40}},"653":{"start":{"line":1523,"column":4},"end":{"line":1523,"column":25}},"654":{"start":{"line":1525,"column":4},"end":{"line":1525,"column":49}},"655":{"start":{"line":1526,"column":4},"end":{"line":1526,"column":67}},"656":{"start":{"line":1527,"column":4},"end":{"line":1527,"column":80}},"657":{"start":{"line":1528,"column":4},"end":{"line":1528,"column":76}},"658":{"start":{"line":1529,"column":4},"end":{"line":1529,"column":65}},"659":{"start":{"line":1531,"column":4},"end":{"line":1531,"column":19}},"660":{"start":{"line":1532,"column":4},"end":{"line":1532,"column":17}},"661":{"start":{"line":1533,"column":4},"end":{"line":1533,"column":64}},"662":{"start":{"line":1533,"column":28},"end":{"line":1533,"column":63}},"663":{"start":{"line":1535,"column":4},"end":{"line":1574,"column":5}},"664":{"start":{"line":1536,"column":6},"end":{"line":1540,"column":8}},"665":{"start":{"line":1537,"column":8},"end":{"line":1537,"column":43}},"666":{"start":{"line":1538,"column":8},"end":{"line":1538,"column":31}},"667":{"start":{"line":1539,"column":8},"end":{"line":1539,"column":23}},"668":{"start":{"line":1542,"column":6},"end":{"line":1550,"column":8}},"669":{"start":{"line":1543,"column":8},"end":{"line":1543,"column":41}},"670":{"start":{"line":1544,"column":8},"end":{"line":1544,"column":35}},"671":{"start":{"line":1545,"column":8},"end":{"line":1545,"column":31}},"672":{"start":{"line":1546,"column":8},"end":{"line":1548,"column":10}},"673":{"start":{"line":1547,"column":10},"end":{"line":1547,"column":35}},"674":{"start":{"line":1549,"column":8},"end":{"line":1549,"column":27}},"675":{"start":{"line":1554,"column":6},"end":{"line":1558,"column":8}},"676":{"start":{"line":1555,"column":8},"end":{"line":1555,"column":41}},"677":{"start":{"line":1556,"column":8},"end":{"line":1556,"column":31}},"678":{"start":{"line":1557,"column":8},"end":{"line":1557,"column":23}},"679":{"start":{"line":1560,"column":6},"end":{"line":1560,"column":25}},"680":{"start":{"line":1561,"column":6},"end":{"line":1570,"column":8}},"681":{"start":{"line":1562,"column":8},"end":{"line":1562,"column":43}},"682":{"start":{"line":1563,"column":8},"end":{"line":1563,"column":35}},"683":{"start":{"line":1564,"column":8},"end":{"line":1569,"column":10}},"684":{"start":{"line":1565,"column":10},"end":{"line":1565,"column":60}},"685":{"start":{"line":1566,"column":10},"end":{"line":1566,"column":49}},"686":{"start":{"line":1567,"column":10},"end":{"line":1567,"column":42}},"687":{"start":{"line":1568,"column":10},"end":{"line":1568,"column":32}},"688":{"start":{"line":1571,"column":6},"end":{"line":1573,"column":7}},"689":{"start":{"line":1572,"column":8},"end":{"line":1572,"column":34}},"690":{"start":{"line":1576,"column":4},"end":{"line":1576,"column":17}},"691":{"start":{"line":1588,"column":4},"end":{"line":1588,"column":57}},"692":{"start":{"line":1600,"column":4},"end":{"line":1602,"column":5}},"693":{"start":{"line":1601,"column":6},"end":{"line":1601,"column":23}},"694":{"start":{"line":1605,"column":4},"end":{"line":1605,"column":22}},"695":{"start":{"line":1606,"column":4},"end":{"line":1606,"column":28}},"696":{"start":{"line":1607,"column":4},"end":{"line":1607,"column":40}},"697":{"start":{"line":1610,"column":4},"end":{"line":1610,"column":30}},"698":{"start":{"line":1611,"column":4},"end":{"line":1620,"column":6}},"699":{"start":{"line":1612,"column":6},"end":{"line":1612,"column":21}},"700":{"start":{"line":1613,"column":6},"end":{"line":1613,"column":31}},"701":{"start":{"line":1613,"column":25},"end":{"line":1613,"column":31}},"702":{"start":{"line":1614,"column":6},"end":{"line":1618,"column":7}},"703":{"start":{"line":1615,"column":8},"end":{"line":1615,"column":23}},"704":{"start":{"line":1617,"column":8},"end":{"line":1617,"column":23}},"705":{"start":{"line":1619,"column":6},"end":{"line":1619,"column":95}},"706":{"start":{"line":1622,"column":4},"end":{"line":1632,"column":5}},"707":{"start":{"line":1623,"column":6},"end":{"line":1623,"column":28}},"708":{"start":{"line":1624,"column":6},"end":{"line":1628,"column":7}},"709":{"start":{"line":1625,"column":8},"end":{"line":1625,"column":66}},"710":{"start":{"line":1626,"column":8},"end":{"line":1626,"column":80}},"711":{"start":{"line":1627,"column":8},"end":{"line":1627,"column":51}},"712":{"start":{"line":1631,"column":6},"end":{"line":1631,"column":27}},"713":{"start":{"line":1634,"column":4},"end":{"line":1710,"column":6}},"714":{"start":{"line":1635,"column":6},"end":{"line":1635,"column":23}},"715":{"start":{"line":1636,"column":6},"end":{"line":1636,"column":28}},"716":{"start":{"line":1637,"column":6},"end":{"line":1637,"column":32}},"717":{"start":{"line":1638,"column":6},"end":{"line":1638,"column":23}},"718":{"start":{"line":1640,"column":6},"end":{"line":1642,"column":7}},"719":{"start":{"line":1641,"column":8},"end":{"line":1641,"column":30}},"720":{"start":{"line":1644,"column":6},"end":{"line":1699,"column":8}},"721":{"start":{"line":1645,"column":8},"end":{"line":1645,"column":31}},"722":{"start":{"line":1646,"column":8},"end":{"line":1646,"column":17}},"723":{"start":{"line":1647,"column":8},"end":{"line":1647,"column":20}},"724":{"start":{"line":1649,"column":8},"end":{"line":1651,"column":9}},"725":{"start":{"line":1650,"column":10},"end":{"line":1650,"column":31}},"726":{"start":{"line":1653,"column":8},"end":{"line":1686,"column":9}},"727":{"start":{"line":1655,"column":10},"end":{"line":1655,"column":26}},"728":{"start":{"line":1656,"column":15},"end":{"line":1686,"column":9}},"729":{"start":{"line":1657,"column":10},"end":{"line":1657,"column":49}},"730":{"start":{"line":1658,"column":15},"end":{"line":1686,"column":9}},"731":{"start":{"line":1660,"column":15},"end":{"line":1686,"column":9}},"732":{"start":{"line":1661,"column":10},"end":{"line":1661,"column":38}},"733":{"start":{"line":1662,"column":10},"end":{"line":1662,"column":62}},"734":{"start":{"line":1664,"column":10},"end":{"line":1682,"column":11}},"735":{"start":{"line":1666,"column":12},"end":{"line":1678,"column":13}},"736":{"start":{"line":1668,"column":14},"end":{"line":1675,"column":15}},"737":{"start":{"line":1670,"column":16},"end":{"line":1670,"column":82}},"738":{"start":{"line":1671,"column":16},"end":{"line":1671,"column":33}},"739":{"start":{"line":1674,"column":16},"end":{"line":1674,"column":55}},"740":{"start":{"line":1677,"column":14},"end":{"line":1677,"column":80}},"741":{"start":{"line":1681,"column":12},"end":{"line":1681,"column":51}},"742":{"start":{"line":1684,"column":10},"end":{"line":1684,"column":28}},"743":{"start":{"line":1685,"column":10},"end":{"line":1685,"column":16}},"744":{"start":{"line":1689,"column":8},"end":{"line":1689,"column":28}},"745":{"start":{"line":1690,"column":8},"end":{"line":1690,"column":46}},"746":{"start":{"line":1692,"column":8},"end":{"line":1694,"column":9}},"747":{"start":{"line":1693,"column":10},"end":{"line":1693,"column":43}},"748":{"start":{"line":1695,"column":8},"end":{"line":1697,"column":9}},"749":{"start":{"line":1696,"column":10},"end":{"line":1696,"column":40}},"750":{"start":{"line":1703,"column":6},"end":{"line":1708,"column":7}},"751":{"start":{"line":1704,"column":8},"end":{"line":1704,"column":54}},"752":{"start":{"line":1705,"column":8},"end":{"line":1707,"column":10}},"753":{"start":{"line":1706,"column":10},"end":{"line":1706,"column":36}},"754":{"start":{"line":1709,"column":6},"end":{"line":1709,"column":30}},"755":{"start":{"line":1712,"column":4},"end":{"line":1712,"column":20}},"756":{"start":{"line":1723,"column":4},"end":{"line":1723,"column":37}},"757":{"start":{"line":1734,"column":4},"end":{"line":1734,"column":34}},"758":{"start":{"line":1745,"column":4},"end":{"line":1745,"column":19}},"759":{"start":{"line":1746,"column":4},"end":{"line":1746,"column":30}},"760":{"start":{"line":1747,"column":4},"end":{"line":1760,"column":5}},"761":{"start":{"line":1748,"column":6},"end":{"line":1748,"column":29}},"762":{"start":{"line":1750,"column":6},"end":{"line":1750,"column":38}},"763":{"start":{"line":1751,"column":6},"end":{"line":1759,"column":7}},"764":{"start":{"line":1752,"column":8},"end":{"line":1756,"column":10}},"765":{"start":{"line":1753,"column":10},"end":{"line":1753,"column":30}},"766":{"start":{"line":1754,"column":10},"end":{"line":1754,"column":27}},"767":{"start":{"line":1755,"column":10},"end":{"line":1755,"column":26}},"768":{"start":{"line":1758,"column":8},"end":{"line":1758,"column":68}},"769":{"start":{"line":1761,"column":4},"end":{"line":1761,"column":17}},"770":{"start":{"line":1772,"column":4},"end":{"line":1794,"column":5}},"771":{"start":{"line":1773,"column":6},"end":{"line":1773,"column":36}},"772":{"start":{"line":1774,"column":6},"end":{"line":1793,"column":8}},"773":{"start":{"line":1775,"column":8},"end":{"line":1777,"column":10}},"774":{"start":{"line":1776,"column":10},"end":{"line":1776,"column":34}},"775":{"start":{"line":1778,"column":8},"end":{"line":1778,"column":28}},"776":{"start":{"line":1779,"column":8},"end":{"line":1779,"column":71}},"777":{"start":{"line":1779,"column":39},"end":{"line":1779,"column":70}},"778":{"start":{"line":1781,"column":8},"end":{"line":1784,"column":10}},"779":{"start":{"line":1782,"column":10},"end":{"line":1782,"column":40}},"780":{"start":{"line":1783,"column":10},"end":{"line":1783,"column":21}},"781":{"start":{"line":1786,"column":8},"end":{"line":1788,"column":9}},"782":{"start":{"line":1787,"column":10},"end":{"line":1787,"column":29}},"783":{"start":{"line":1789,"column":8},"end":{"line":1789,"column":23}},"784":{"start":{"line":1790,"column":8},"end":{"line":1792,"column":10}},"785":{"start":{"line":1791,"column":10},"end":{"line":1791,"column":59}},"786":{"start":{"line":1795,"column":4},"end":{"line":1795,"column":21}},"787":{"start":{"line":1809,"column":4},"end":{"line":1809,"column":40}},"788":{"start":{"line":1810,"column":4},"end":{"line":1810,"column":27}},"789":{"start":{"line":1812,"column":4},"end":{"line":1815,"column":5}},"790":{"start":{"line":1827,"column":4},"end":{"line":1827,"column":27}},"791":{"start":{"line":1828,"column":4},"end":{"line":1828,"column":69}},"792":{"start":{"line":1830,"column":4},"end":{"line":1830,"column":19}},"793":{"start":{"line":1831,"column":4},"end":{"line":1834,"column":5}},"794":{"start":{"line":1832,"column":6},"end":{"line":1832,"column":59}},"795":{"start":{"line":1833,"column":6},"end":{"line":1833,"column":32}},"796":{"start":{"line":1835,"column":4},"end":{"line":1835,"column":17}},"797":{"start":{"line":1845,"column":4},"end":{"line":1848,"column":5}},"798":{"start":{"line":1850,"column":4},"end":{"line":1850,"column":19}},"799":{"start":{"line":1851,"column":4},"end":{"line":1851,"column":36}},"800":{"start":{"line":1852,"column":4},"end":{"line":1852,"column":17}},"801":{"start":{"line":1866,"column":4},"end":{"line":1866,"column":33}},"802":{"start":{"line":1867,"column":4},"end":{"line":1867,"column":19}},"803":{"start":{"line":1868,"column":4},"end":{"line":1872,"column":6}},"804":{"start":{"line":1869,"column":6},"end":{"line":1869,"column":44}},"805":{"start":{"line":1870,"column":6},"end":{"line":1870,"column":84}},"806":{"start":{"line":1871,"column":6},"end":{"line":1871,"column":22}},"807":{"start":{"line":1873,"column":4},"end":{"line":1873,"column":17}},"808":{"start":{"line":1882,"column":4},"end":{"line":1884,"column":6}},"809":{"start":{"line":1883,"column":6},"end":{"line":1883,"column":40}},"810":{"start":{"line":1896,"column":0},"end":{"line":1922,"column":1}},"811":{"start":{"line":1897,"column":2},"end":{"line":1899,"column":3}},"812":{"start":{"line":1898,"column":4},"end":{"line":1898,"column":50}},"813":{"start":{"line":1901,"column":2},"end":{"line":1919,"column":3}},"814":{"start":{"line":1902,"column":4},"end":{"line":1902,"column":19}},"815":{"start":{"line":1903,"column":4},"end":{"line":1917,"column":5}},"816":{"start":{"line":1904,"column":6},"end":{"line":1916,"column":7}},"817":{"start":{"line":1905,"column":8},"end":{"line":1905,"column":60}},"818":{"start":{"line":1908,"column":8},"end":{"line":1915,"column":9}},"819":{"start":{"line":1909,"column":10},"end":{"line":1909,"column":30}},"820":{"start":{"line":1911,"column":10},"end":{"line":1913,"column":11}},"821":{"start":{"line":1912,"column":12},"end":{"line":1912,"column":70}},"822":{"start":{"line":1914,"column":10},"end":{"line":1914,"column":15}},"823":{"start":{"line":1918,"column":4},"end":{"line":1918,"column":17}},"824":{"start":{"line":1921,"column":2},"end":{"line":1921,"column":18}},"825":{"start":{"line":1927,"column":0},"end":{"line":2007,"column":1}},"826":{"start":{"line":1937,"column":4},"end":{"line":1937,"column":28}},"827":{"start":{"line":1949,"column":4},"end":{"line":1949,"column":35}},"828":{"start":{"line":1950,"column":4},"end":{"line":1950,"column":37}},"829":{"start":{"line":1952,"column":4},"end":{"line":1954,"column":5}},"830":{"start":{"line":1953,"column":6},"end":{"line":1953,"column":22}},"831":{"start":{"line":1956,"column":4},"end":{"line":1960,"column":5}},"832":{"start":{"line":1957,"column":6},"end":{"line":1959,"column":7}},"833":{"start":{"line":1958,"column":8},"end":{"line":1958,"column":25}},"834":{"start":{"line":1962,"column":4},"end":{"line":1962,"column":20}},"835":{"start":{"line":1973,"column":4},"end":{"line":1973,"column":32}},"836":{"start":{"line":1975,"column":4},"end":{"line":1975,"column":31}},"837":{"start":{"line":1975,"column":22},"end":{"line":1975,"column":31}},"838":{"start":{"line":1977,"column":4},"end":{"line":1983,"column":5}},"839":{"start":{"line":1978,"column":6},"end":{"line":1978,"column":40}},"840":{"start":{"line":1979,"column":11},"end":{"line":1983,"column":5}},"841":{"start":{"line":1980,"column":6},"end":{"line":1980,"column":28}},"842":{"start":{"line":1982,"column":6},"end":{"line":1982,"column":65}},"843":{"start":{"line":1993,"column":4},"end":{"line":1993,"column":48}},"844":{"start":{"line":1994,"column":4},"end":{"line":1994,"column":55}},"845":{"start":{"line":2004,"column":4},"end":{"line":2004,"column":48}},"846":{"start":{"line":2005,"column":4},"end":{"line":2005,"column":54}},"847":{"start":{"line":2012,"column":0},"end":{"line":2240,"column":1}},"848":{"start":{"line":2022,"column":4},"end":{"line":2022,"column":85}},"849":{"start":{"line":2033,"column":4},"end":{"line":2033,"column":26}},"850":{"start":{"line":2044,"column":4},"end":{"line":2044,"column":16}},"851":{"start":{"line":2045,"column":4},"end":{"line":2045,"column":40}},"852":{"start":{"line":2056,"column":4},"end":{"line":2056,"column":44}},"853":{"start":{"line":2067,"column":4},"end":{"line":2069,"column":6}},"854":{"start":{"line":2068,"column":6},"end":{"line":2068,"column":20}},"855":{"start":{"line":2070,"column":4},"end":{"line":2070,"column":26}},"856":{"start":{"line":2081,"column":4},"end":{"line":2083,"column":6}},"857":{"start":{"line":2082,"column":6},"end":{"line":2082,"column":21}},"858":{"start":{"line":2084,"column":4},"end":{"line":2084,"column":26}},"859":{"start":{"line":2095,"column":4},"end":{"line":2097,"column":6}},"860":{"start":{"line":2096,"column":6},"end":{"line":2096,"column":20}},"861":{"start":{"line":2098,"column":4},"end":{"line":2098,"column":26}},"862":{"start":{"line":2109,"column":4},"end":{"line":2111,"column":6}},"863":{"start":{"line":2110,"column":6},"end":{"line":2110,"column":21}},"864":{"start":{"line":2112,"column":4},"end":{"line":2112,"column":26}},"865":{"start":{"line":2123,"column":4},"end":{"line":2125,"column":6}},"866":{"start":{"line":2124,"column":6},"end":{"line":2124,"column":83}},"867":{"start":{"line":2126,"column":4},"end":{"line":2126,"column":26}},"868":{"start":{"line":2137,"column":4},"end":{"line":2139,"column":6}},"869":{"start":{"line":2138,"column":6},"end":{"line":2138,"column":61}},"870":{"start":{"line":2140,"column":4},"end":{"line":2140,"column":26}},"871":{"start":{"line":2151,"column":4},"end":{"line":2151,"column":77}},"872":{"start":{"line":2162,"column":4},"end":{"line":2162,"column":19}},"873":{"start":{"line":2163,"column":4},"end":{"line":2163,"column":23}},"874":{"start":{"line":2164,"column":4},"end":{"line":2173,"column":5}},"875":{"start":{"line":2165,"column":6},"end":{"line":2172,"column":7}},"876":{"start":{"line":2166,"column":8},"end":{"line":2171,"column":9}},"877":{"start":{"line":2167,"column":10},"end":{"line":2167,"column":66}},"878":{"start":{"line":2170,"column":10},"end":{"line":2170,"column":55}},"879":{"start":{"line":2174,"column":4},"end":{"line":2174,"column":18}},"880":{"start":{"line":2185,"column":4},"end":{"line":2185,"column":56}},"881":{"start":{"line":2195,"column":4},"end":{"line":2202,"column":5}},"882":{"start":{"line":2196,"column":6},"end":{"line":2196,"column":36}},"883":{"start":{"line":2197,"column":6},"end":{"line":2201,"column":7}},"884":{"start":{"line":2198,"column":8},"end":{"line":2200,"column":9}},"885":{"start":{"line":2199,"column":10},"end":{"line":2199,"column":21}},"886":{"start":{"line":2203,"column":4},"end":{"line":2203,"column":16}},"887":{"start":{"line":2214,"column":4},"end":{"line":2238,"column":5}},"888":{"start":{"line":2216,"column":8},"end":{"line":2216,"column":58}},"889":{"start":{"line":2219,"column":8},"end":{"line":2219,"column":26}},"890":{"start":{"line":2221,"column":8},"end":{"line":2221,"column":26}},"891":{"start":{"line":2223,"column":8},"end":{"line":2223,"column":25}},"892":{"start":{"line":2225,"column":8},"end":{"line":2225,"column":27}},"893":{"start":{"line":2227,"column":8},"end":{"line":2227,"column":24}},"894":{"start":{"line":2229,"column":8},"end":{"line":2229,"column":24}},"895":{"start":{"line":2231,"column":8},"end":{"line":2231,"column":26}},"896":{"start":{"line":2233,"column":8},"end":{"line":2233,"column":77}},"897":{"start":{"line":2235,"column":8},"end":{"line":2235,"column":104}},"898":{"start":{"line":2237,"column":8},"end":{"line":2237,"column":20}},"899":{"start":{"line":2242,"column":0},"end":{"line":2352,"column":1}},"900":{"start":{"line":2252,"column":4},"end":{"line":2252,"column":83}},"901":{"start":{"line":2253,"column":4},"end":{"line":2253,"column":20}},"902":{"start":{"line":2254,"column":4},"end":{"line":2256,"column":6}},"903":{"start":{"line":2255,"column":6},"end":{"line":2255,"column":41}},"904":{"start":{"line":2258,"column":4},"end":{"line":2267,"column":5}},"905":{"start":{"line":2260,"column":8},"end":{"line":2264,"column":9}},"906":{"start":{"line":2261,"column":10},"end":{"line":2263,"column":11}},"907":{"start":{"line":2262,"column":12},"end":{"line":2262,"column":24}},"908":{"start":{"line":2265,"column":8},"end":{"line":2265,"column":19}},"909":{"start":{"line":2278,"column":4},"end":{"line":2280,"column":5}},"910":{"start":{"line":2279,"column":6},"end":{"line":2279,"column":48}},"911":{"start":{"line":2281,"column":4},"end":{"line":2281,"column":20}},"912":{"start":{"line":2282,"column":4},"end":{"line":2284,"column":6}},"913":{"start":{"line":2283,"column":6},"end":{"line":2283,"column":41}},"914":{"start":{"line":2286,"column":4},"end":{"line":2295,"column":5}},"915":{"start":{"line":2288,"column":8},"end":{"line":2292,"column":9}},"916":{"start":{"line":2289,"column":10},"end":{"line":2291,"column":11}},"917":{"start":{"line":2290,"column":12},"end":{"line":2290,"column":23}},"918":{"start":{"line":2293,"column":8},"end":{"line":2293,"column":20}},"919":{"start":{"line":2306,"column":4},"end":{"line":2308,"column":5}},"920":{"start":{"line":2307,"column":6},"end":{"line":2307,"column":49}},"921":{"start":{"line":2309,"column":4},"end":{"line":2309,"column":38}},"922":{"start":{"line":2310,"column":4},"end":{"line":2314,"column":5}},"923":{"start":{"line":2312,"column":8},"end":{"line":2312,"column":31}},"924":{"start":{"line":2325,"column":4},"end":{"line":2325,"column":21}},"925":{"start":{"line":2326,"column":4},"end":{"line":2326,"column":41}},"926":{"start":{"line":2327,"column":4},"end":{"line":2327,"column":41}},"927":{"start":{"line":2328,"column":4},"end":{"line":2332,"column":5}},"928":{"start":{"line":2330,"column":8},"end":{"line":2330,"column":31}},"929":{"start":{"line":2343,"column":4},"end":{"line":2345,"column":5}},"930":{"start":{"line":2344,"column":6},"end":{"line":2344,"column":51}},"931":{"start":{"line":2346,"column":4},"end":{"line":2350,"column":5}},"932":{"start":{"line":2348,"column":8},"end":{"line":2348,"column":39}},"933":{"start":{"line":2355,"column":0},"end":{"line":2367,"column":2}},"934":{"start":{"line":2356,"column":2},"end":{"line":2366,"column":25}},"935":{"start":{"line":2357,"column":4},"end":{"line":2365,"column":5}},"936":{"start":{"line":2358,"column":6},"end":{"line":2364,"column":7}},"937":{"start":{"line":2361,"column":10},"end":{"line":2361,"column":42}},"938":{"start":{"line":2362,"column":10},"end":{"line":2362,"column":40}},"939":{"start":{"line":2368,"column":0},"end":{"line":2582,"column":1}},"940":{"start":{"line":2378,"column":4},"end":{"line":2378,"column":43}},"941":{"start":{"line":2379,"column":4},"end":{"line":2379,"column":69}},"942":{"start":{"line":2390,"column":4},"end":{"line":2390,"column":44}},"943":{"start":{"line":2391,"column":4},"end":{"line":2393,"column":9}},"944":{"start":{"line":2392,"column":6},"end":{"line":2392,"column":23}},"945":{"start":{"line":2404,"column":4},"end":{"line":2404,"column":43}},"946":{"start":{"line":2405,"column":4},"end":{"line":2405,"column":30}},"947":{"start":{"line":2405,"column":20},"end":{"line":2405,"column":30}},"948":{"start":{"line":2406,"column":4},"end":{"line":2406,"column":31}},"949":{"start":{"line":2406,"column":20},"end":{"line":2406,"column":31}},"950":{"start":{"line":2407,"column":4},"end":{"line":2407,"column":88}},"951":{"start":{"line":2408,"column":4},"end":{"line":2408,"column":25}},"952":{"start":{"line":2419,"column":4},"end":{"line":2419,"column":44}},"953":{"start":{"line":2420,"column":4},"end":{"line":2420,"column":28}},"954":{"start":{"line":2431,"column":4},"end":{"line":2431,"column":43}},"955":{"start":{"line":2432,"column":4},"end":{"line":2432,"column":30}},"956":{"start":{"line":2432,"column":20},"end":{"line":2432,"column":30}},"957":{"start":{"line":2433,"column":4},"end":{"line":2433,"column":31}},"958":{"start":{"line":2433,"column":20},"end":{"line":2433,"column":31}},"959":{"start":{"line":2434,"column":4},"end":{"line":2434,"column":87}},"960":{"start":{"line":2435,"column":4},"end":{"line":2435,"column":24}},"961":{"start":{"line":2446,"column":4},"end":{"line":2446,"column":43}},"962":{"start":{"line":2447,"column":4},"end":{"line":2447,"column":30}},"963":{"start":{"line":2447,"column":20},"end":{"line":2447,"column":30}},"964":{"start":{"line":2448,"column":4},"end":{"line":2448,"column":31}},"965":{"start":{"line":2448,"column":20},"end":{"line":2448,"column":31}},"966":{"start":{"line":2449,"column":4},"end":{"line":2449,"column":89}},"967":{"start":{"line":2450,"column":4},"end":{"line":2450,"column":26}},"968":{"start":{"line":2461,"column":4},"end":{"line":2461,"column":43}},"969":{"start":{"line":2462,"column":4},"end":{"line":2462,"column":30}},"970":{"start":{"line":2462,"column":20},"end":{"line":2462,"column":30}},"971":{"start":{"line":2463,"column":4},"end":{"line":2463,"column":31}},"972":{"start":{"line":2463,"column":20},"end":{"line":2463,"column":31}},"973":{"start":{"line":2464,"column":4},"end":{"line":2464,"column":86}},"974":{"start":{"line":2465,"column":4},"end":{"line":2465,"column":24}},"975":{"start":{"line":2476,"column":4},"end":{"line":2476,"column":44}},"976":{"start":{"line":2477,"column":4},"end":{"line":2477,"column":118}},"977":{"start":{"line":2478,"column":4},"end":{"line":2478,"column":36}},"978":{"start":{"line":2478,"column":26},"end":{"line":2478,"column":36}},"979":{"start":{"line":2479,"column":4},"end":{"line":2479,"column":37}},"980":{"start":{"line":2479,"column":26},"end":{"line":2479,"column":37}},"981":{"start":{"line":2480,"column":4},"end":{"line":2480,"column":86}},"982":{"start":{"line":2481,"column":4},"end":{"line":2481,"column":52}},"983":{"start":{"line":2492,"column":4},"end":{"line":2492,"column":43}},"984":{"start":{"line":2493,"column":4},"end":{"line":2493,"column":30}},"985":{"start":{"line":2493,"column":20},"end":{"line":2493,"column":30}},"986":{"start":{"line":2494,"column":4},"end":{"line":2494,"column":31}},"987":{"start":{"line":2494,"column":20},"end":{"line":2494,"column":31}},"988":{"start":{"line":2495,"column":4},"end":{"line":2495,"column":89}},"989":{"start":{"line":2496,"column":4},"end":{"line":2496,"column":26}},"990":{"start":{"line":2507,"column":4},"end":{"line":2507,"column":44}},"991":{"start":{"line":2508,"column":4},"end":{"line":2508,"column":28}},"992":{"start":{"line":2519,"column":4},"end":{"line":2519,"column":44}},"993":{"start":{"line":2520,"column":4},"end":{"line":2522,"column":9}},"994":{"start":{"line":2521,"column":6},"end":{"line":2521,"column":23}},"995":{"start":{"line":2533,"column":4},"end":{"line":2533,"column":44}},"996":{"start":{"line":2534,"column":4},"end":{"line":2534,"column":144}},"997":{"start":{"line":2536,"column":4},"end":{"line":2536,"column":87}},"998":{"start":{"line":2536,"column":38},"end":{"line":2536,"column":87}},"999":{"start":{"line":2538,"column":4},"end":{"line":2538,"column":37}},"1000":{"start":{"line":2549,"column":4},"end":{"line":2549,"column":41}},"1001":{"start":{"line":2550,"column":4},"end":{"line":2550,"column":28}},"1002":{"start":{"line":2550,"column":18},"end":{"line":2550,"column":28}},"1003":{"start":{"line":2551,"column":4},"end":{"line":2551,"column":29}},"1004":{"start":{"line":2551,"column":18},"end":{"line":2551,"column":29}},"1005":{"start":{"line":2552,"column":4},"end":{"line":2552,"column":108}},"1006":{"start":{"line":2553,"column":4},"end":{"line":2553,"column":23}},"1007":{"start":{"line":2564,"column":4},"end":{"line":2564,"column":44}},"1008":{"start":{"line":2565,"column":4},"end":{"line":2565,"column":28}},"1009":{"start":{"line":2576,"column":4},"end":{"line":2576,"column":41}},"1010":{"start":{"line":2577,"column":4},"end":{"line":2577,"column":28}},"1011":{"start":{"line":2577,"column":18},"end":{"line":2577,"column":28}},"1012":{"start":{"line":2578,"column":4},"end":{"line":2578,"column":29}},"1013":{"start":{"line":2578,"column":18},"end":{"line":2578,"column":29}},"1014":{"start":{"line":2579,"column":4},"end":{"line":2579,"column":109}},"1015":{"start":{"line":2580,"column":4},"end":{"line":2580,"column":24}},"1016":{"start":{"line":2584,"column":0},"end":{"line":2821,"column":1}},"1017":{"start":{"line":2593,"column":4},"end":{"line":2593,"column":43}},"1018":{"start":{"line":2594,"column":4},"end":{"line":2594,"column":110}},"1019":{"start":{"line":2595,"column":4},"end":{"line":2595,"column":85}},"1020":{"start":{"line":2596,"column":4},"end":{"line":2596,"column":89}},"1021":{"start":{"line":2597,"column":4},"end":{"line":2597,"column":20}},"1022":{"start":{"line":2598,"column":4},"end":{"line":2598,"column":16}},"1023":{"start":{"line":2599,"column":4},"end":{"line":2603,"column":5}},"1024":{"start":{"line":2600,"column":6},"end":{"line":2600,"column":34}},"1025":{"start":{"line":2601,"column":11},"end":{"line":2603,"column":5}},"1026":{"start":{"line":2602,"column":6},"end":{"line":2602,"column":21}},"1027":{"start":{"line":2604,"column":4},"end":{"line":2604,"column":20}},"1028":{"start":{"line":2615,"column":4},"end":{"line":2615,"column":43}},"1029":{"start":{"line":2616,"column":4},"end":{"line":2616,"column":111}},"1030":{"start":{"line":2618,"column":4},"end":{"line":2618,"column":36}},"1031":{"start":{"line":2618,"column":25},"end":{"line":2618,"column":36}},"1032":{"start":{"line":2620,"column":4},"end":{"line":2620,"column":32}},"1033":{"start":{"line":2631,"column":4},"end":{"line":2631,"column":54}},"1034":{"start":{"line":2632,"column":4},"end":{"line":2632,"column":26}},"1035":{"start":{"line":2633,"column":4},"end":{"line":2633,"column":31}},"1036":{"start":{"line":2635,"column":4},"end":{"line":2635,"column":85}},"1037":{"start":{"line":2637,"column":4},"end":{"line":2642,"column":6}},"1038":{"start":{"line":2639,"column":6},"end":{"line":2639,"column":22}},"1039":{"start":{"line":2640,"column":6},"end":{"line":2640,"column":30}},"1040":{"start":{"line":2641,"column":6},"end":{"line":2641,"column":59}},"1041":{"start":{"line":2654,"column":4},"end":{"line":2654,"column":43}},"1042":{"start":{"line":2655,"column":4},"end":{"line":2655,"column":31}},"1043":{"start":{"line":2655,"column":20},"end":{"line":2655,"column":31}},"1044":{"start":{"line":2657,"column":4},"end":{"line":2657,"column":22}},"1045":{"start":{"line":2658,"column":4},"end":{"line":2658,"column":33}},"1046":{"start":{"line":2658,"column":22},"end":{"line":2658,"column":33}},"1047":{"start":{"line":2660,"column":4},"end":{"line":2660,"column":87}},"1048":{"start":{"line":2662,"column":4},"end":{"line":2662,"column":28}},"1049":{"start":{"line":2663,"column":4},"end":{"line":2663,"column":39}},"1050":{"start":{"line":2663,"column":28},"end":{"line":2663,"column":39}},"1051":{"start":{"line":2665,"column":4},"end":{"line":2665,"column":27}},"1052":{"start":{"line":2666,"column":4},"end":{"line":2666,"column":36}},"1053":{"start":{"line":2668,"column":4},"end":{"line":2670,"column":5}},"1054":{"start":{"line":2669,"column":6},"end":{"line":2669,"column":37}},"1055":{"start":{"line":2672,"column":4},"end":{"line":2672,"column":44}},"1056":{"start":{"line":2683,"column":4},"end":{"line":2683,"column":49}},"1057":{"start":{"line":2694,"column":4},"end":{"line":2694,"column":43}},"1058":{"start":{"line":2695,"column":4},"end":{"line":2695,"column":22}},"1059":{"start":{"line":2696,"column":4},"end":{"line":2696,"column":20}},"1060":{"start":{"line":2697,"column":4},"end":{"line":2697,"column":26}},"1061":{"start":{"line":2699,"column":4},"end":{"line":2699,"column":19}},"1062":{"start":{"line":2701,"column":4},"end":{"line":2704,"column":5}},"1063":{"start":{"line":2702,"column":6},"end":{"line":2702,"column":24}},"1064":{"start":{"line":2703,"column":6},"end":{"line":2703,"column":19}},"1065":{"start":{"line":2706,"column":4},"end":{"line":2706,"column":17}},"1066":{"start":{"line":2717,"column":4},"end":{"line":2717,"column":43}},"1067":{"start":{"line":2719,"column":4},"end":{"line":2719,"column":31}},"1068":{"start":{"line":2719,"column":20},"end":{"line":2719,"column":31}},"1069":{"start":{"line":2720,"column":4},"end":{"line":2720,"column":77}},"1070":{"start":{"line":2722,"column":4},"end":{"line":2722,"column":19}},"1071":{"start":{"line":2723,"column":4},"end":{"line":2725,"column":5}},"1072":{"start":{"line":2724,"column":6},"end":{"line":2724,"column":25}},"1073":{"start":{"line":2726,"column":4},"end":{"line":2726,"column":17}},"1074":{"start":{"line":2736,"column":4},"end":{"line":2736,"column":54}},"1075":{"start":{"line":2737,"column":4},"end":{"line":2737,"column":68}},"1076":{"start":{"line":2738,"column":4},"end":{"line":2738,"column":27}},"1077":{"start":{"line":2740,"column":4},"end":{"line":2740,"column":33}},"1078":{"start":{"line":2740,"column":22},"end":{"line":2740,"column":33}},"1079":{"start":{"line":2741,"column":4},"end":{"line":2741,"column":85}},"1080":{"start":{"line":2743,"column":4},"end":{"line":2745,"column":20}},"1081":{"start":{"line":2744,"column":6},"end":{"line":2744,"column":70}},"1082":{"start":{"line":2755,"column":4},"end":{"line":2755,"column":45}},"1083":{"start":{"line":2756,"column":4},"end":{"line":2756,"column":52}},"1084":{"start":{"line":2767,"column":4},"end":{"line":2767,"column":43}},"1085":{"start":{"line":2768,"column":4},"end":{"line":2768,"column":40}},"1086":{"start":{"line":2782,"column":4},"end":{"line":2782,"column":53}},"1087":{"start":{"line":2783,"column":4},"end":{"line":2783,"column":57}},"1088":{"start":{"line":2785,"column":4},"end":{"line":2785,"column":75}},"1089":{"start":{"line":2786,"column":4},"end":{"line":2786,"column":79}},"1090":{"start":{"line":2788,"column":4},"end":{"line":2790,"column":5}},"1091":{"start":{"line":2789,"column":6},"end":{"line":2789,"column":98}},"1092":{"start":{"line":2792,"column":4},"end":{"line":2792,"column":15}},"1093":{"start":{"line":2793,"column":4},"end":{"line":2793,"column":11}},"1094":{"start":{"line":2794,"column":4},"end":{"line":2794,"column":9}},"1095":{"start":{"line":2796,"column":4},"end":{"line":2805,"column":5}},"1096":{"start":{"line":2797,"column":6},"end":{"line":2797,"column":21}},"1097":{"start":{"line":2799,"column":6},"end":{"line":2799,"column":33}},"1098":{"start":{"line":2799,"column":22},"end":{"line":2799,"column":33}},"1099":{"start":{"line":2800,"column":6},"end":{"line":2800,"column":89}},"1100":{"start":{"line":2802,"column":6},"end":{"line":2804,"column":49}},"1101":{"start":{"line":2807,"column":4},"end":{"line":2807,"column":19}},"1102":{"start":{"line":2808,"column":4},"end":{"line":2808,"column":38}},"1103":{"start":{"line":2810,"column":4},"end":{"line":2817,"column":5}},"1104":{"start":{"line":2811,"column":6},"end":{"line":2815,"column":8}},"1105":{"start":{"line":2812,"column":8},"end":{"line":2814,"column":18}},"1106":{"start":{"line":2816,"column":6},"end":{"line":2816,"column":22}},"1107":{"start":{"line":2819,"column":4},"end":{"line":2819,"column":17}},"1108":{"start":{"line":2823,"column":0},"end":{"line":2855,"column":1}},"1109":{"start":{"line":2831,"column":4},"end":{"line":2831,"column":45}},"1110":{"start":{"line":2832,"column":4},"end":{"line":2832,"column":47}},"1111":{"start":{"line":2842,"column":4},"end":{"line":2842,"column":45}},"1112":{"start":{"line":2843,"column":4},"end":{"line":2843,"column":46}},"1113":{"start":{"line":2853,"column":4},"end":{"line":2853,"column":44}},"1114":{"start":{"line":2857,"column":0},"end":{"line":2871,"column":1}},"1115":{"start":{"line":2866,"column":4},"end":{"line":2866,"column":44}},"1116":{"start":{"line":2867,"column":4},"end":{"line":2867,"column":35}},"1117":{"start":{"line":2867,"column":27},"end":{"line":2867,"column":35}},"1118":{"start":{"line":2868,"column":4},"end":{"line":2868,"column":36}},"1119":{"start":{"line":2868,"column":27},"end":{"line":2868,"column":36}},"1120":{"start":{"line":2869,"column":4},"end":{"line":2869,"column":12}},"1121":{"start":{"line":2873,"column":0},"end":{"line":2878,"column":2}},"1122":{"start":{"line":2874,"column":2},"end":{"line":2877,"column":3}},"1123":{"start":{"line":2875,"column":4},"end":{"line":2875,"column":44}},"1124":{"start":{"line":2876,"column":4},"end":{"line":2876,"column":48}},"1125":{"start":{"line":2880,"column":0},"end":{"line":2949,"column":1}},"1126":{"start":{"line":2890,"column":4},"end":{"line":2890,"column":34}},"1127":{"start":{"line":2891,"column":4},"end":{"line":2902,"column":5}},"1128":{"start":{"line":2892,"column":6},"end":{"line":2894,"column":7}},"1129":{"start":{"line":2893,"column":8},"end":{"line":2893,"column":51}},"1130":{"start":{"line":2895,"column":6},"end":{"line":2895,"column":22}},"1131":{"start":{"line":2896,"column":6},"end":{"line":2896,"column":24}},"1132":{"start":{"line":2897,"column":6},"end":{"line":2897,"column":24}},"1133":{"start":{"line":2898,"column":11},"end":{"line":2902,"column":5}},"1134":{"start":{"line":2899,"column":6},"end":{"line":2899,"column":25}},"1135":{"start":{"line":2900,"column":6},"end":{"line":2900,"column":29}},"1136":{"start":{"line":2901,"column":6},"end":{"line":2901,"column":29}},"1137":{"start":{"line":2903,"column":4},"end":{"line":2903,"column":51}},"1138":{"start":{"line":2904,"column":4},"end":{"line":2904,"column":92}},"1139":{"start":{"line":2916,"column":4},"end":{"line":2918,"column":5}},"1140":{"start":{"line":2917,"column":6},"end":{"line":2917,"column":51}},"1141":{"start":{"line":2920,"column":4},"end":{"line":2925,"column":6}},"1142":{"start":{"line":2921,"column":6},"end":{"line":2923,"column":7}},"1143":{"start":{"line":2922,"column":8},"end":{"line":2922,"column":53}},"1144":{"start":{"line":2924,"column":6},"end":{"line":2924,"column":49}},"1145":{"start":{"line":2927,"column":4},"end":{"line":2933,"column":5}},"1146":{"start":{"line":2928,"column":6},"end":{"line":2928,"column":54}},"1147":{"start":{"line":2929,"column":11},"end":{"line":2933,"column":5}},"1148":{"start":{"line":2930,"column":6},"end":{"line":2930,"column":51}},"1149":{"start":{"line":2932,"column":6},"end":{"line":2932,"column":50}},"1150":{"start":{"line":2945,"column":4},"end":{"line":2945,"column":88}},"1151":{"start":{"line":2946,"column":4},"end":{"line":2946,"column":44}},"1152":{"start":{"line":2947,"column":4},"end":{"line":2947,"column":74}},"1153":{"start":{"line":2952,"column":0},"end":{"line":2964,"column":1}},"1154":{"start":{"line":2966,"column":0},"end":{"line":3124,"column":1}},"1155":{"start":{"line":2973,"column":4},"end":{"line":2973,"column":41}},"1156":{"start":{"line":2974,"column":4},"end":{"line":2979,"column":5}},"1157":{"start":{"line":2975,"column":6},"end":{"line":2975,"column":49}},"1158":{"start":{"line":2976,"column":6},"end":{"line":2976,"column":26}},"1159":{"start":{"line":2977,"column":6},"end":{"line":2977,"column":38}},"1160":{"start":{"line":2978,"column":6},"end":{"line":2978,"column":38}},"1161":{"start":{"line":2980,"column":4},"end":{"line":2980,"column":20}},"1162":{"start":{"line":2989,"column":4},"end":{"line":2989,"column":41}},"1163":{"start":{"line":2990,"column":4},"end":{"line":2990,"column":46}},"1164":{"start":{"line":2999,"column":4},"end":{"line":2999,"column":41}},"1165":{"start":{"line":3000,"column":4},"end":{"line":3000,"column":49}},"1166":{"start":{"line":3009,"column":4},"end":{"line":3009,"column":41}},"1167":{"start":{"line":3010,"column":4},"end":{"line":3010,"column":50}},"1168":{"start":{"line":3019,"column":4},"end":{"line":3019,"column":41}},"1169":{"start":{"line":3020,"column":4},"end":{"line":3020,"column":51}},"1170":{"start":{"line":3031,"column":4},"end":{"line":3031,"column":41}},"1171":{"start":{"line":3034,"column":4},"end":{"line":3034,"column":20}},"1172":{"start":{"line":3035,"column":4},"end":{"line":3035,"column":23}},"1173":{"start":{"line":3038,"column":4},"end":{"line":3038,"column":50}},"1174":{"start":{"line":3040,"column":4},"end":{"line":3040,"column":51}},"1175":{"start":{"line":3042,"column":4},"end":{"line":3042,"column":59}},"1176":{"start":{"line":3051,"column":4},"end":{"line":3051,"column":41}},"1177":{"start":{"line":3052,"column":4},"end":{"line":3052,"column":50}},"1178":{"start":{"line":3061,"column":4},"end":{"line":3061,"column":41}},"1179":{"start":{"line":3062,"column":4},"end":{"line":3062,"column":49}},"1180":{"start":{"line":3071,"column":4},"end":{"line":3071,"column":41}},"1181":{"start":{"line":3072,"column":4},"end":{"line":3072,"column":49}},"1182":{"start":{"line":3081,"column":4},"end":{"line":3081,"column":41}},"1183":{"start":{"line":3082,"column":4},"end":{"line":3082,"column":54}},"1184":{"start":{"line":3104,"column":4},"end":{"line":3104,"column":28}},"1185":{"start":{"line":3105,"column":4},"end":{"line":3105,"column":52}},"1186":{"start":{"line":3106,"column":4},"end":{"line":3106,"column":66}},"1187":{"start":{"line":3108,"column":4},"end":{"line":3120,"column":5}},"1188":{"start":{"line":3109,"column":6},"end":{"line":3109,"column":43}},"1189":{"start":{"line":3110,"column":6},"end":{"line":3110,"column":22}},"1190":{"start":{"line":3112,"column":6},"end":{"line":3117,"column":7}},"1191":{"start":{"line":3114,"column":8},"end":{"line":3114,"column":30}},"1192":{"start":{"line":3115,"column":8},"end":{"line":3115,"column":25}},"1193":{"start":{"line":3116,"column":8},"end":{"line":3116,"column":56}},"1194":{"start":{"line":3119,"column":6},"end":{"line":3119,"column":42}},"1195":{"start":{"line":3122,"column":4},"end":{"line":3122,"column":14}},"1196":{"start":{"line":3126,"column":0},"end":{"line":3128,"column":1}},"1197":{"start":{"line":3127,"column":2},"end":{"line":3127,"column":86}},"1198":{"start":{"line":3130,"column":0},"end":{"line":3139,"column":1}},"1199":{"start":{"line":3137,"column":4},"end":{"line":3137,"column":15}},"1200":{"start":{"line":3141,"column":0},"end":{"line":3215,"column":1}},"1201":{"start":{"line":3148,"column":4},"end":{"line":3148,"column":44}},"1202":{"start":{"line":3149,"column":4},"end":{"line":3149,"column":28}},"1203":{"start":{"line":3150,"column":4},"end":{"line":3150,"column":28}},"1204":{"start":{"line":3151,"column":4},"end":{"line":3151,"column":79}},"1205":{"start":{"line":3160,"column":4},"end":{"line":3160,"column":44}},"1206":{"start":{"line":3161,"column":4},"end":{"line":3161,"column":41}},"1207":{"start":{"line":3170,"column":4},"end":{"line":3170,"column":44}},"1208":{"start":{"line":3171,"column":4},"end":{"line":3171,"column":57}},"1209":{"start":{"line":3180,"column":4},"end":{"line":3180,"column":44}},"1210":{"start":{"line":3181,"column":4},"end":{"line":3181,"column":34}},"1211":{"start":{"line":3190,"column":4},"end":{"line":3190,"column":44}},"1212":{"start":{"line":3191,"column":4},"end":{"line":3191,"column":67}},"1213":{"start":{"line":3201,"column":4},"end":{"line":3201,"column":47}},"1214":{"start":{"line":3202,"column":4},"end":{"line":3202,"column":28}},"1215":{"start":{"line":3212,"column":4},"end":{"line":3212,"column":47}},"1216":{"start":{"line":3213,"column":4},"end":{"line":3213,"column":29}},"1217":{"start":{"line":3217,"column":0},"end":{"line":3353,"column":1}},"1218":{"start":{"line":3227,"column":4},"end":{"line":3227,"column":44}},"1219":{"start":{"line":3229,"column":4},"end":{"line":3231,"column":5}},"1220":{"start":{"line":3230,"column":6},"end":{"line":3230,"column":17}},"1221":{"start":{"line":3232,"column":4},"end":{"line":3232,"column":24}},"1222":{"start":{"line":3244,"column":4},"end":{"line":3244,"column":43}},"1223":{"start":{"line":3246,"column":4},"end":{"line":3246,"column":34}},"1224":{"start":{"line":3246,"column":23},"end":{"line":3246,"column":34}},"1225":{"start":{"line":3248,"column":4},"end":{"line":3248,"column":84}},"1226":{"start":{"line":3249,"column":4},"end":{"line":3249,"column":85}},"1227":{"start":{"line":3251,"column":4},"end":{"line":3251,"column":20}},"1228":{"start":{"line":3252,"column":4},"end":{"line":3252,"column":26}},"1229":{"start":{"line":3253,"column":4},"end":{"line":3253,"column":22}},"1230":{"start":{"line":3254,"column":4},"end":{"line":3254,"column":20}},"1231":{"start":{"line":3256,"column":4},"end":{"line":3259,"column":5}},"1232":{"start":{"line":3260,"column":4},"end":{"line":3260,"column":22}},"1233":{"start":{"line":3262,"column":4},"end":{"line":3265,"column":5}},"1234":{"start":{"line":3266,"column":4},"end":{"line":3266,"column":27}},"1235":{"start":{"line":3268,"column":4},"end":{"line":3268,"column":30}},"1236":{"start":{"line":3268,"column":21},"end":{"line":3268,"column":30}},"1237":{"start":{"line":3270,"column":4},"end":{"line":3270,"column":60}},"1238":{"start":{"line":3271,"column":4},"end":{"line":3273,"column":13}},"1239":{"start":{"line":3285,"column":4},"end":{"line":3285,"column":44}},"1240":{"start":{"line":3286,"column":4},"end":{"line":3286,"column":137}},"1241":{"start":{"line":3287,"column":4},"end":{"line":3287,"column":138}},"1242":{"start":{"line":3288,"column":4},"end":{"line":3288,"column":33}},"1243":{"start":{"line":3299,"column":4},"end":{"line":3299,"column":44}},"1244":{"start":{"line":3300,"column":4},"end":{"line":3300,"column":59}},"1245":{"start":{"line":3301,"column":4},"end":{"line":3301,"column":59}},"1246":{"start":{"line":3302,"column":4},"end":{"line":3304,"column":5}},"1247":{"start":{"line":3303,"column":6},"end":{"line":3303,"column":14}},"1248":{"start":{"line":3305,"column":4},"end":{"line":3305,"column":39}},"1249":{"start":{"line":3317,"column":4},"end":{"line":3317,"column":44}},"1250":{"start":{"line":3318,"column":4},"end":{"line":3326,"column":5}},"1251":{"start":{"line":3319,"column":6},"end":{"line":3325,"column":7}},"1252":{"start":{"line":3320,"column":8},"end":{"line":3320,"column":17}},"1253":{"start":{"line":3321,"column":13},"end":{"line":3325,"column":7}},"1254":{"start":{"line":3322,"column":8},"end":{"line":3322,"column":38}},"1255":{"start":{"line":3324,"column":8},"end":{"line":3324,"column":47}},"1256":{"start":{"line":3327,"column":4},"end":{"line":3327,"column":13}},"1257":{"start":{"line":3338,"column":4},"end":{"line":3338,"column":45}},"1258":{"start":{"line":3339,"column":4},"end":{"line":3339,"column":52}},"1259":{"start":{"line":3350,"column":4},"end":{"line":3350,"column":45}},"1260":{"start":{"line":3351,"column":4},"end":{"line":3351,"column":52}},"1261":{"start":{"line":3359,"column":0},"end":{"line":3428,"column":1}},"1262":{"start":{"line":3367,"column":4},"end":{"line":3367,"column":58}},"1263":{"start":{"line":3368,"column":4},"end":{"line":3370,"column":5}},"1264":{"start":{"line":3369,"column":6},"end":{"line":3369,"column":63}},"1265":{"start":{"line":3371,"column":4},"end":{"line":3371,"column":27}},"1266":{"start":{"line":3372,"column":4},"end":{"line":3372,"column":27}},"1267":{"start":{"line":3377,"column":4},"end":{"line":3377,"column":30}},"1268":{"start":{"line":3379,"column":4},"end":{"line":3379,"column":31}},"1269":{"start":{"line":3380,"column":4},"end":{"line":3390,"column":6}},"1270":{"start":{"line":3381,"column":6},"end":{"line":3381,"column":25}},"1271":{"start":{"line":3382,"column":6},"end":{"line":3382,"column":49}},"1272":{"start":{"line":3384,"column":6},"end":{"line":3388,"column":7}},"1273":{"start":{"line":3385,"column":8},"end":{"line":3385,"column":27}},"1274":{"start":{"line":3387,"column":8},"end":{"line":3387,"column":31}},"1275":{"start":{"line":3389,"column":6},"end":{"line":3389,"column":18}},"1276":{"start":{"line":3400,"column":4},"end":{"line":3400,"column":31}},"1277":{"start":{"line":3401,"column":4},"end":{"line":3401,"column":27}},"1278":{"start":{"line":3404,"column":4},"end":{"line":3404,"column":22}},"1279":{"start":{"line":3405,"column":4},"end":{"line":3405,"column":33}},"1280":{"start":{"line":3406,"column":4},"end":{"line":3412,"column":6}},"1281":{"start":{"line":3407,"column":6},"end":{"line":3407,"column":54}},"1282":{"start":{"line":3408,"column":6},"end":{"line":3408,"column":29}},"1283":{"start":{"line":3410,"column":6},"end":{"line":3410,"column":39}},"1284":{"start":{"line":3411,"column":6},"end":{"line":3411,"column":24}},"1285":{"start":{"line":3414,"column":4},"end":{"line":3414,"column":47}},"1286":{"start":{"line":3417,"column":4},"end":{"line":3424,"column":6}},"1287":{"start":{"line":3418,"column":6},"end":{"line":3418,"column":29}},"1288":{"start":{"line":3419,"column":6},"end":{"line":3423,"column":7}},"1289":{"start":{"line":3420,"column":8},"end":{"line":3420,"column":27}},"1290":{"start":{"line":3422,"column":8},"end":{"line":3422,"column":41}},"1291":{"start":{"line":3426,"column":4},"end":{"line":3426,"column":16}},"1292":{"start":{"line":3431,"column":0},"end":{"line":3443,"column":1}},"1293":{"start":{"line":3448,"column":0},"end":{"line":3448,"column":58}},"1294":{"start":{"line":3449,"column":0},"end":{"line":3449,"column":58}},"1295":{"start":{"line":3450,"column":0},"end":{"line":3450,"column":74}},"1296":{"start":{"line":3451,"column":0},"end":{"line":3451,"column":70}},"1297":{"start":{"line":3452,"column":0},"end":{"line":3452,"column":78}},"1298":{"start":{"line":3455,"column":0},"end":{"line":3461,"column":1}},"1299":{"start":{"line":3468,"column":0},"end":{"line":3470,"column":1}},"1300":{"start":{"line":3469,"column":2},"end":{"line":3469,"column":33}},"1301":{"start":{"line":3478,"column":0},"end":{"line":3546,"column":1}},"1302":{"start":{"line":3480,"column":2},"end":{"line":3485,"column":4}},"1303":{"start":{"line":3488,"column":2},"end":{"line":3488,"column":88}},"1304":{"start":{"line":3490,"column":2},"end":{"line":3490,"column":36}},"1305":{"start":{"line":3493,"column":2},"end":{"line":3496,"column":4}},"1306":{"start":{"line":3494,"column":4},"end":{"line":3494,"column":68}},"1307":{"start":{"line":3495,"column":4},"end":{"line":3495,"column":103}},"1308":{"start":{"line":3498,"column":2},"end":{"line":3498,"column":18}},"1309":{"start":{"line":3500,"column":2},"end":{"line":3542,"column":3}},"1310":{"start":{"line":3502,"column":6},"end":{"line":3521,"column":8}},"1311":{"start":{"line":3503,"column":8},"end":{"line":3520,"column":28}},"1312":{"start":{"line":3504,"column":10},"end":{"line":3519,"column":11}},"1313":{"start":{"line":3505,"column":12},"end":{"line":3518,"column":13}},"1314":{"start":{"line":3508,"column":16},"end":{"line":3508,"column":48}},"1315":{"start":{"line":3509,"column":16},"end":{"line":3509,"column":62}},"1316":{"start":{"line":3510,"column":16},"end":{"line":3516,"column":17}},"1317":{"start":{"line":3511,"column":18},"end":{"line":3511,"column":31}},"1318":{"start":{"line":3512,"column":23},"end":{"line":3516,"column":17}},"1319":{"start":{"line":3513,"column":18},"end":{"line":3513,"column":41}},"1320":{"start":{"line":3515,"column":18},"end":{"line":3515,"column":99}},"1321":{"start":{"line":3522,"column":6},"end":{"line":3522,"column":11}},"1322":{"start":{"line":3524,"column":6},"end":{"line":3531,"column":8}},"1323":{"start":{"line":3525,"column":8},"end":{"line":3530,"column":28}},"1324":{"start":{"line":3526,"column":10},"end":{"line":3529,"column":11}},"1325":{"start":{"line":3527,"column":12},"end":{"line":3527,"column":44}},"1326":{"start":{"line":3528,"column":12},"end":{"line":3528,"column":51}},"1327":{"start":{"line":3532,"column":6},"end":{"line":3532,"column":11}},"1328":{"start":{"line":3534,"column":6},"end":{"line":3541,"column":8}},"1329":{"start":{"line":3535,"column":8},"end":{"line":3540,"column":28}},"1330":{"start":{"line":3536,"column":10},"end":{"line":3539,"column":11}},"1331":{"start":{"line":3537,"column":12},"end":{"line":3537,"column":55}},"1332":{"start":{"line":3538,"column":12},"end":{"line":3538,"column":37}},"1333":{"start":{"line":3545,"column":2},"end":{"line":3545,"column":44}},"1334":{"start":{"line":3556,"column":0},"end":{"line":3558,"column":1}},"1335":{"start":{"line":3557,"column":2},"end":{"line":3557,"column":65}},"1336":{"start":{"line":3567,"column":0},"end":{"line":3569,"column":1}},"1337":{"start":{"line":3568,"column":2},"end":{"line":3568,"column":55}},"1338":{"start":{"line":3578,"column":0},"end":{"line":3583,"column":1}},"1339":{"start":{"line":3579,"column":2},"end":{"line":3581,"column":3}},"1340":{"start":{"line":3580,"column":4},"end":{"line":3580,"column":48}},"1341":{"start":{"line":3582,"column":2},"end":{"line":3582,"column":57}},"1342":{"start":{"line":3588,"column":0},"end":{"line":3608,"column":1}},"1343":{"start":{"line":3597,"column":4},"end":{"line":3597,"column":58}},"1344":{"start":{"line":3606,"column":4},"end":{"line":3606,"column":62}},"1345":{"start":{"line":3612,"column":0},"end":{"line":3616,"column":1}},"1346":{"start":{"line":3613,"column":2},"end":{"line":3613,"column":24}},"1347":{"start":{"line":3615,"column":2},"end":{"line":3615,"column":20}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":0},"end":{"line":14,"column":0}},{"start":{"line":14,"column":0},"end":{"line":14,"column":0}}]},"2":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":0},"end":{"line":38,"column":0}},{"start":{"line":38,"column":0},"end":{"line":38,"column":0}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]},"4":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":33},"end":{"line":51,"column":37}},{"start":{"line":51,"column":40},"end":{"line":51,"column":45}}]},"5":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"6":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":0},"end":{"line":67,"column":0}},{"start":{"line":67,"column":0},"end":{"line":67,"column":0}}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":6},"end":{"line":70,"column":6}},{"start":{"line":70,"column":6},"end":{"line":70,"column":6}}]},"8":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":6},"end":{"line":77,"column":6}},{"start":{"line":77,"column":6},"end":{"line":77,"column":6}}]},"9":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":86,"column":8}},{"start":{"line":86,"column":8},"end":{"line":86,"column":8}}]},"10":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":0},"end":{"line":97,"column":0}},{"start":{"line":97,"column":0},"end":{"line":97,"column":0}}]},"11":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":6},"end":{"line":100,"column":6}},{"start":{"line":100,"column":6},"end":{"line":100,"column":6}}]},"12":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":6},"end":{"line":107,"column":6}},{"start":{"line":107,"column":6},"end":{"line":107,"column":6}}]},"13":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":8},"end":{"line":115,"column":8}},{"start":{"line":115,"column":8},"end":{"line":115,"column":8}}]},"14":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":0},"end":{"line":126,"column":0}},{"start":{"line":126,"column":0},"end":{"line":126,"column":0}}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":6},"end":{"line":129,"column":6}},{"start":{"line":129,"column":6},"end":{"line":129,"column":6}}]},"16":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":6},"end":{"line":136,"column":6}},{"start":{"line":136,"column":6},"end":{"line":136,"column":6}}]},"17":{"line":140,"type":"cond-expr","locations":[{"start":{"line":140,"column":32},"end":{"line":140,"column":33}},{"start":{"line":140,"column":36},"end":{"line":140,"column":53}}]},"18":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":8},"end":{"line":143,"column":8}},{"start":{"line":143,"column":8},"end":{"line":143,"column":8}}]},"19":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":0},"end":{"line":154,"column":0}},{"start":{"line":154,"column":0},"end":{"line":154,"column":0}}]},"20":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":157,"column":4}},{"start":{"line":157,"column":4},"end":{"line":157,"column":4}}]},"21":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":6},"end":{"line":167,"column":6}},{"start":{"line":167,"column":6},"end":{"line":167,"column":6}}]},"22":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":10},"end":{"line":170,"column":10}},{"start":{"line":170,"column":10},"end":{"line":170,"column":10}}]},"23":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":0},"end":{"line":181,"column":0}},{"start":{"line":181,"column":0},"end":{"line":181,"column":0}}]},"24":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":4},"end":{"line":183,"column":4}},{"start":{"line":183,"column":4},"end":{"line":183,"column":4}}]},"25":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":6},"end":{"line":189,"column":6}},{"start":{"line":189,"column":6},"end":{"line":189,"column":6}}]},"26":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":0},"end":{"line":198,"column":0}},{"start":{"line":198,"column":0},"end":{"line":198,"column":0}}]},"27":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":4},"end":{"line":200,"column":4}},{"start":{"line":200,"column":4},"end":{"line":200,"column":4}}]},"28":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":6},"end":{"line":205,"column":6}},{"start":{"line":205,"column":6},"end":{"line":205,"column":6}}]},"29":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":2},"end":{"line":233,"column":2}},{"start":{"line":233,"column":2},"end":{"line":233,"column":2}}]},"30":{"line":244,"type":"switch","locations":[{"start":{"line":245,"column":4},"end":{"line":246,"column":27}},{"start":{"line":247,"column":4},"end":{"line":248,"column":28}},{"start":{"line":249,"column":4},"end":{"line":250,"column":16}}]},"31":{"line":264,"type":"binary-expr","locations":[{"start":{"line":264,"column":28},"end":{"line":264,"column":37}},{"start":{"line":264,"column":41},"end":{"line":264,"column":55}}]},"32":{"line":272,"type":"binary-expr","locations":[{"start":{"line":272,"column":9},"end":{"line":272,"column":17}},{"start":{"line":273,"column":4},"end":{"line":273,"column":14}},{"start":{"line":273,"column":18},"end":{"line":273,"column":32}},{"start":{"line":274,"column":4},"end":{"line":274,"column":15}},{"start":{"line":274,"column":19},"end":{"line":274,"column":39}},{"start":{"line":275,"column":4},"end":{"line":275,"column":6}}]},"33":{"line":278,"type":"cond-expr","locations":[{"start":{"line":278,"column":41},"end":{"line":278,"column":42}},{"start":{"line":278,"column":45},"end":{"line":278,"column":48}}]},"34":{"line":295,"type":"if","locations":[{"start":{"line":295,"column":2},"end":{"line":295,"column":2}},{"start":{"line":295,"column":2},"end":{"line":295,"column":2}}]},"35":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":6},"end":{"line":299,"column":6}},{"start":{"line":299,"column":6},"end":{"line":299,"column":6}}]},"36":{"line":315,"type":"if","locations":[{"start":{"line":315,"column":2},"end":{"line":315,"column":2}},{"start":{"line":315,"column":2},"end":{"line":315,"column":2}}]},"37":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":9},"end":{"line":317,"column":9}},{"start":{"line":317,"column":9},"end":{"line":317,"column":9}}]},"38":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":6},"end":{"line":365,"column":6}},{"start":{"line":365,"column":6},"end":{"line":365,"column":6}}]},"39":{"line":365,"type":"binary-expr","locations":[{"start":{"line":365,"column":10},"end":{"line":365,"column":24}},{"start":{"line":365,"column":29},"end":{"line":365,"column":37}},{"start":{"line":365,"column":41},"end":{"line":365,"column":49}}]},"40":{"line":372,"type":"binary-expr","locations":[{"start":{"line":372,"column":13},"end":{"line":372,"column":18}},{"start":{"line":372,"column":22},"end":{"line":372,"column":24}}]},"41":{"line":385,"type":"if","locations":[{"start":{"line":385,"column":2},"end":{"line":385,"column":2}},{"start":{"line":385,"column":2},"end":{"line":385,"column":2}}]},"42":{"line":389,"type":"if","locations":[{"start":{"line":389,"column":2},"end":{"line":389,"column":2}},{"start":{"line":389,"column":2},"end":{"line":389,"column":2}}]},"43":{"line":392,"type":"if","locations":[{"start":{"line":392,"column":2},"end":{"line":392,"column":2}},{"start":{"line":392,"column":2},"end":{"line":392,"column":2}}]},"44":{"line":392,"type":"binary-expr","locations":[{"start":{"line":392,"column":6},"end":{"line":392,"column":23}},{"start":{"line":392,"column":27},"end":{"line":392,"column":35}},{"start":{"line":392,"column":39},"end":{"line":392,"column":47}}]},"45":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":2},"end":{"line":395,"column":2}},{"start":{"line":395,"column":2},"end":{"line":395,"column":2}}]},"46":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":2},"end":{"line":400,"column":2}},{"start":{"line":400,"column":2},"end":{"line":400,"column":2}}]},"47":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":4},"end":{"line":401,"column":4}},{"start":{"line":401,"column":4},"end":{"line":401,"column":4}}]},"48":{"line":401,"type":"binary-expr","locations":[{"start":{"line":401,"column":8},"end":{"line":401,"column":29}},{"start":{"line":401,"column":33},"end":{"line":401,"column":47}}]},"49":{"line":402,"type":"if","locations":[{"start":{"line":402,"column":4},"end":{"line":402,"column":4}},{"start":{"line":402,"column":4},"end":{"line":402,"column":4}}]},"50":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":6},"end":{"line":404,"column":6}},{"start":{"line":404,"column":6},"end":{"line":404,"column":6}}]},"51":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":9},"end":{"line":406,"column":9}},{"start":{"line":406,"column":9},"end":{"line":406,"column":9}}]},"52":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":4},"end":{"line":412,"column":4}},{"start":{"line":412,"column":4},"end":{"line":412,"column":4}}]},"53":{"line":419,"type":"if","locations":[{"start":{"line":419,"column":4},"end":{"line":419,"column":4}},{"start":{"line":419,"column":4},"end":{"line":419,"column":4}}]},"54":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":6},"end":{"line":424,"column":6}},{"start":{"line":424,"column":6},"end":{"line":424,"column":6}}]},"55":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":4},"end":{"line":444,"column":4}},{"start":{"line":444,"column":4},"end":{"line":444,"column":4}}]},"56":{"line":461,"type":"if","locations":[{"start":{"line":461,"column":2},"end":{"line":461,"column":2}},{"start":{"line":461,"column":2},"end":{"line":461,"column":2}}]},"57":{"line":484,"type":"if","locations":[{"start":{"line":484,"column":4},"end":{"line":484,"column":4}},{"start":{"line":484,"column":4},"end":{"line":484,"column":4}}]},"58":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":4},"end":{"line":493,"column":4}},{"start":{"line":493,"column":4},"end":{"line":493,"column":4}}]},"59":{"line":494,"type":"if","locations":[{"start":{"line":494,"column":4},"end":{"line":494,"column":4}},{"start":{"line":494,"column":4},"end":{"line":494,"column":4}}]},"60":{"line":495,"type":"if","locations":[{"start":{"line":495,"column":4},"end":{"line":495,"column":4}},{"start":{"line":495,"column":4},"end":{"line":495,"column":4}}]},"61":{"line":496,"type":"if","locations":[{"start":{"line":496,"column":4},"end":{"line":496,"column":4}},{"start":{"line":496,"column":4},"end":{"line":496,"column":4}}]},"62":{"line":522,"type":"if","locations":[{"start":{"line":522,"column":4},"end":{"line":522,"column":4}},{"start":{"line":522,"column":4},"end":{"line":522,"column":4}}]},"63":{"line":554,"type":"binary-expr","locations":[{"start":{"line":554,"column":26},"end":{"line":554,"column":33}},{"start":{"line":554,"column":37},"end":{"line":554,"column":39}}]},"64":{"line":585,"type":"if","locations":[{"start":{"line":585,"column":4},"end":{"line":585,"column":4}},{"start":{"line":585,"column":4},"end":{"line":585,"column":4}}]},"65":{"line":590,"type":"if","locations":[{"start":{"line":590,"column":6},"end":{"line":590,"column":6}},{"start":{"line":590,"column":6},"end":{"line":590,"column":6}}]},"66":{"line":591,"type":"if","locations":[{"start":{"line":591,"column":8},"end":{"line":591,"column":8}},{"start":{"line":591,"column":8},"end":{"line":591,"column":8}}]},"67":{"line":594,"type":"if","locations":[{"start":{"line":594,"column":12},"end":{"line":594,"column":12}},{"start":{"line":594,"column":12},"end":{"line":594,"column":12}}]},"68":{"line":597,"type":"if","locations":[{"start":{"line":597,"column":12},"end":{"line":597,"column":12}},{"start":{"line":597,"column":12},"end":{"line":597,"column":12}}]},"69":{"line":603,"type":"if","locations":[{"start":{"line":603,"column":8},"end":{"line":603,"column":8}},{"start":{"line":603,"column":8},"end":{"line":603,"column":8}}]},"70":{"line":649,"type":"if","locations":[{"start":{"line":649,"column":4},"end":{"line":649,"column":4}},{"start":{"line":649,"column":4},"end":{"line":649,"column":4}}]},"71":{"line":649,"type":"binary-expr","locations":[{"start":{"line":649,"column":8},"end":{"line":649,"column":14}},{"start":{"line":649,"column":18},"end":{"line":649,"column":32}}]},"72":{"line":653,"type":"if","locations":[{"start":{"line":653,"column":6},"end":{"line":653,"column":6}},{"start":{"line":653,"column":6},"end":{"line":653,"column":6}}]},"73":{"line":653,"type":"binary-expr","locations":[{"start":{"line":653,"column":10},"end":{"line":653,"column":27}},{"start":{"line":653,"column":31},"end":{"line":653,"column":38}}]},"74":{"line":663,"type":"if","locations":[{"start":{"line":663,"column":6},"end":{"line":663,"column":6}},{"start":{"line":663,"column":6},"end":{"line":663,"column":6}}]},"75":{"line":671,"type":"if","locations":[{"start":{"line":671,"column":4},"end":{"line":671,"column":4}},{"start":{"line":671,"column":4},"end":{"line":671,"column":4}}]},"76":{"line":685,"type":"if","locations":[{"start":{"line":685,"column":2},"end":{"line":685,"column":2}},{"start":{"line":685,"column":2},"end":{"line":685,"column":2}}]},"77":{"line":690,"type":"binary-expr","locations":[{"start":{"line":690,"column":13},"end":{"line":690,"column":31}},{"start":{"line":690,"column":35},"end":{"line":690,"column":59}}]},"78":{"line":697,"type":"if","locations":[{"start":{"line":697,"column":4},"end":{"line":697,"column":4}},{"start":{"line":697,"column":4},"end":{"line":697,"column":4}}]},"79":{"line":698,"type":"if","locations":[{"start":{"line":698,"column":6},"end":{"line":698,"column":6}},{"start":{"line":698,"column":6},"end":{"line":698,"column":6}}]},"80":{"line":700,"type":"if","locations":[{"start":{"line":700,"column":8},"end":{"line":700,"column":8}},{"start":{"line":700,"column":8},"end":{"line":700,"column":8}}]},"81":{"line":709,"type":"if","locations":[{"start":{"line":709,"column":10},"end":{"line":709,"column":10}},{"start":{"line":709,"column":10},"end":{"line":709,"column":10}}]},"82":{"line":715,"type":"if","locations":[{"start":{"line":715,"column":6},"end":{"line":715,"column":6}},{"start":{"line":715,"column":6},"end":{"line":715,"column":6}}]},"83":{"line":740,"type":"binary-expr","locations":[{"start":{"line":740,"column":13},"end":{"line":740,"column":31}},{"start":{"line":740,"column":35},"end":{"line":740,"column":59}}]},"84":{"line":742,"type":"if","locations":[{"start":{"line":742,"column":2},"end":{"line":742,"column":2}},{"start":{"line":742,"column":2},"end":{"line":742,"column":2}}]},"85":{"line":745,"type":"if","locations":[{"start":{"line":745,"column":4},"end":{"line":745,"column":4}},{"start":{"line":745,"column":4},"end":{"line":745,"column":4}}]},"86":{"line":745,"type":"binary-expr","locations":[{"start":{"line":745,"column":8},"end":{"line":745,"column":20}},{"start":{"line":745,"column":24},"end":{"line":745,"column":42}}]},"87":{"line":751,"type":"if","locations":[{"start":{"line":751,"column":6},"end":{"line":751,"column":6}},{"start":{"line":751,"column":6},"end":{"line":751,"column":6}}]},"88":{"line":753,"type":"if","locations":[{"start":{"line":753,"column":8},"end":{"line":753,"column":8}},{"start":{"line":753,"column":8},"end":{"line":753,"column":8}}]},"89":{"line":753,"type":"binary-expr","locations":[{"start":{"line":753,"column":12},"end":{"line":753,"column":19}},{"start":{"line":753,"column":23},"end":{"line":753,"column":38}}]},"90":{"line":777,"type":"if","locations":[{"start":{"line":777,"column":4},"end":{"line":777,"column":4}},{"start":{"line":777,"column":4},"end":{"line":777,"column":4}}]},"91":{"line":777,"type":"binary-expr","locations":[{"start":{"line":777,"column":8},"end":{"line":777,"column":21}},{"start":{"line":777,"column":25},"end":{"line":777,"column":42}}]},"92":{"line":779,"type":"if","locations":[{"start":{"line":779,"column":11},"end":{"line":779,"column":11}},{"start":{"line":779,"column":11},"end":{"line":779,"column":11}}]},"93":{"line":793,"type":"if","locations":[{"start":{"line":793,"column":4},"end":{"line":793,"column":4}},{"start":{"line":793,"column":4},"end":{"line":793,"column":4}}]},"94":{"line":802,"type":"binary-expr","locations":[{"start":{"line":802,"column":9},"end":{"line":802,"column":27}},{"start":{"line":802,"column":31},"end":{"line":802,"column":51}}]},"95":{"line":812,"type":"if","locations":[{"start":{"line":812,"column":2},"end":{"line":812,"column":2}},{"start":{"line":812,"column":2},"end":{"line":812,"column":2}}]},"96":{"line":813,"type":"cond-expr","locations":[{"start":{"line":813,"column":28},"end":{"line":813,"column":44}},{"start":{"line":813,"column":47},"end":{"line":813,"column":60}}]},"97":{"line":817,"type":"if","locations":[{"start":{"line":817,"column":2},"end":{"line":817,"column":2}},{"start":{"line":817,"column":2},"end":{"line":817,"column":2}}]},"98":{"line":822,"type":"if","locations":[{"start":{"line":822,"column":4},"end":{"line":822,"column":4}},{"start":{"line":822,"column":4},"end":{"line":822,"column":4}}]},"99":{"line":827,"type":"if","locations":[{"start":{"line":827,"column":4},"end":{"line":827,"column":4}},{"start":{"line":827,"column":4},"end":{"line":827,"column":4}}]},"100":{"line":829,"type":"binary-expr","locations":[{"start":{"line":829,"column":20},"end":{"line":829,"column":36}},{"start":{"line":829,"column":40},"end":{"line":829,"column":42}}]},"101":{"line":831,"type":"if","locations":[{"start":{"line":831,"column":6},"end":{"line":831,"column":6}},{"start":{"line":831,"column":6},"end":{"line":831,"column":6}}]},"102":{"line":832,"type":"cond-expr","locations":[{"start":{"line":832,"column":71},"end":{"line":832,"column":74}},{"start":{"line":832,"column":77},"end":{"line":832,"column":79}}]},"103":{"line":832,"type":"binary-expr","locations":[{"start":{"line":832,"column":22},"end":{"line":832,"column":38}},{"start":{"line":832,"column":42},"end":{"line":832,"column":67}}]},"104":{"line":833,"type":"cond-expr","locations":[{"start":{"line":833,"column":70},"end":{"line":833,"column":73}},{"start":{"line":833,"column":76},"end":{"line":833,"column":78}}]},"105":{"line":833,"type":"binary-expr","locations":[{"start":{"line":833,"column":22},"end":{"line":833,"column":37}},{"start":{"line":833,"column":41},"end":{"line":833,"column":66}}]},"106":{"line":834,"type":"cond-expr","locations":[{"start":{"line":834,"column":67},"end":{"line":834,"column":70}},{"start":{"line":834,"column":73},"end":{"line":834,"column":75}}]},"107":{"line":834,"type":"binary-expr","locations":[{"start":{"line":834,"column":22},"end":{"line":834,"column":34}},{"start":{"line":834,"column":38},"end":{"line":834,"column":63}}]},"108":{"line":854,"type":"binary-expr","locations":[{"start":{"line":854,"column":8},"end":{"line":854,"column":11}},{"start":{"line":854,"column":15},"end":{"line":854,"column":17}}]},"109":{"line":855,"type":"binary-expr","locations":[{"start":{"line":855,"column":13},"end":{"line":855,"column":21}},{"start":{"line":855,"column":25},"end":{"line":855,"column":35}}]},"110":{"line":858,"type":"if","locations":[{"start":{"line":858,"column":2},"end":{"line":858,"column":2}},{"start":{"line":858,"column":2},"end":{"line":858,"column":2}}]},"111":{"line":863,"type":"if","locations":[{"start":{"line":863,"column":2},"end":{"line":863,"column":2}},{"start":{"line":863,"column":2},"end":{"line":863,"column":2}}]},"112":{"line":873,"type":"if","locations":[{"start":{"line":873,"column":2},"end":{"line":873,"column":2}},{"start":{"line":873,"column":2},"end":{"line":873,"column":2}}]},"113":{"line":873,"type":"binary-expr","locations":[{"start":{"line":873,"column":6},"end":{"line":873,"column":20}},{"start":{"line":873,"column":24},"end":{"line":873,"column":39}},{"start":{"line":873,"column":43},"end":{"line":873,"column":58}}]},"114":{"line":875,"type":"if","locations":[{"start":{"line":875,"column":4},"end":{"line":875,"column":4}},{"start":{"line":875,"column":4},"end":{"line":875,"column":4}}]},"115":{"line":877,"type":"if","locations":[{"start":{"line":877,"column":11},"end":{"line":877,"column":11}},{"start":{"line":877,"column":11},"end":{"line":877,"column":11}}]},"116":{"line":883,"type":"if","locations":[{"start":{"line":883,"column":4},"end":{"line":883,"column":4}},{"start":{"line":883,"column":4},"end":{"line":883,"column":4}}]},"117":{"line":885,"type":"if","locations":[{"start":{"line":885,"column":6},"end":{"line":885,"column":6}},{"start":{"line":885,"column":6},"end":{"line":885,"column":6}}]},"118":{"line":895,"type":"switch","locations":[{"start":{"line":896,"column":4},"end":{"line":899,"column":8}},{"start":{"line":900,"column":4},"end":{"line":915,"column":19}},{"start":{"line":916,"column":4},"end":{"line":917,"column":24}}]},"119":{"line":903,"type":"if","locations":[{"start":{"line":903,"column":8},"end":{"line":903,"column":8}},{"start":{"line":903,"column":8},"end":{"line":903,"column":8}}]},"120":{"line":907,"type":"if","locations":[{"start":{"line":907,"column":10},"end":{"line":907,"column":10}},{"start":{"line":907,"column":10},"end":{"line":907,"column":10}}]},"121":{"line":932,"type":"if","locations":[{"start":{"line":932,"column":2},"end":{"line":932,"column":2}},{"start":{"line":932,"column":2},"end":{"line":932,"column":2}}]},"122":{"line":933,"type":"if","locations":[{"start":{"line":933,"column":4},"end":{"line":933,"column":4}},{"start":{"line":933,"column":4},"end":{"line":933,"column":4}}]},"123":{"line":941,"type":"if","locations":[{"start":{"line":941,"column":4},"end":{"line":941,"column":4}},{"start":{"line":941,"column":4},"end":{"line":941,"column":4}}]},"124":{"line":957,"type":"binary-expr","locations":[{"start":{"line":957,"column":10},"end":{"line":957,"column":28}},{"start":{"line":957,"column":32},"end":{"line":957,"column":33}}]},"125":{"line":958,"type":"cond-expr","locations":[{"start":{"line":958,"column":35},"end":{"line":958,"column":36}},{"start":{"line":958,"column":39},"end":{"line":958,"column":40}}]},"126":{"line":973,"type":"binary-expr","locations":[{"start":{"line":973,"column":8},"end":{"line":973,"column":11}},{"start":{"line":973,"column":15},"end":{"line":973,"column":17}}]},"127":{"line":974,"type":"binary-expr","locations":[{"start":{"line":974,"column":13},"end":{"line":974,"column":21}},{"start":{"line":974,"column":25},"end":{"line":974,"column":35}}]},"128":{"line":977,"type":"cond-expr","locations":[{"start":{"line":978,"column":6},"end":{"line":978,"column":45}},{"start":{"line":979,"column":6},"end":{"line":979,"column":12}}]},"129":{"line":989,"type":"if","locations":[{"start":{"line":989,"column":2},"end":{"line":989,"column":2}},{"start":{"line":989,"column":2},"end":{"line":989,"column":2}}]},"130":{"line":1002,"type":"if","locations":[{"start":{"line":1002,"column":2},"end":{"line":1002,"column":2}},{"start":{"line":1002,"column":2},"end":{"line":1002,"column":2}}]},"131":{"line":1007,"type":"if","locations":[{"start":{"line":1007,"column":6},"end":{"line":1007,"column":6}},{"start":{"line":1007,"column":6},"end":{"line":1007,"column":6}}]},"132":{"line":1007,"type":"binary-expr","locations":[{"start":{"line":1007,"column":10},"end":{"line":1007,"column":26}},{"start":{"line":1007,"column":30},"end":{"line":1007,"column":64}}]},"133":{"line":1009,"type":"if","locations":[{"start":{"line":1009,"column":8},"end":{"line":1009,"column":8}},{"start":{"line":1009,"column":8},"end":{"line":1009,"column":8}}]},"134":{"line":1030,"type":"if","locations":[{"start":{"line":1030,"column":2},"end":{"line":1030,"column":2}},{"start":{"line":1030,"column":2},"end":{"line":1030,"column":2}}]},"135":{"line":1036,"type":"binary-expr","locations":[{"start":{"line":1036,"column":22},"end":{"line":1036,"column":32}},{"start":{"line":1036,"column":36},"end":{"line":1036,"column":54}}]},"136":{"line":1047,"type":"if","locations":[{"start":{"line":1047,"column":4},"end":{"line":1047,"column":4}},{"start":{"line":1047,"column":4},"end":{"line":1047,"column":4}}]},"137":{"line":1052,"type":"if","locations":[{"start":{"line":1052,"column":4},"end":{"line":1052,"column":4}},{"start":{"line":1052,"column":4},"end":{"line":1052,"column":4}}]},"138":{"line":1056,"type":"if","locations":[{"start":{"line":1056,"column":4},"end":{"line":1056,"column":4}},{"start":{"line":1056,"column":4},"end":{"line":1056,"column":4}}]},"139":{"line":1065,"type":"if","locations":[{"start":{"line":1065,"column":6},"end":{"line":1065,"column":6}},{"start":{"line":1065,"column":6},"end":{"line":1065,"column":6}}]},"140":{"line":1072,"type":"if","locations":[{"start":{"line":1072,"column":4},"end":{"line":1072,"column":4}},{"start":{"line":1072,"column":4},"end":{"line":1072,"column":4}}]},"141":{"line":1092,"type":"cond-expr","locations":[{"start":{"line":1092,"column":30},"end":{"line":1092,"column":46}},{"start":{"line":1092,"column":49},"end":{"line":1092,"column":53}}]},"142":{"line":1100,"type":"cond-expr","locations":[{"start":{"line":1100,"column":30},"end":{"line":1100,"column":61}},{"start":{"line":1100,"column":64},"end":{"line":1100,"column":68}}]},"143":{"line":1146,"type":"if","locations":[{"start":{"line":1146,"column":4},"end":{"line":1146,"column":4}},{"start":{"line":1146,"column":4},"end":{"line":1146,"column":4}}]},"144":{"line":1203,"type":"if","locations":[{"start":{"line":1203,"column":2},"end":{"line":1203,"column":2}},{"start":{"line":1203,"column":2},"end":{"line":1203,"column":2}}]},"145":{"line":1214,"type":"if","locations":[{"start":{"line":1214,"column":4},"end":{"line":1214,"column":4}},{"start":{"line":1214,"column":4},"end":{"line":1214,"column":4}}]},"146":{"line":1219,"type":"if","locations":[{"start":{"line":1219,"column":6},"end":{"line":1219,"column":6}},{"start":{"line":1219,"column":6},"end":{"line":1219,"column":6}}]},"147":{"line":1221,"type":"if","locations":[{"start":{"line":1221,"column":8},"end":{"line":1221,"column":8}},{"start":{"line":1221,"column":8},"end":{"line":1221,"column":8}}]},"148":{"line":1227,"type":"if","locations":[{"start":{"line":1227,"column":12},"end":{"line":1227,"column":12}},{"start":{"line":1227,"column":12},"end":{"line":1227,"column":12}}]},"149":{"line":1237,"type":"if","locations":[{"start":{"line":1237,"column":4},"end":{"line":1237,"column":4}},{"start":{"line":1237,"column":4},"end":{"line":1237,"column":4}}]},"150":{"line":1251,"type":"if","locations":[{"start":{"line":1251,"column":6},"end":{"line":1251,"column":6}},{"start":{"line":1251,"column":6},"end":{"line":1251,"column":6}}]},"151":{"line":1276,"type":"if","locations":[{"start":{"line":1276,"column":6},"end":{"line":1276,"column":6}},{"start":{"line":1276,"column":6},"end":{"line":1276,"column":6}}]},"152":{"line":1310,"type":"if","locations":[{"start":{"line":1310,"column":4},"end":{"line":1310,"column":4}},{"start":{"line":1310,"column":4},"end":{"line":1310,"column":4}}]},"153":{"line":1312,"type":"if","locations":[{"start":{"line":1312,"column":4},"end":{"line":1312,"column":4}},{"start":{"line":1312,"column":4},"end":{"line":1312,"column":4}}]},"154":{"line":1331,"type":"if","locations":[{"start":{"line":1331,"column":6},"end":{"line":1331,"column":6}},{"start":{"line":1331,"column":6},"end":{"line":1331,"column":6}}]},"155":{"line":1331,"type":"binary-expr","locations":[{"start":{"line":1331,"column":10},"end":{"line":1331,"column":20}},{"start":{"line":1331,"column":24},"end":{"line":1331,"column":31}}]},"156":{"line":1346,"type":"if","locations":[{"start":{"line":1346,"column":6},"end":{"line":1346,"column":6}},{"start":{"line":1346,"column":6},"end":{"line":1346,"column":6}}]},"157":{"line":1346,"type":"binary-expr","locations":[{"start":{"line":1346,"column":10},"end":{"line":1346,"column":20}},{"start":{"line":1346,"column":24},"end":{"line":1346,"column":31}}]},"158":{"line":1361,"type":"binary-expr","locations":[{"start":{"line":1361,"column":18},"end":{"line":1361,"column":32}},{"start":{"line":1361,"column":36},"end":{"line":1361,"column":37}}]},"159":{"line":1372,"type":"if","locations":[{"start":{"line":1372,"column":4},"end":{"line":1372,"column":4}},{"start":{"line":1372,"column":4},"end":{"line":1372,"column":4}}]},"160":{"line":1387,"type":"cond-expr","locations":[{"start":{"line":1387,"column":37},"end":{"line":1387,"column":70}},{"start":{"line":1387,"column":73},"end":{"line":1387,"column":82}}]},"161":{"line":1398,"type":"cond-expr","locations":[{"start":{"line":1398,"column":37},"end":{"line":1398,"column":90}},{"start":{"line":1398,"column":93},"end":{"line":1398,"column":102}}]},"162":{"line":1446,"type":"if","locations":[{"start":{"line":1446,"column":8},"end":{"line":1446,"column":8}},{"start":{"line":1446,"column":8},"end":{"line":1446,"column":8}}]},"163":{"line":1454,"type":"if","locations":[{"start":{"line":1454,"column":10},"end":{"line":1454,"column":10}},{"start":{"line":1454,"column":10},"end":{"line":1454,"column":10}}]},"164":{"line":1497,"type":"if","locations":[{"start":{"line":1497,"column":6},"end":{"line":1497,"column":6}},{"start":{"line":1497,"column":6},"end":{"line":1497,"column":6}}]},"165":{"line":1503,"type":"if","locations":[{"start":{"line":1503,"column":8},"end":{"line":1503,"column":8}},{"start":{"line":1503,"column":8},"end":{"line":1503,"column":8}}]},"166":{"line":1533,"type":"cond-expr","locations":[{"start":{"line":1533,"column":53},"end":{"line":1533,"column":57}},{"start":{"line":1533,"column":60},"end":{"line":1533,"column":61}}]},"167":{"line":1535,"type":"if","locations":[{"start":{"line":1535,"column":4},"end":{"line":1535,"column":4}},{"start":{"line":1535,"column":4},"end":{"line":1535,"column":4}}]},"168":{"line":1538,"type":"binary-expr","locations":[{"start":{"line":1538,"column":18},"end":{"line":1538,"column":25}},{"start":{"line":1538,"column":29},"end":{"line":1538,"column":31}}]},"169":{"line":1544,"type":"binary-expr","locations":[{"start":{"line":1544,"column":22},"end":{"line":1544,"column":29}},{"start":{"line":1544,"column":33},"end":{"line":1544,"column":35}}]},"170":{"line":1556,"type":"binary-expr","locations":[{"start":{"line":1556,"column":18},"end":{"line":1556,"column":25}},{"start":{"line":1556,"column":29},"end":{"line":1556,"column":31}}]},"171":{"line":1563,"type":"binary-expr","locations":[{"start":{"line":1563,"column":22},"end":{"line":1563,"column":29}},{"start":{"line":1563,"column":33},"end":{"line":1563,"column":35}}]},"172":{"line":1565,"type":"binary-expr","locations":[{"start":{"line":1565,"column":23},"end":{"line":1565,"column":36}},{"start":{"line":1565,"column":40},"end":{"line":1565,"column":60}}]},"173":{"line":1566,"type":"binary-expr","locations":[{"start":{"line":1566,"column":28},"end":{"line":1566,"column":43}},{"start":{"line":1566,"column":47},"end":{"line":1566,"column":49}}]},"174":{"line":1600,"type":"if","locations":[{"start":{"line":1600,"column":4},"end":{"line":1600,"column":4}},{"start":{"line":1600,"column":4},"end":{"line":1600,"column":4}}]},"175":{"line":1613,"type":"if","locations":[{"start":{"line":1613,"column":6},"end":{"line":1613,"column":6}},{"start":{"line":1613,"column":6},"end":{"line":1613,"column":6}}]},"176":{"line":1614,"type":"if","locations":[{"start":{"line":1614,"column":6},"end":{"line":1614,"column":6}},{"start":{"line":1614,"column":6},"end":{"line":1614,"column":6}}]},"177":{"line":1614,"type":"binary-expr","locations":[{"start":{"line":1614,"column":10},"end":{"line":1614,"column":17}},{"start":{"line":1614,"column":21},"end":{"line":1614,"column":32}}]},"178":{"line":1622,"type":"if","locations":[{"start":{"line":1622,"column":4},"end":{"line":1622,"column":4}},{"start":{"line":1622,"column":4},"end":{"line":1622,"column":4}}]},"179":{"line":1624,"type":"if","locations":[{"start":{"line":1624,"column":6},"end":{"line":1624,"column":6}},{"start":{"line":1624,"column":6},"end":{"line":1624,"column":6}}]},"180":{"line":1624,"type":"binary-expr","locations":[{"start":{"line":1624,"column":10},"end":{"line":1624,"column":18}},{"start":{"line":1624,"column":22},"end":{"line":1624,"column":34}}]},"181":{"line":1640,"type":"if","locations":[{"start":{"line":1640,"column":6},"end":{"line":1640,"column":6}},{"start":{"line":1640,"column":6},"end":{"line":1640,"column":6}}]},"182":{"line":1649,"type":"if","locations":[{"start":{"line":1649,"column":8},"end":{"line":1649,"column":8}},{"start":{"line":1649,"column":8},"end":{"line":1649,"column":8}}]},"183":{"line":1649,"type":"binary-expr","locations":[{"start":{"line":1649,"column":12},"end":{"line":1649,"column":27}},{"start":{"line":1649,"column":31},"end":{"line":1649,"column":44}}]},"184":{"line":1653,"type":"if","locations":[{"start":{"line":1653,"column":8},"end":{"line":1653,"column":8}},{"start":{"line":1653,"column":8},"end":{"line":1653,"column":8}}]},"185":{"line":1653,"type":"binary-expr","locations":[{"start":{"line":1653,"column":12},"end":{"line":1653,"column":27}},{"start":{"line":1653,"column":31},"end":{"line":1653,"column":47}}]},"186":{"line":1656,"type":"if","locations":[{"start":{"line":1656,"column":15},"end":{"line":1656,"column":15}},{"start":{"line":1656,"column":15},"end":{"line":1656,"column":15}}]},"187":{"line":1658,"type":"if","locations":[{"start":{"line":1658,"column":15},"end":{"line":1658,"column":15}},{"start":{"line":1658,"column":15},"end":{"line":1658,"column":15}}]},"188":{"line":1658,"type":"binary-expr","locations":[{"start":{"line":1658,"column":19},"end":{"line":1658,"column":32}},{"start":{"line":1658,"column":36},"end":{"line":1658,"column":52}}]},"189":{"line":1660,"type":"if","locations":[{"start":{"line":1660,"column":15},"end":{"line":1660,"column":15}},{"start":{"line":1660,"column":15},"end":{"line":1660,"column":15}}]},"190":{"line":1662,"type":"cond-expr","locations":[{"start":{"line":1662,"column":43},"end":{"line":1662,"column":48}},{"start":{"line":1662,"column":51},"end":{"line":1662,"column":62}}]},"191":{"line":1664,"type":"if","locations":[{"start":{"line":1664,"column":10},"end":{"line":1664,"column":10}},{"start":{"line":1664,"column":10},"end":{"line":1664,"column":10}}]},"192":{"line":1666,"type":"if","locations":[{"start":{"line":1666,"column":12},"end":{"line":1666,"column":12}},{"start":{"line":1666,"column":12},"end":{"line":1666,"column":12}}]},"193":{"line":1668,"type":"if","locations":[{"start":{"line":1668,"column":14},"end":{"line":1668,"column":14}},{"start":{"line":1668,"column":14},"end":{"line":1668,"column":14}}]},"194":{"line":1692,"type":"if","locations":[{"start":{"line":1692,"column":8},"end":{"line":1692,"column":8}},{"start":{"line":1692,"column":8},"end":{"line":1692,"column":8}}]},"195":{"line":1695,"type":"if","locations":[{"start":{"line":1695,"column":8},"end":{"line":1695,"column":8}},{"start":{"line":1695,"column":8},"end":{"line":1695,"column":8}}]},"196":{"line":1703,"type":"if","locations":[{"start":{"line":1703,"column":6},"end":{"line":1703,"column":6}},{"start":{"line":1703,"column":6},"end":{"line":1703,"column":6}}]},"197":{"line":1703,"type":"binary-expr","locations":[{"start":{"line":1703,"column":10},"end":{"line":1703,"column":20}},{"start":{"line":1703,"column":24},"end":{"line":1703,"column":38}},{"start":{"line":1703,"column":42},"end":{"line":1703,"column":66}}]},"198":{"line":1751,"type":"if","locations":[{"start":{"line":1751,"column":6},"end":{"line":1751,"column":6}},{"start":{"line":1751,"column":6},"end":{"line":1751,"column":6}}]},"199":{"line":1772,"type":"if","locations":[{"start":{"line":1772,"column":4},"end":{"line":1772,"column":4}},{"start":{"line":1772,"column":4},"end":{"line":1772,"column":4}}]},"200":{"line":1772,"type":"binary-expr","locations":[{"start":{"line":1772,"column":8},"end":{"line":1772,"column":26}},{"start":{"line":1772,"column":30},"end":{"line":1772,"column":48}}]},"201":{"line":1786,"type":"if","locations":[{"start":{"line":1786,"column":8},"end":{"line":1786,"column":8}},{"start":{"line":1786,"column":8},"end":{"line":1786,"column":8}}]},"202":{"line":1846,"type":"binary-expr","locations":[{"start":{"line":1846,"column":6},"end":{"line":1846,"column":20}},{"start":{"line":1846,"column":24},"end":{"line":1846,"column":42}},{"start":{"line":1846,"column":46},"end":{"line":1846,"column":70}},{"start":{"line":1846,"column":74},"end":{"line":1846,"column":96}}]},"203":{"line":1897,"type":"if","locations":[{"start":{"line":1897,"column":2},"end":{"line":1897,"column":2}},{"start":{"line":1897,"column":2},"end":{"line":1897,"column":2}}]},"204":{"line":1901,"type":"if","locations":[{"start":{"line":1901,"column":2},"end":{"line":1901,"column":2}},{"start":{"line":1901,"column":2},"end":{"line":1901,"column":2}}]},"205":{"line":1904,"type":"if","locations":[{"start":{"line":1904,"column":6},"end":{"line":1904,"column":6}},{"start":{"line":1904,"column":6},"end":{"line":1904,"column":6}}]},"206":{"line":1908,"type":"if","locations":[{"start":{"line":1908,"column":8},"end":{"line":1908,"column":8}},{"start":{"line":1908,"column":8},"end":{"line":1908,"column":8}}]},"207":{"line":1911,"type":"if","locations":[{"start":{"line":1911,"column":10},"end":{"line":1911,"column":10}},{"start":{"line":1911,"column":10},"end":{"line":1911,"column":10}}]},"208":{"line":1952,"type":"if","locations":[{"start":{"line":1952,"column":4},"end":{"line":1952,"column":4}},{"start":{"line":1952,"column":4},"end":{"line":1952,"column":4}}]},"209":{"line":1952,"type":"binary-expr","locations":[{"start":{"line":1952,"column":8},"end":{"line":1952,"column":26}},{"start":{"line":1952,"column":30},"end":{"line":1952,"column":45}}]},"210":{"line":1957,"type":"if","locations":[{"start":{"line":1957,"column":6},"end":{"line":1957,"column":6}},{"start":{"line":1957,"column":6},"end":{"line":1957,"column":6}}]},"211":{"line":1975,"type":"if","locations":[{"start":{"line":1975,"column":4},"end":{"line":1975,"column":4}},{"start":{"line":1975,"column":4},"end":{"line":1975,"column":4}}]},"212":{"line":1977,"type":"if","locations":[{"start":{"line":1977,"column":4},"end":{"line":1977,"column":4}},{"start":{"line":1977,"column":4},"end":{"line":1977,"column":4}}]},"213":{"line":1979,"type":"if","locations":[{"start":{"line":1979,"column":11},"end":{"line":1979,"column":11}},{"start":{"line":1979,"column":11},"end":{"line":1979,"column":11}}]},"214":{"line":2022,"type":"binary-expr","locations":[{"start":{"line":2022,"column":11},"end":{"line":2022,"column":24}},{"start":{"line":2022,"column":29},"end":{"line":2022,"column":39}},{"start":{"line":2022,"column":43},"end":{"line":2022,"column":84}}]},"215":{"line":2056,"type":"binary-expr","locations":[{"start":{"line":2056,"column":11},"end":{"line":2056,"column":25}},{"start":{"line":2056,"column":29},"end":{"line":2056,"column":44}}]},"216":{"line":2124,"type":"binary-expr","locations":[{"start":{"line":2124,"column":13},"end":{"line":2124,"column":26}},{"start":{"line":2124,"column":30},"end":{"line":2124,"column":40}},{"start":{"line":2124,"column":44},"end":{"line":2124,"column":58}},{"start":{"line":2124,"column":62},"end":{"line":2124,"column":83}}]},"217":{"line":2138,"type":"binary-expr","locations":[{"start":{"line":2138,"column":13},"end":{"line":2138,"column":26}},{"start":{"line":2138,"column":30},"end":{"line":2138,"column":41}},{"start":{"line":2138,"column":46},"end":{"line":2138,"column":60}}]},"218":{"line":2151,"type":"binary-expr","locations":[{"start":{"line":2151,"column":12},"end":{"line":2151,"column":23}},{"start":{"line":2151,"column":27},"end":{"line":2151,"column":41}},{"start":{"line":2151,"column":47},"end":{"line":2151,"column":57}},{"start":{"line":2151,"column":61},"end":{"line":2151,"column":76}}]},"219":{"line":2164,"type":"if","locations":[{"start":{"line":2164,"column":4},"end":{"line":2164,"column":4}},{"start":{"line":2164,"column":4},"end":{"line":2164,"column":4}}]},"220":{"line":2164,"type":"binary-expr","locations":[{"start":{"line":2164,"column":8},"end":{"line":2164,"column":18}},{"start":{"line":2164,"column":22},"end":{"line":2164,"column":32}}]},"221":{"line":2166,"type":"if","locations":[{"start":{"line":2166,"column":8},"end":{"line":2166,"column":8}},{"start":{"line":2166,"column":8},"end":{"line":2166,"column":8}}]},"222":{"line":2166,"type":"binary-expr","locations":[{"start":{"line":2166,"column":12},"end":{"line":2166,"column":26}},{"start":{"line":2166,"column":30},"end":{"line":2166,"column":63}}]},"223":{"line":2167,"type":"binary-expr","locations":[{"start":{"line":2167,"column":20},"end":{"line":2167,"column":27}},{"start":{"line":2167,"column":31},"end":{"line":2167,"column":66}}]},"224":{"line":2185,"type":"binary-expr","locations":[{"start":{"line":2185,"column":11},"end":{"line":2185,"column":21}},{"start":{"line":2185,"column":25},"end":{"line":2185,"column":36}},{"start":{"line":2185,"column":41},"end":{"line":2185,"column":55}}]},"225":{"line":2195,"type":"if","locations":[{"start":{"line":2195,"column":4},"end":{"line":2195,"column":4}},{"start":{"line":2195,"column":4},"end":{"line":2195,"column":4}}]},"226":{"line":2195,"type":"binary-expr","locations":[{"start":{"line":2195,"column":8},"end":{"line":2195,"column":18}},{"start":{"line":2195,"column":22},"end":{"line":2195,"column":33}}]},"227":{"line":2198,"type":"if","locations":[{"start":{"line":2198,"column":8},"end":{"line":2198,"column":8}},{"start":{"line":2198,"column":8},"end":{"line":2198,"column":8}}]},"228":{"line":2214,"type":"switch","locations":[{"start":{"line":2215,"column":6},"end":{"line":2216,"column":58}},{"start":{"line":2217,"column":6},"end":{"line":2217,"column":13}},{"start":{"line":2218,"column":6},"end":{"line":2219,"column":26}},{"start":{"line":2220,"column":6},"end":{"line":2221,"column":26}},{"start":{"line":2222,"column":6},"end":{"line":2223,"column":25}},{"start":{"line":2224,"column":6},"end":{"line":2225,"column":27}},{"start":{"line":2226,"column":6},"end":{"line":2227,"column":24}},{"start":{"line":2228,"column":6},"end":{"line":2229,"column":24}},{"start":{"line":2230,"column":6},"end":{"line":2231,"column":26}},{"start":{"line":2232,"column":6},"end":{"line":2233,"column":77}},{"start":{"line":2234,"column":6},"end":{"line":2235,"column":104}},{"start":{"line":2236,"column":6},"end":{"line":2237,"column":20}}]},"229":{"line":2216,"type":"binary-expr","locations":[{"start":{"line":2216,"column":15},"end":{"line":2216,"column":26}},{"start":{"line":2216,"column":30},"end":{"line":2216,"column":58}}]},"230":{"line":2233,"type":"binary-expr","locations":[{"start":{"line":2233,"column":15},"end":{"line":2233,"column":26}},{"start":{"line":2233,"column":30},"end":{"line":2233,"column":45}},{"start":{"line":2233,"column":49},"end":{"line":2233,"column":77}}]},"231":{"line":2235,"type":"binary-expr","locations":[{"start":{"line":2235,"column":15},"end":{"line":2235,"column":26}},{"start":{"line":2235,"column":30},"end":{"line":2235,"column":44}},{"start":{"line":2235,"column":48},"end":{"line":2235,"column":72}},{"start":{"line":2235,"column":76},"end":{"line":2235,"column":104}}]},"232":{"line":2261,"type":"if","locations":[{"start":{"line":2261,"column":10},"end":{"line":2261,"column":10}},{"start":{"line":2261,"column":10},"end":{"line":2261,"column":10}}]},"233":{"line":2278,"type":"if","locations":[{"start":{"line":2278,"column":4},"end":{"line":2278,"column":4}},{"start":{"line":2278,"column":4},"end":{"line":2278,"column":4}}]},"234":{"line":2289,"type":"if","locations":[{"start":{"line":2289,"column":10},"end":{"line":2289,"column":10}},{"start":{"line":2289,"column":10},"end":{"line":2289,"column":10}}]},"235":{"line":2306,"type":"if","locations":[{"start":{"line":2306,"column":4},"end":{"line":2306,"column":4}},{"start":{"line":2306,"column":4},"end":{"line":2306,"column":4}}]},"236":{"line":2343,"type":"if","locations":[{"start":{"line":2343,"column":4},"end":{"line":2343,"column":4}},{"start":{"line":2343,"column":4},"end":{"line":2343,"column":4}}]},"237":{"line":2379,"type":"cond-expr","locations":[{"start":{"line":2379,"column":49},"end":{"line":2379,"column":53}},{"start":{"line":2379,"column":56},"end":{"line":2379,"column":69}}]},"238":{"line":2379,"type":"binary-expr","locations":[{"start":{"line":2379,"column":12},"end":{"line":2379,"column":24}},{"start":{"line":2379,"column":28},"end":{"line":2379,"column":45}}]},"239":{"line":2405,"type":"if","locations":[{"start":{"line":2405,"column":4},"end":{"line":2405,"column":4}},{"start":{"line":2405,"column":4},"end":{"line":2405,"column":4}}]},"240":{"line":2406,"type":"if","locations":[{"start":{"line":2406,"column":4},"end":{"line":2406,"column":4}},{"start":{"line":2406,"column":4},"end":{"line":2406,"column":4}}]},"241":{"line":2432,"type":"if","locations":[{"start":{"line":2432,"column":4},"end":{"line":2432,"column":4}},{"start":{"line":2432,"column":4},"end":{"line":2432,"column":4}}]},"242":{"line":2433,"type":"if","locations":[{"start":{"line":2433,"column":4},"end":{"line":2433,"column":4}},{"start":{"line":2433,"column":4},"end":{"line":2433,"column":4}}]},"243":{"line":2447,"type":"if","locations":[{"start":{"line":2447,"column":4},"end":{"line":2447,"column":4}},{"start":{"line":2447,"column":4},"end":{"line":2447,"column":4}}]},"244":{"line":2448,"type":"if","locations":[{"start":{"line":2448,"column":4},"end":{"line":2448,"column":4}},{"start":{"line":2448,"column":4},"end":{"line":2448,"column":4}}]},"245":{"line":2462,"type":"if","locations":[{"start":{"line":2462,"column":4},"end":{"line":2462,"column":4}},{"start":{"line":2462,"column":4},"end":{"line":2462,"column":4}}]},"246":{"line":2463,"type":"if","locations":[{"start":{"line":2463,"column":4},"end":{"line":2463,"column":4}},{"start":{"line":2463,"column":4},"end":{"line":2463,"column":4}}]},"247":{"line":2477,"type":"binary-expr","locations":[{"start":{"line":2477,"column":11},"end":{"line":2477,"column":24}},{"start":{"line":2477,"column":28},"end":{"line":2477,"column":45}}]},"248":{"line":2478,"type":"if","locations":[{"start":{"line":2478,"column":4},"end":{"line":2478,"column":4}},{"start":{"line":2478,"column":4},"end":{"line":2478,"column":4}}]},"249":{"line":2479,"type":"if","locations":[{"start":{"line":2479,"column":4},"end":{"line":2479,"column":4}},{"start":{"line":2479,"column":4},"end":{"line":2479,"column":4}}]},"250":{"line":2493,"type":"if","locations":[{"start":{"line":2493,"column":4},"end":{"line":2493,"column":4}},{"start":{"line":2493,"column":4},"end":{"line":2493,"column":4}}]},"251":{"line":2494,"type":"if","locations":[{"start":{"line":2494,"column":4},"end":{"line":2494,"column":4}},{"start":{"line":2494,"column":4},"end":{"line":2494,"column":4}}]},"252":{"line":2534,"type":"binary-expr","locations":[{"start":{"line":2534,"column":11},"end":{"line":2534,"column":24}},{"start":{"line":2534,"column":28},"end":{"line":2534,"column":45}},{"start":{"line":2534,"column":49},"end":{"line":2534,"column":69}}]},"253":{"line":2536,"type":"if","locations":[{"start":{"line":2536,"column":4},"end":{"line":2536,"column":4}},{"start":{"line":2536,"column":4},"end":{"line":2536,"column":4}}]},"254":{"line":2536,"type":"binary-expr","locations":[{"start":{"line":2536,"column":8},"end":{"line":2536,"column":21}},{"start":{"line":2536,"column":25},"end":{"line":2536,"column":36}}]},"255":{"line":2550,"type":"if","locations":[{"start":{"line":2550,"column":4},"end":{"line":2550,"column":4}},{"start":{"line":2550,"column":4},"end":{"line":2550,"column":4}}]},"256":{"line":2551,"type":"if","locations":[{"start":{"line":2551,"column":4},"end":{"line":2551,"column":4}},{"start":{"line":2551,"column":4},"end":{"line":2551,"column":4}}]},"257":{"line":2552,"type":"binary-expr","locations":[{"start":{"line":2552,"column":11},"end":{"line":2552,"column":22}},{"start":{"line":2552,"column":26},"end":{"line":2552,"column":31}}]},"258":{"line":2577,"type":"if","locations":[{"start":{"line":2577,"column":4},"end":{"line":2577,"column":4}},{"start":{"line":2577,"column":4},"end":{"line":2577,"column":4}}]},"259":{"line":2578,"type":"if","locations":[{"start":{"line":2578,"column":4},"end":{"line":2578,"column":4}},{"start":{"line":2578,"column":4},"end":{"line":2578,"column":4}}]},"260":{"line":2579,"type":"binary-expr","locations":[{"start":{"line":2579,"column":11},"end":{"line":2579,"column":22}},{"start":{"line":2579,"column":26},"end":{"line":2579,"column":31}}]},"261":{"line":2594,"type":"binary-expr","locations":[{"start":{"line":2594,"column":11},"end":{"line":2594,"column":23}},{"start":{"line":2594,"column":27},"end":{"line":2594,"column":43}}]},"262":{"line":2599,"type":"if","locations":[{"start":{"line":2599,"column":4},"end":{"line":2599,"column":4}},{"start":{"line":2599,"column":4},"end":{"line":2599,"column":4}}]},"263":{"line":2599,"type":"binary-expr","locations":[{"start":{"line":2599,"column":8},"end":{"line":2599,"column":15}},{"start":{"line":2599,"column":19},"end":{"line":2599,"column":46}}]},"264":{"line":2601,"type":"if","locations":[{"start":{"line":2601,"column":11},"end":{"line":2601,"column":11}},{"start":{"line":2601,"column":11},"end":{"line":2601,"column":11}}]},"265":{"line":2601,"type":"binary-expr","locations":[{"start":{"line":2601,"column":15},"end":{"line":2601,"column":23}},{"start":{"line":2601,"column":27},"end":{"line":2601,"column":43}}]},"266":{"line":2616,"type":"binary-expr","locations":[{"start":{"line":2616,"column":11},"end":{"line":2616,"column":23}},{"start":{"line":2616,"column":27},"end":{"line":2616,"column":43}}]},"267":{"line":2618,"type":"if","locations":[{"start":{"line":2618,"column":4},"end":{"line":2618,"column":4}},{"start":{"line":2618,"column":4},"end":{"line":2618,"column":4}}]},"268":{"line":2655,"type":"if","locations":[{"start":{"line":2655,"column":4},"end":{"line":2655,"column":4}},{"start":{"line":2655,"column":4},"end":{"line":2655,"column":4}}]},"269":{"line":2658,"type":"if","locations":[{"start":{"line":2658,"column":4},"end":{"line":2658,"column":4}},{"start":{"line":2658,"column":4},"end":{"line":2658,"column":4}}]},"270":{"line":2663,"type":"if","locations":[{"start":{"line":2663,"column":4},"end":{"line":2663,"column":4}},{"start":{"line":2663,"column":4},"end":{"line":2663,"column":4}}]},"271":{"line":2665,"type":"binary-expr","locations":[{"start":{"line":2665,"column":16},"end":{"line":2665,"column":22}},{"start":{"line":2665,"column":26},"end":{"line":2665,"column":27}}]},"272":{"line":2666,"type":"binary-expr","locations":[{"start":{"line":2666,"column":14},"end":{"line":2666,"column":20}},{"start":{"line":2666,"column":24},"end":{"line":2666,"column":36}}]},"273":{"line":2668,"type":"if","locations":[{"start":{"line":2668,"column":4},"end":{"line":2668,"column":4}},{"start":{"line":2668,"column":4},"end":{"line":2668,"column":4}}]},"274":{"line":2697,"type":"binary-expr","locations":[{"start":{"line":2697,"column":15},"end":{"line":2697,"column":21}},{"start":{"line":2697,"column":25},"end":{"line":2697,"column":26}}]},"275":{"line":2701,"type":"binary-expr","locations":[{"start":{"line":2701,"column":12},"end":{"line":2701,"column":23}},{"start":{"line":2701,"column":27},"end":{"line":2701,"column":35}},{"start":{"line":2701,"column":41},"end":{"line":2701,"column":52}},{"start":{"line":2701,"column":56},"end":{"line":2701,"column":64}}]},"276":{"line":2719,"type":"if","locations":[{"start":{"line":2719,"column":4},"end":{"line":2719,"column":4}},{"start":{"line":2719,"column":4},"end":{"line":2719,"column":4}}]},"277":{"line":2740,"type":"if","locations":[{"start":{"line":2740,"column":4},"end":{"line":2740,"column":4}},{"start":{"line":2740,"column":4},"end":{"line":2740,"column":4}}]},"278":{"line":2756,"type":"cond-expr","locations":[{"start":{"line":2756,"column":28},"end":{"line":2756,"column":40}},{"start":{"line":2756,"column":43},"end":{"line":2756,"column":52}}]},"279":{"line":2783,"type":"binary-expr","locations":[{"start":{"line":2783,"column":27},"end":{"line":2783,"column":48}},{"start":{"line":2783,"column":52},"end":{"line":2783,"column":57}}]},"280":{"line":2788,"type":"if","locations":[{"start":{"line":2788,"column":4},"end":{"line":2788,"column":4}},{"start":{"line":2788,"column":4},"end":{"line":2788,"column":4}}]},"281":{"line":2799,"type":"if","locations":[{"start":{"line":2799,"column":6},"end":{"line":2799,"column":6}},{"start":{"line":2799,"column":6},"end":{"line":2799,"column":6}}]},"282":{"line":2802,"type":"cond-expr","locations":[{"start":{"line":2803,"column":10},"end":{"line":2803,"column":35}},{"start":{"line":2804,"column":10},"end":{"line":2804,"column":49}}]},"283":{"line":2804,"type":"binary-expr","locations":[{"start":{"line":2804,"column":19},"end":{"line":2804,"column":22}},{"start":{"line":2804,"column":26},"end":{"line":2804,"column":36}}]},"284":{"line":2808,"type":"binary-expr","locations":[{"start":{"line":2808,"column":19},"end":{"line":2808,"column":32}},{"start":{"line":2808,"column":36},"end":{"line":2808,"column":38}}]},"285":{"line":2812,"type":"cond-expr","locations":[{"start":{"line":2813,"column":13},"end":{"line":2813,"column":36}},{"start":{"line":2814,"column":12},"end":{"line":2814,"column":18}}]},"286":{"line":2813,"type":"binary-expr","locations":[{"start":{"line":2813,"column":13},"end":{"line":2813,"column":28}},{"start":{"line":2813,"column":32},"end":{"line":2813,"column":36}}]},"287":{"line":2832,"type":"binary-expr","locations":[{"start":{"line":2832,"column":11},"end":{"line":2832,"column":24}},{"start":{"line":2832,"column":28},"end":{"line":2832,"column":47}}]},"288":{"line":2843,"type":"binary-expr","locations":[{"start":{"line":2843,"column":11},"end":{"line":2843,"column":24}},{"start":{"line":2843,"column":28},"end":{"line":2843,"column":46}}]},"289":{"line":2867,"type":"if","locations":[{"start":{"line":2867,"column":4},"end":{"line":2867,"column":4}},{"start":{"line":2867,"column":4},"end":{"line":2867,"column":4}}]},"290":{"line":2868,"type":"if","locations":[{"start":{"line":2868,"column":4},"end":{"line":2868,"column":4}},{"start":{"line":2868,"column":4},"end":{"line":2868,"column":4}}]},"291":{"line":2891,"type":"if","locations":[{"start":{"line":2891,"column":4},"end":{"line":2891,"column":4}},{"start":{"line":2891,"column":4},"end":{"line":2891,"column":4}}]},"292":{"line":2892,"type":"if","locations":[{"start":{"line":2892,"column":6},"end":{"line":2892,"column":6}},{"start":{"line":2892,"column":6},"end":{"line":2892,"column":6}}]},"293":{"line":2898,"type":"if","locations":[{"start":{"line":2898,"column":11},"end":{"line":2898,"column":11}},{"start":{"line":2898,"column":11},"end":{"line":2898,"column":11}}]},"294":{"line":2904,"type":"cond-expr","locations":[{"start":{"line":2904,"column":23},"end":{"line":2904,"column":56}},{"start":{"line":2904,"column":59},"end":{"line":2904,"column":92}}]},"295":{"line":2916,"type":"if","locations":[{"start":{"line":2916,"column":4},"end":{"line":2916,"column":4}},{"start":{"line":2916,"column":4},"end":{"line":2916,"column":4}}]},"296":{"line":2921,"type":"if","locations":[{"start":{"line":2921,"column":6},"end":{"line":2921,"column":6}},{"start":{"line":2921,"column":6},"end":{"line":2921,"column":6}}]},"297":{"line":2921,"type":"binary-expr","locations":[{"start":{"line":2921,"column":12},"end":{"line":2921,"column":23}},{"start":{"line":2921,"column":27},"end":{"line":2921,"column":38}}]},"298":{"line":2927,"type":"if","locations":[{"start":{"line":2927,"column":4},"end":{"line":2927,"column":4}},{"start":{"line":2927,"column":4},"end":{"line":2927,"column":4}}]},"299":{"line":2929,"type":"if","locations":[{"start":{"line":2929,"column":11},"end":{"line":2929,"column":11}},{"start":{"line":2929,"column":11},"end":{"line":2929,"column":11}}]},"300":{"line":2945,"type":"binary-expr","locations":[{"start":{"line":2945,"column":11},"end":{"line":2945,"column":24}},{"start":{"line":2945,"column":28},"end":{"line":2945,"column":45}}]},"301":{"line":2947,"type":"cond-expr","locations":[{"start":{"line":2947,"column":57},"end":{"line":2947,"column":64}},{"start":{"line":2947,"column":67},"end":{"line":2947,"column":74}}]},"302":{"line":2947,"type":"binary-expr","locations":[{"start":{"line":2947,"column":12},"end":{"line":2947,"column":28}},{"start":{"line":2947,"column":32},"end":{"line":2947,"column":53}}]},"303":{"line":2974,"type":"if","locations":[{"start":{"line":2974,"column":4},"end":{"line":2974,"column":4}},{"start":{"line":2974,"column":4},"end":{"line":2974,"column":4}}]},"304":{"line":2990,"type":"cond-expr","locations":[{"start":{"line":2990,"column":23},"end":{"line":2990,"column":34}},{"start":{"line":2990,"column":37},"end":{"line":2990,"column":46}}]},"305":{"line":3000,"type":"cond-expr","locations":[{"start":{"line":3000,"column":23},"end":{"line":3000,"column":37}},{"start":{"line":3000,"column":40},"end":{"line":3000,"column":49}}]},"306":{"line":3010,"type":"cond-expr","locations":[{"start":{"line":3010,"column":23},"end":{"line":3010,"column":38}},{"start":{"line":3010,"column":41},"end":{"line":3010,"column":50}}]},"307":{"line":3020,"type":"cond-expr","locations":[{"start":{"line":3020,"column":23},"end":{"line":3020,"column":39}},{"start":{"line":3020,"column":42},"end":{"line":3020,"column":51}}]},"308":{"line":3038,"type":"binary-expr","locations":[{"start":{"line":3038,"column":33},"end":{"line":3038,"column":43}},{"start":{"line":3038,"column":47},"end":{"line":3038,"column":48}}]},"309":{"line":3052,"type":"cond-expr","locations":[{"start":{"line":3052,"column":23},"end":{"line":3052,"column":38}},{"start":{"line":3052,"column":41},"end":{"line":3052,"column":50}}]},"310":{"line":3062,"type":"cond-expr","locations":[{"start":{"line":3062,"column":23},"end":{"line":3062,"column":37}},{"start":{"line":3062,"column":40},"end":{"line":3062,"column":49}}]},"311":{"line":3072,"type":"cond-expr","locations":[{"start":{"line":3072,"column":23},"end":{"line":3072,"column":37}},{"start":{"line":3072,"column":40},"end":{"line":3072,"column":49}}]},"312":{"line":3082,"type":"cond-expr","locations":[{"start":{"line":3082,"column":23},"end":{"line":3082,"column":42}},{"start":{"line":3082,"column":45},"end":{"line":3082,"column":54}}]},"313":{"line":3112,"type":"if","locations":[{"start":{"line":3112,"column":6},"end":{"line":3112,"column":6}},{"start":{"line":3112,"column":6},"end":{"line":3112,"column":6}}]},"314":{"line":3151,"type":"binary-expr","locations":[{"start":{"line":3151,"column":11},"end":{"line":3151,"column":34}},{"start":{"line":3151,"column":38},"end":{"line":3151,"column":79}}]},"315":{"line":3229,"type":"if","locations":[{"start":{"line":3229,"column":4},"end":{"line":3229,"column":4}},{"start":{"line":3229,"column":4},"end":{"line":3229,"column":4}}]},"316":{"line":3246,"type":"if","locations":[{"start":{"line":3246,"column":4},"end":{"line":3246,"column":4}},{"start":{"line":3246,"column":4},"end":{"line":3246,"column":4}}]},"317":{"line":3257,"type":"binary-expr","locations":[{"start":{"line":3257,"column":6},"end":{"line":3257,"column":24}},{"start":{"line":3257,"column":29},"end":{"line":3257,"column":44}},{"start":{"line":3257,"column":48},"end":{"line":3257,"column":58}},{"start":{"line":3257,"column":62},"end":{"line":3257,"column":89}}]},"318":{"line":3260,"type":"binary-expr","locations":[{"start":{"line":3260,"column":12},"end":{"line":3260,"column":17}},{"start":{"line":3260,"column":21},"end":{"line":3260,"column":22}}]},"319":{"line":3263,"type":"binary-expr","locations":[{"start":{"line":3263,"column":6},"end":{"line":3263,"column":22}},{"start":{"line":3263,"column":27},"end":{"line":3263,"column":40}},{"start":{"line":3263,"column":44},"end":{"line":3263,"column":52}},{"start":{"line":3263,"column":56},"end":{"line":3263,"column":79}}]},"320":{"line":3266,"type":"binary-expr","locations":[{"start":{"line":3266,"column":10},"end":{"line":3266,"column":13}},{"start":{"line":3266,"column":17},"end":{"line":3266,"column":27}}]},"321":{"line":3268,"type":"if","locations":[{"start":{"line":3268,"column":4},"end":{"line":3268,"column":4}},{"start":{"line":3268,"column":4},"end":{"line":3268,"column":4}}]},"322":{"line":3271,"type":"cond-expr","locations":[{"start":{"line":3272,"column":8},"end":{"line":3272,"column":21}},{"start":{"line":3273,"column":8},"end":{"line":3273,"column":13}}]},"323":{"line":3300,"type":"cond-expr","locations":[{"start":{"line":3300,"column":33},"end":{"line":3300,"column":35}},{"start":{"line":3300,"column":38},"end":{"line":3300,"column":59}}]},"324":{"line":3301,"type":"cond-expr","locations":[{"start":{"line":3301,"column":33},"end":{"line":3301,"column":35}},{"start":{"line":3301,"column":38},"end":{"line":3301,"column":59}}]},"325":{"line":3302,"type":"if","locations":[{"start":{"line":3302,"column":4},"end":{"line":3302,"column":4}},{"start":{"line":3302,"column":4},"end":{"line":3302,"column":4}}]},"326":{"line":3305,"type":"cond-expr","locations":[{"start":{"line":3305,"column":33},"end":{"line":3305,"column":35}},{"start":{"line":3305,"column":38},"end":{"line":3305,"column":39}}]},"327":{"line":3318,"type":"if","locations":[{"start":{"line":3318,"column":4},"end":{"line":3318,"column":4}},{"start":{"line":3318,"column":4},"end":{"line":3318,"column":4}}]},"328":{"line":3319,"type":"if","locations":[{"start":{"line":3319,"column":6},"end":{"line":3319,"column":6}},{"start":{"line":3319,"column":6},"end":{"line":3319,"column":6}}]},"329":{"line":3321,"type":"if","locations":[{"start":{"line":3321,"column":13},"end":{"line":3321,"column":13}},{"start":{"line":3321,"column":13},"end":{"line":3321,"column":13}}]},"330":{"line":3339,"type":"cond-expr","locations":[{"start":{"line":3339,"column":28},"end":{"line":3339,"column":30}},{"start":{"line":3339,"column":33},"end":{"line":3339,"column":52}}]},"331":{"line":3351,"type":"cond-expr","locations":[{"start":{"line":3351,"column":28},"end":{"line":3351,"column":30}},{"start":{"line":3351,"column":33},"end":{"line":3351,"column":52}}]},"332":{"line":3368,"type":"if","locations":[{"start":{"line":3368,"column":4},"end":{"line":3368,"column":4}},{"start":{"line":3368,"column":4},"end":{"line":3368,"column":4}}]},"333":{"line":3384,"type":"if","locations":[{"start":{"line":3384,"column":6},"end":{"line":3384,"column":6}},{"start":{"line":3384,"column":6},"end":{"line":3384,"column":6}}]},"334":{"line":3419,"type":"if","locations":[{"start":{"line":3419,"column":6},"end":{"line":3419,"column":6}},{"start":{"line":3419,"column":6},"end":{"line":3419,"column":6}}]},"335":{"line":3500,"type":"switch","locations":[{"start":{"line":3501,"column":4},"end":{"line":3522,"column":11}},{"start":{"line":3523,"column":4},"end":{"line":3532,"column":11}},{"start":{"line":3533,"column":4},"end":{"line":3541,"column":8}}]},"336":{"line":3510,"type":"if","locations":[{"start":{"line":3510,"column":16},"end":{"line":3510,"column":16}},{"start":{"line":3510,"column":16},"end":{"line":3510,"column":16}}]},"337":{"line":3512,"type":"if","locations":[{"start":{"line":3512,"column":23},"end":{"line":3512,"column":23}},{"start":{"line":3512,"column":23},"end":{"line":3512,"column":23}}]},"338":{"line":3579,"type":"if","locations":[{"start":{"line":3579,"column":2},"end":{"line":3579,"column":2}},{"start":{"line":3579,"column":2},"end":{"line":3579,"column":2}}]},"339":{"line":3612,"type":"if","locations":[{"start":{"line":3612,"column":0},"end":{"line":3612,"column":0}},{"start":{"line":3612,"column":0},"end":{"line":3612,"column":0}}]},"340":{"line":3612,"type":"binary-expr","locations":[{"start":{"line":3612,"column":4},"end":{"line":3612,"column":33}},{"start":{"line":3612,"column":37},"end":{"line":3612,"column":51}},{"start":{"line":3612,"column":55},"end":{"line":3612,"column":85}}]}},"code":["// Mingo.js","// Copyright (c) 2017 Francis Asante <kofrasa@gmail.com>","// MIT","",";(function(root){","","'use strict'","","// global on the server, window in the browser","var Mingo = {}","var previousMingo","","// backup previous Mingo","if (root !== null) {","  previousMingo = root.Mingo","}","","Mingo.noConflict = function () {","  root.Mingo = previousMingo","  return Mingo","}","","Mingo.VERSION = '1.1.2'","","/**"," * Common references"," */","","var ArrayProto = Array.prototype","var ObjectProto = Object.prototype","var stringify = JSON.stringify","","/**"," * Polyfills to add native methods for non-supported environments."," */","","// https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_objects/Function/bind","if (!Function.prototype.bind) {","  Function.prototype.bind = function (oThis) {","    if (typeof this !== 'function') {","      // closest thing possible to the ECMAScript 5","      // internal IsCallable function","      throw new Error('Function.prototype.bind - what is trying to be bound is not callable')","    }","","    var aArgs = ArrayProto.slice.call(arguments, 1)","    var fToBind = this","    var fNOP = function () {}","    var fBound = function () {","      return fToBind.apply(","        (this instanceof fNOP) ? this : oThis,","        aArgs.concat(ArrayProto.slice.call(arguments))","      )","    }","","    if (this.prototype) {","      // Function.prototype doesn't have a prototype property","      fNOP.prototype = this.prototype","    }","    fBound.prototype = new fNOP()","","    return fBound","  }","}","","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find","if (!Array.prototype.find) {","  Object.defineProperty(Array.prototype, 'find', {","    value: function(predicate) {","      if (this == null) {","        throw new TypeError('\"this\" is null or not defined')","      }","","      var o = Object(this)","      var len = o.length >>> 0","","      if (typeof predicate !== 'function') {","        throw new TypeError('predicate must be a function')","      }","","      var thisArg = arguments[1]","      var k = 0","","      while (k < len) {","        var kValue = o[k]","        if (predicate.call(thisArg, kValue, k, o)) {","          return kValue","        }","        k++","      }","      return undefined","    }","  })","}","","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex","if (!Array.prototype.findIndex) {","  Object.defineProperty(Array.prototype, 'findIndex', {","    value: function(predicate) {","      if (this == null) {","        throw new TypeError('\"this\" is null or not defined')","      }","","      var o = Object(this)","      var len = o.length >>> 0","","      if (typeof predicate !== 'function') {","        throw new TypeError('predicate must be a function')","      }","","      var thisArg = arguments[1]","      var k = 0","      while (k < len) {","        var kValue = o[k]","        if (predicate.call(thisArg, kValue, k, o)) {","          return k","        }","        k++","      }","      return -1","    }","  })","}","","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes","if (!Array.prototype.includes) {","  Object.defineProperty(Array.prototype, 'includes', {","    value: function(searchElement, fromIndex) {","      if (this == null) {","        throw new TypeError('\"this\" is null or not defined')","      }","","      var o = Object(this)","      var len = o.length >>> 0","","      if (len === 0) {","        return false","      }","      var n = fromIndex | 0","      var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0)","","      while (k < len) {","        if (o[k] === searchElement) {","          return true","        }","        k++","      }","      return false","    }","  })","}","","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign","if (typeof Object.assign != 'function') {","  Object.assign = function(target, varArgs) { // .length of function is 2","","    if (target == null) {","      throw new TypeError('Cannot convert undefined or null to object')","    }","","    var to = Object(target)","    var args = ArrayProto.slice.call(arguments)","","    for (var index = 1; index < args.length; index++) {","      var nextSource = args[index]","","      if (nextSource != null) { // Skip over if undefined or null","        for (var nextKey in nextSource) {","          // Avoid bugs when hasOwnProperty is shadowed","          if (ObjectProto.hasOwnProperty.call(nextSource, nextKey)) {","            to[nextKey] = nextSource[nextKey]","          }","        }","      }","    }","    return to","  }","}","","// http://tokenposts.blogspot.co.za/2012/04/javascript-objectkeys-browser.html","if (!Object.keys) {","  Object.keys = function (o) {","    if (o !== Object(o)) {","      throw new TypeError('Object.keys called on a non-object')","    }","","    var result = []","    for (var k in o) {","      if (ObjectProto.hasOwnProperty.call(o, k)) {","        result.push(k)","      }","    }","    return result","  }","}","","// https://github.com/es-shims/Object.values/blob/master/implementation.js","if (!Object.values) {","  Object.values = function (o) {","    if (o !== Object(o)) {","      throw new TypeError('Object.values called on a non-object')","    }","    var result = []","    for (var k in o) {","      if (ObjectProto.hasOwnProperty.call(o, k)) {","        result.push(o[k])","      }","    }","    return result","  }","}","","function util () {","  return {","    'isArray': isArray,","    'isBoolean': isBoolean,","    'isDate': isDate,","    'isEmpty': isEmpty,","    'isEqual': isEqual,","    'isFunction': isFunction,","    'isNil': isNil,","    'isNull': isNull,","    'isNumber': isNumber,","    'isObject': isObject,","    'isObjectLike': isObjectLike,","    'isRegExp': isRegExp,","    'isString': isString,","    'isUndefined': isUndefined","  }","}","","function assert (condition, message) {","  if (falsey(condition)) err(message)","}","","function assertExists (value) {","  return assert(!isUndefined(value))","}","","/**"," * Deep clone an object"," */","function clone (arg) {","  switch (getType(arg)) {","    case 'array':","      return arg.map(clone)","    case 'object':","      return map(arg, clone)","    default:","      return arg","  }","}","","function isType (v, n) { return getType(v) === n }","function isBoolean (v) { return isType(v, 'boolean') }","function isString (v) { return isType(v, 'string') }","function isNumber (v) { return isType(v, 'number') }","function isArray (v) { return isType(v, 'array') }","function isObject (v) { return isType(v, 'object') }","function isObjectLike (v) { return v === Object(v) } // objects, arrays, functions","function isDate (v) { return isType(v, 'date') }","function isRegExp (v, t) { return isType(v, 'regexp') }","function isFunction (v, t) { return isType(v, 'function') }","function isNil (v) { return isNull(v) || isUndefined(v) }","function isNull (v) { return isType(v, 'null') }","function isUndefined (v) { return isType(v, 'undefined') }","function inArray (arr, item) { return arr.includes(item) }","function notInArray (arr, item) { return !arr.includes(item) }","function truthy (arg) { return !!arg }","function falsey (arg) { return !arg }","function isEmpty (x) {","  return isNil(x) ||","    isArray(x) && x.length === 0 ||","    isObject(x) && keys(x).length === 0 ||","    !x","}","// TODO: convert arguments to array","function array (x) { return isArray(x) ? x : [x] }","function getType (value) { return ObjectProto.toString.call(value).match(/\\s(\\w+)/)[1].toLowerCase() }","function has (obj, prop) { return ObjectProto.hasOwnProperty.call(obj, prop) }","function err (s) { throw new Error(s) }","function keys (o) { return Object.keys(o) }","","// ////////////////// UTILS ////////////////////","","/**"," * Iterate over an array or object"," * @param  {Array|Object} obj An object-like value"," * @param  {Function} callback The callback to run per item"," * @param  {*}   ctx  The object to use a context"," * @return {void}"," */","function each (obj, callback, ctx) {","  assert(obj === Object(obj), \"Cannot iterate over object of type '\" + getType(obj) + \"'\")","  if (isArray(obj)) {","    obj.forEach(callback, ctx)","  } else {","    for (var k in obj) {","      if (has(obj, k)) {","        callback.call(ctx, obj[k], k)","      }","    }","  }","}","","/**"," * Transform values in a collection"," *"," * @param  {Array|Object}   obj   An array/object whose values to transform"," * @param  {Function} callback The transform function"," * @param  {*}   ctx The value to use as the \"this\" context for the transform"," * @return {Array|Object} Result object after applying the transform"," */","function map (obj, callback, ctx) {","  if (isArray(obj)) {","    return obj.map(callback, ctx)","  } else if (isObject(obj)) {","    var o = {}","    var arr = keys(obj)","    for (var k, i = 0, len = arr.length; i < len; i++) {","      k = arr[i]","      o[k] = callback.call(ctx, obj[k], k)","    }","    return o","  }","  err('Input must be an Array or Object type')","}","","/**"," * Returns the intersection between two arrays"," *"," * @param  {Array} xs The first array"," * @param  {Array} ys The second array"," * @return {Array}    Result array"," */","function intersection (xs, ys) {","  return xs.filter(inArray.bind(null, ys))","}","","/**"," * Returns the union of two arrays"," *"," * @param  {Array} xs The first array"," * @param  {Array} ys The second array"," * @return {Array}   The result array"," */","function union (xs, ys) {","  var arr = []","  into(arr, xs)","  into(arr, ys.filter(notInArray.bind(null, xs)))","  return arr","}","","/**"," * Flatten the array"," *"," * @param  {Array} xs The array to flatten"," * @return {Array} depth The number of nested lists to interate"," */","function flatten (xs, depth) {","  assert(isArray(xs), 'Input must be an Array')","  var arr = []","  var unwrap = function (ys, iter) {","    for (var i = 0, len = ys.length; i < len; i++) {","      if (isArray(ys[i]) && (iter > 0 || iter < 0)) {","        unwrap(ys[i], Math.max(-1, iter - 1))","      } else {","        arr.push(ys[i])","      }","    }","  }","  unwrap(xs, depth || -1)","  return arr","}","","/**"," * Determine whether two values are the same or strictly equivalent"," *"," * @param  {*}  a The first value"," * @param  {*}  b The second value"," * @return {Boolean}   Result of comparison"," */","function isEqual (a, b) {","  // strictly equal must be equal.","  if (a === b) return true","","  // unequal types cannot be equal.","  var type = getType(a)","  if (type !== getType(b)) return false","","  // we treat NaN as the same","  if (type === 'number' && isNaN(a) && isNaN(b)) return true","","  // leverage toString for Date and RegExp types","  if (inArray(['date', 'regexp'], type)) return a.toString() === b.toString()","","  var i // loop counter","  var len // loop length","","  if (type === 'array') {","    if (a.length === b.length && a.length === 0) return true","    if (a.length !== b.length) return false","    for (i = 0, len = a.length; i < len; i++) {","      if (!isEqual(a[i], b[i])) return false","    }","  } else if ([a, b].every(isObject)) {","    // deep compare objects","    var ka = keys(a)","    var kb = keys(b)","","    // check length of keys early","    if (ka.length !== kb.length) return false","","    // we know keys are strings so we sort before comparing","    ka.sort()","    kb.sort()","","    // compare keys","    if (!isEqual(ka, kb)) return false","","    // back to the drawing board","    for (i = 0, len = ka.length; i < len; i++) {","      var temp = ka[i]","      if (!isEqual(a[temp], b[temp])) return false","    }","  } else {","    // we do not know how to compare unknown types","    return false","  }","  // best effort says values are equal :)","  return true","}","","/**"," * Return a new unique version of the collection"," * @param  {Array} xs The input collection"," * @return {Array}    A new collection with unique values"," */","function unique (xs) {","  var h = {}","  var arr = []","  each(xs, function (item) {","    var k = getHash(item)","    if (!has(h, k)) {","      arr.push(item)","      h[k] = 0","    }","  })","  return arr","}","","// encode value using a simple optimistic scheme","function encode (value) {","  return JSON.stringify({'': value}) + getType(value) + value","}","","// http://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript-jquery","// http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/","function getHash (value) {","  var hash = 0, i, chr, len, s = encode(value)","  if (s.length === 0) return hash","  for (i = 0, len = s.length; i < len; i++) {","    chr = s.charCodeAt(i)","    hash = ((hash << 5) - hash) + chr","    hash |= 0 // Convert to 32bit integer","  }","  return hash.toString()","}","","/**"," * Returns a (stably) sorted copy of list, ranked in ascending order by the results of running each value through iteratee"," * @param  {Array}   collection [description]"," * @param  {Function} fn The function used to sort"," * @return {Array} Returns a new sorted array by the given iteratee"," */","function sortBy (collection, fn, ctx) {","  var sortKeys = {}","  var sorted = []","  var key, val, hash, len = collection.length","  for (var i = 0; i < len; i++) {","    val = collection[i]","    key = fn.call(ctx, val, i)","    hash = getHash(val)","    if (!has(sortKeys, hash)) {","      sortKeys[hash] = [key, i]","    }","    sorted.push(clone(val))","  }","  // use native array sorting but enforce stableness","  sorted.sort(function (a, b) {","    var A = sortKeys[getHash(a)]","    var B = sortKeys[getHash(b)]","    if (A[0] < B[0]) return -1","    if (A[0] > B[0]) return 1","    if (A[1] < B[1]) return -1","    if (A[1] > B[1]) return 1","    return 0","  })","  assert(sorted.length === collection.length, 'sortBy must retain collection length')","  return sorted","}","","/**"," * Groups the collection into sets by the returned key"," *"," * @param collection"," * @param fn {function} to compute the group key of an item in the collection"," */","function groupBy (collection, fn, ctx) {","  var result = {","    'keys': [],","    'groups': []","  }","","  var lookup = {}","","  each(collection, function (obj) {","    var key = fn.call(ctx, obj)","    var hash = getHash(key)","    var index = -1","","    if (isUndefined(lookup[hash])) {","      index = result.keys.length","      lookup[hash] = index","      result.keys.push(key)","      result.groups.push([])","    }","    index = lookup[hash]","    result.groups[index].push(obj)","  })","","  assert(result.keys.length === result.groups.length, 'Cardinality must be equal for groups and keys')","  return result","}","","function into (target, xs) {","  ArrayProto.push.apply(target, xs)","}","","/**"," * Internal functions"," */","","// Settings used by Mingo internally","var settings = {","  key: '_id'","}","","/**"," * Setup default settings for Mingo"," * @param options"," */","Mingo.setup = function (options) {","  Object.assign(settings, options || {})","}","","/**"," * Internally used Mingo helpers."," * NB: This is not guaranteed to be available in later versions"," */","Mingo._internal = function() {","  return Object.assign(util(), {","    'computeValue': computeValue","  })","}","","/**"," * Implementation of system variables"," * @type {Object}"," */","var systemVariables = {","  '$$ROOT': function (obj, expr, opt) { return opt.root },","  '$$CURRENT': function (obj, expr, opt) { return obj }","}","","/**"," * Implementation of $redact variables"," * @type {Object}"," */","var redactVariables = {","  '$$KEEP': function (obj, expr, opt) { return obj },","  '$$PRUNE': function (obj, expr, opt) { return undefined },","  '$$DESCEND': function (obj, expr, opt) {","    // traverse nested documents iff there is a $cond","    if (!has(expr, '$cond')) return obj","","    var result","","    each(obj, function (current, key) {","      if (isObjectLike(current)) {","        if (isArray(current)) {","          result = []","          each(current, function (elem, index) {","            if (isObject(elem)) {","              elem = redactObj(elem, expr, opt)","            }","            if (!isUndefined(elem)) result.push(elem)","          })","        } else {","          result = redactObj(current, expr, opt)","        }","","        if (isUndefined(result)) {","          delete obj[key] // pruned result","        } else {","          obj[key] = result","        }","      }","    })","    return obj","  }","}","","// system varibiables","var SYS_VARS = keys(systemVariables)","var REDACT_VARS = keys(redactVariables)","","/**"," * Returns the key used as the collection's objects ids"," */","function keyId () {","  return settings.key","}","","/**"," * Retrieve the value of a given key on an object"," * @param obj"," * @param field"," * @returns {*}"," * @private"," */","function getValue (obj, field) {","  return obj[field]","}","","/**"," * Resolve the value of the field (dot separated) on the given object"," * @param obj {Object} the object context"," * @param selector {String} dot separated path to field"," * @returns {*}"," */","function resolve (obj, selector, deepFlag) {","  var names = selector.split('.')","  var value = obj","","  for (var i = 0; i < names.length; i++) {","    var isText = isNull(names[i].match(/^\\d+$/))","","    if (isText && isArray(value)) {","      // On the first iteration, we check if we received a stop flag.","      // If so, we stop to prevent iterating over a nested array value","      // on consecutive object keys in the selector.","      if (deepFlag === true && i === 0) {","        return value","      }","","      value = value.map(function (item) {","        return resolve(item, names[i], true)","      })","","      // we unwrap for arrays of unit length","      // this avoids excess wrapping when resolving deeply nested arrays","      if (value.length === 1) {","        value = value[0]","      }","    } else {","      value = getValue(value, names[i])","      deepFlag = false // reset stop flag when we do a direct lookup","    }","","    if (isUndefined(value)) break","  }","","  return value","}","","/**"," * Returns the full object to the resolved value given by the selector."," * This function excludes empty values as they aren't practically useful."," *"," * @param obj {Object} the object context"," * @param selector {String} dot separated path to field"," */","function resolveObj (obj, selector) {","  if (isUndefined(obj)) return","","  var names = selector.split('.')","  var key = names[0]","  // get the next part of the selector","  var next = names.length === 1 || names.slice(1).join('.')","  var isIndex = key.match(/^\\d+$/) !== null","  var hasNext = names.length > 1","  var result","  var value","","  try {","    if (isArray(obj)) {","      if (isIndex) {","        result = getValue(obj, key)","        if (hasNext) {","          result = resolveObj(result, next)","        }","        assertExists(result)","        result = [result]","      } else {","        result = []","        each(obj, function (item) {","          value = resolveObj(item, selector)","          if (!isUndefined(value)) result.push(value)","        })","        assert(result.length > 0)","      }","    } else {","      value = getValue(obj, key)","      if (hasNext) {","        value = resolveObj(value, next)","      }","      assertExists(value)","      result = {}","      result[key] = value","    }","  } catch (e) {","    result = undefined","  }","","  return result","}","","/**"," * Walk the object graph and execute the given transform function"," * @param  {Object|Array} obj   The object to traverse"," * @param  {String} selector    The selector"," * @param  {Function} transformFn Function to execute for value at the end the traversal"," * @param  {Boolean} force Force generating missing parts of object graph"," * @return {*}"," */","function traverse (obj, selector, fn, force) {","  var names = selector.split('.')","  var key = names[0]","  var next = names.length === 1 || names.slice(1).join('.')","","  if (names.length === 1) {","    fn(obj, key)","  } else { // nested objects","    if (isArray(obj) && !/^\\d+$/.test(key)) {","      each(obj, function (item) {","        traverse(item, selector, fn, force)","      })","    } else {","      // force the rest of the graph while traversing","      if (force === true) {","        var exists = has(obj, key)","        if (!exists || isNil(obj[key])) {","          obj[key] = {}","        }","      }","      traverse(obj[key], next, fn, force)","    }","  }","}","","/**"," * Set the value of the given object field"," *"," * @param obj {Object|Array} the object context"," * @param selector {String} path to field"," * @param value {*} the value to set"," */","function setValue (obj, selector, value) {","  traverse(obj, selector, function (item, key) {","    item[key] = value","  }, true)","}","","function removeValue (obj, selector) {","  traverse(obj, selector, function (item, key) {","    if (isArray(item) && /^\\d+$/.test(key)) {","      item.splice(parseInt(key), 1)","    } else if (isObject(item)) {","      delete item[key]","    }","  })","}","","","// quick reference for","var primitives = [","  isString, isBoolean, isNumber, isDate, isNil, isRegExp","]","","function isPrimitive (value) {","  for (var i = 0; i < primitives.length; i++) {","    if (primitives[i](value)) {","      return true","    }","  }","  return false","}","","// primitives and user-defined types","function isSimpleType (value) {","  return isPrimitive(value) || !isObjectLike(value)","}","","/**"," * Simplify expression for easy evaluation with query operators map"," * @param expr"," * @returns {*}"," */","function normalize (expr) {","  // normalized primitives","  if (isSimpleType(expr)) {","    return isRegExp(expr) ? {'$regex': expr} : {'$eq': expr}","  }","","  // normalize object expression","  if (isObjectLike(expr)) {","    var exprKeys = keys(expr)","    var notQuery = intersection(ops(KEY_QUERY), exprKeys).length === 0","","    // no valid query operator found, so we do simple comparison","    if (notQuery) {","      return {'$eq': expr}","    }","","    // ensure valid regex","    if (inArray(exprKeys, '$regex')) {","      var regex = expr['$regex']","      var options = expr['$options'] || ''","      var modifiers = ''","      if (isString(regex)) {","        modifiers += (regex.ignoreCase || options.indexOf('i') >= 0) ? 'i' : ''","        modifiers += (regex.multiline || options.indexOf('m') >= 0) ? 'm' : ''","        modifiers += (regex.global || options.indexOf('g') >= 0) ? 'g' : ''","        regex = new RegExp(regex, modifiers)","      }","      expr['$regex'] = regex","      delete expr['$options']","    }","  }","","  return expr","}","","/**"," * Computes the actual value of the expression using the given object as context"," *"," * @param obj the current object from the collection"," * @param expr the expression for the given field"," * @param field the field name (may also be an aggregate operator)"," * @returns {*}"," */","function computeValue (obj, expr, field, opt) {","  opt = opt || {}","  opt.root = opt.root || clone(obj)","","  // if the field of the object is a valid operator","  if (inArray(ops(KEY_AGGREGATE), field)) {","    return aggregateOperators[field](obj, expr, opt)","  }","","  // we also handle $group accumulator operators","  if (inArray(ops(KEY_GROUP), field)) {","    // we first fully resolve the expression","    obj = computeValue(obj, expr, null, opt)","    assert(isArray(obj), 'Must use collection type with ' + field + ' operator')","    // we pass a null expression because all values have been resolved","    return groupOperators[field](obj, null, opt)","  }","","  // if expr is a variable for an object field","  // field not used in this case","  if (isString(expr) && expr.length > 0 && expr[0] === '$') {","    // we return system variables as literals","    if (inArray(SYS_VARS, expr)) {","      return systemVariables[expr](obj, null, opt)","    } else if (inArray(REDACT_VARS, expr)) {","      return expr","    }","","    // handle selectors with explicit prefix","    var sysVar = SYS_VARS.filter(function (v) { return expr.indexOf(v + '.') === 0 })","    if (sysVar.length === 1) {","      sysVar = sysVar[0]","      if (sysVar === '$$ROOT') {","        obj = opt.root","      }","      expr = expr.substr(sysVar.length) // '.' prefix will be sliced off below","    }","","    return resolve(obj, expr.slice(1))","  }","","  // check and return value if already in a resolved state","  switch (getType(expr)) {","    case 'array':","      return expr.map(function (item) {","        return computeValue(obj, item, null)","      })","    case 'object':","      var result = {}","      for (var key in expr) {","        if (has(expr, key)) {","          result[key] = computeValue(obj, expr[key], key, opt)","          // must run ONLY one aggregate operator per expression","          // if so, return result of the computed value","          if (inArray(ops(KEY_AGGREGATE), key)) {","            // there should be only one operator","            assert(keys(expr).length === 1, \"Invalid aggregation expression '\" + stringify(expr) + \"'\")","            result = result[key]","            break","          }","        }","      }","      return result","    default:","      return clone(expr)","  }","}","","/**"," * Returns a slice of the array"," *"," * @param  {Array} xs"," * @param  {Number} skip"," * @param  {Number} limit"," * @return {Array}"," */","function slice (xs, skip, limit) {","  // MongoDB $slice works a bit differently from Array.slice","  // Uses single argument for 'limit' and array argument [skip, limit]","  if (isNil(limit)) {","    if (skip < 0) {","      skip = Math.max(0, xs.length + skip)","      limit = xs.length - skip + 1","    } else {","      limit = skip","      skip = 0","    }","  } else {","    if (skip < 0) {","      skip = Math.max(0, xs.length + skip)","    }","    assert(limit > 0, 'Invalid argument value for $slice operator. Limit must be a positive number')","    limit += skip","  }","  return ArrayProto.slice.apply(xs, [skip, limit])","}","","/**"," * Compute the standard deviation of the dataset"," * @param  {Object} ctx An object of the context. Includes \"dataset:Array\" and \"sampled:Boolean\"."," * @return {Number}"," */","function stddev (ctx) {","  var sum = ctx.dataset.reduce(function (acc, n) { return acc + n }, 0)","  var N = ctx.dataset.length || 1","  var err = ctx.sampled === true ? 1 : 0","  var avg = sum / (N - err)","  return Math.sqrt(","    ctx.dataset.reduce(function (acc, n) { return acc + Math.pow(n - avg, 2) }, 0) / N","  )","}","","/**"," * Redact an object"," * @param  {Object} obj The object to redact"," * @param  {*} expr The redact expression"," * @param  {*} opt  Options for value"," * @return {*} Returns the redacted value"," */","function redactObj (obj, expr, opt) {","  opt = opt || {}","  opt.root = opt.root || clone(obj)","","  var result = computeValue(obj, expr, null, opt)","  return inArray(REDACT_VARS, result)","    ? redactVariables[result](obj, expr, opt)","    : result","}","","/**"," * Aggregator for defining filter using mongoDB aggregation pipeline syntax"," *"," * @param operators an Array of pipeline operators"," * @constructor"," */","Mingo.Aggregator = function (operators) {","  if (!(this instanceof Mingo.Aggregator)) return new Mingo.Aggregator(operators)","","  this.__operators = operators","}","","/**"," * Apply the pipeline operations over the collection by order of the sequence added"," *"," * @param collection an array of objects to process"," * @param query the `Query` object to use as context"," * @returns {Array}"," */","Mingo.Aggregator.prototype.run = function (collection, query) {","  if (!isEmpty(this.__operators)) {","    // run aggregation pipeline","    for (var i = 0; i < this.__operators.length; i++) {","      var operator = this.__operators[i]","      var key = keys(operator)","      if (key.length === 1 && inArray(ops(KEY_PIPELINE), key[0])) {","        key = key[0]","        if (query instanceof Mingo.Query) {","          collection = pipelineOperators[key].call(query, collection, operator[key])","        } else {","          collection = pipelineOperators[key](collection, operator[key])","        }","      } else {","        except(\"Invalid aggregation operator '\" + key + \"'\")","      }","    }","  }","  return collection","}","","/**"," * Cursor to iterate and perform filtering on matched objects"," * @param collection"," * @param query"," * @param projection"," * @constructor"," */","Mingo.Cursor = function (collection, query, projection) {","  if (!(this instanceof Mingo.Cursor)) {","    return new Mingo.Cursor(collection, query, projection)","  }","","  this.__query = query","  this.__collection = collection","  this.__projection = projection || query.__projection","  this.__operators = {}","  this.__result = false","  this.__position = 0","}","","Mingo.Cursor.prototype = {","","  _fetch: function () {","    var self = this","","    if (this.__result !== false) {","      return this.__result","    }","","    // inject projection operator","    if (isObject(this.__projection)) {","      Object.assign(this.__operators, {'$project': this.__projection})","    }","","    if (!isArray(this.__collection)) {","      except('Input collection is not of valid type. Must be an Array.')","    }","","    // filter collection","    this.__result = this.__collection.filter(this.__query.test, this.__query)","    var pipeline = []","","    each(['$sort', '$skip', '$limit', '$project'], function (op) {","      if (has(self.__operators, op)) {","        var selected = {}","        selected[op] = self.__operators[op]","        pipeline.push(selected)","      }","    })","","    if (pipeline.length > 0) {","      var aggregator = new Mingo.Aggregator(pipeline)","      this.__result = aggregator.run(this.__result, this.__query)","    }","    return this.__result","  },","","  /**","   * Fetch and return all matched results","   * @returns {Array}","   */","  all: function () {","    return this._fetch()","  },","","  /**","   * Fetch and return the first matching result","   * @returns {Object}","   */","  first: function () {","    return this.count() > 0 ? this._fetch()[0] : null","  },","","  /**","   * Fetch and return the last matching object from the result","   * @returns {Object}","   */","  last: function () {","    return this.count() > 0 ? this._fetch()[this.count() - 1] : null","  },","","  /**","   * Counts the number of matched objects found","   * @returns {Number}","   */","  count: function () {","    return this._fetch().length","  },","","  /**","   * Returns a cursor that begins returning results only after passing or skipping a number of documents.","   * @param {Number} n the number of results to skip.","   * @return {Mingo.Cursor} Returns the cursor, so you can chain this call.","   */","  skip: function (n) {","    Object.assign(this.__operators, {'$skip': n})","    return this","  },","","  /**","   * Constrains the size of a cursor's result set.","   * @param {Number} n the number of results to limit to.","   * @return {Mingo.Cursor} Returns the cursor, so you can chain this call.","   */","  limit: function (n) {","    Object.assign(this.__operators, {'$limit': n})","    return this","  },","","  /**","   * Returns results ordered according to a sort specification.","   * @param {Object} modifier an object of key and values specifying the sort order. 1 for ascending and -1 for descending","   * @return {Mingo.Cursor} Returns the cursor, so you can chain this call.","   */","  sort: function (modifier) {","    Object.assign(this.__operators, {'$sort': modifier})","    return this","  },","","  /**","   * Returns the next document in a cursor.","   * @returns {Object | Boolean}","   */","  next: function () {","    if (this.hasNext()) {","      return this._fetch()[this.__position++]","    }","    return null","  },","","  /**","   * Returns true if the cursor has documents and can be iterated.","   * @returns {boolean}","   */","  hasNext: function () {","    return this.count() > this.__position","  },","","  /**","   * Specifies the exclusive upper bound for a specific field","   * @param expr","   * @returns {Number}","   */","  max: function (expr) {","    return groupOperators.$max(this._fetch(), expr)","  },","","  /**","   * Specifies the inclusive lower bound for a specific field","   * @param expr","   * @returns {Number}","   */","  min: function (expr) {","    return groupOperators.$min(this._fetch(), expr)","  },","","  /**","   * Applies a function to each document in a cursor and collects the return values in an array.","   * @param callback","   * @returns {Array}","   */","  map: function (callback) {","    return map(this._fetch(), callback)","  },","","  /**","   * Applies a JavaScript function for every document in a cursor.","   * @param callback","   */","  forEach: function (callback) {","    each(this._fetch(), callback)","  }","}","","/**"," * Query object to test collection elements with"," * @param criteria the pass criteria for the query"," * @param projection optional projection specifiers"," * @constructor"," */","Mingo.Query = function (criteria, projection) {","  if (!(this instanceof Mingo.Query)) return new Mingo.Query(criteria, projection)","","  this.__criteria = criteria","  this.__projection = projection","  this.__compiled = []","  this._compile()","}","","Mingo.Query.prototype = {","","  _compile: function () {","    if (isEmpty(this.__criteria)) return","","    assert(isObject(this.__criteria), 'Criteria must be of type Object')","","    for (var field in this.__criteria) {","      if (has(this.__criteria, field)) {","        var expr = this.__criteria[field]","        if (inArray(['$and', '$or', '$nor', '$where'], field)) {","          this._processOperator(field, field, expr)","        } else {","          // normalize expression","          expr = normalize(expr)","          for (var op in expr) {","            if (has(expr, op)) {","              this._processOperator(field, op, expr[op])","            }","          }","        }","      }","    }","  },","","  _processOperator: function (field, operator, value) {","    if (inArray(ops(KEY_QUERY), operator)) {","      this.__compiled.push(queryOperators[operator](field, value))","    } else {","      except(\"Invalid query operator '\" + operator + \"' detected\")","    }","  },","","  /**","   * Checks if the object passes the query criteria. Returns true if so, false otherwise.","   * @param obj","   * @returns {boolean}","   */","  test: function (obj) {","    for (var i = 0; i < this.__compiled.length; i++) {","      if (!this.__compiled[i].test(obj)) {","        return false","      }","    }","    return true","  },","","  /**","   * Performs a query on a collection and returns a cursor object.","   * @param collection","   * @param projection","   * @returns {Mingo.Cursor}","   */","  find: function (collection, projection) {","    return new Mingo.Cursor(collection, this, projection)","  },","","  /**","   * Remove matched documents from the collection returning the remainder","   * @param collection","   * @returns {Array}","   */","  remove: function (collection) {","    var self = this","    return collection.reduce(function(acc, obj) {","      if (!self.test(obj)) {","        acc.push(obj)","      }","      return acc","    }, [])","  }","}","","","/**"," * Group Accumulator Operators. https://docs.mongodb.com/manual/reference/operator/aggregation-group/"," */","","var groupOperators = {","","  /**","   * Returns an array of all the unique values for the selected field among for each document in that group.","   *","   * @param collection","   * @param expr","   * @returns {*}","   */","  $addToSet: function (collection, expr) {","    return unique(this.$push(collection, expr))","  },","","  /**","   * Returns the sum of all the values in a group.","   *","   * @param collection","   * @param expr","   * @returns {*}","   */","  $sum: function (collection, expr) {","    if (!isArray(collection)) return 0","","    if (isNumber(expr)) {","      // take a short cut if expr is number literal","      return collection.length * expr","    }","    return this.$push(collection, expr).filter(isNumber).reduce(function (acc, n) {","      return acc + n","    }, 0)","  },","","  /**","   * Returns the highest value in a group.","   *","   * @param collection","   * @param expr","   * @returns {*}","   */","  $max: function (collection, expr) {","    var mapped = this.$push(collection, expr)","    return mapped.reduce(function (acc, n) {","      if (isNil(acc) || n > acc) return n","      return acc","    }, undefined)","  },","","  /**","   * Returns the lowest value in a group.","   *","   * @param collection","   * @param expr","   * @returns {*}","   */","  $min: function (collection, expr) {","    var mapped = this.$push(collection, expr)","    return mapped.reduce(function (acc, n) {","      if (isNil(acc) || n < acc) return n","      return acc","    }, undefined)","  },","","  /**","   * Returns an average of all the values in a group.","   *","   * @param collection","   * @param expr","   * @returns {number}","   */","  $avg: function (collection, expr) {","    var dataset = this.$push(collection, expr).filter(isNumber)","    var sum = dataset.reduce(function (acc, n) { return acc + n }, 0)","    return sum / (dataset.length || 1)","  },","","  /**","   * Returns an array of all values for the selected field among for each document in that group.","   *","   * @param collection","   * @param expr","   * @returns {Array|*}","   */","  $push: function (collection, expr) {","    if (isNil(expr)) return collection","","    return collection.map(function (obj) {","      return computeValue(obj, expr, null)","    })","  },","","  /**","   * Returns the first value in a group.","   *","   * @param collection","   * @param expr","   * @returns {*}","   */","  $first: function (collection, expr) {","    return (collection.length > 0) ? computeValue(collection[0], expr) : undefined","  },","","  /**","   * Returns the last value in a group.","   *","   * @param collection","   * @param expr","   * @returns {*}","   */","  $last: function (collection, expr) {","    return (collection.length > 0) ? computeValue(collection[collection.length - 1], expr) : undefined","  },","","  /**","   * Returns the population standard deviation of the input values.","   * @param  {Array} collection","   * @param  {Object} expr","   * @return {Number}","   */","  $stdDevPop: function (collection, expr) {","    var dataset = this.$push(collection, expr).filter(isNumber)","    return stddev({ dataset: dataset, sampled: false })","  },","","  /**","   * Returns the sample standard deviation of the input values.","   * @param  {Array} collection","   * @param  {Object} expr","   * @return {Number|null}","   */","  $stdDevSamp: function (collection, expr) {","    var dataset = this.$push(collection, expr).filter(isNumber)","    return stddev({ dataset: dataset, sampled: true })","  }","}","","/**"," * Pipeline Aggregation Stages. https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/"," */","var pipelineOperators = {","","  /**","   * Adds new fields to documents.","   * Outputs documents that contain all existing fields from the input documents and newly added fields.","   *","   * @param {Array} collection","   * @param {*} expr","   */","  $addFields: function (collection, expr) {","    var newFields = keys(expr)","","    return collection.map(function (obj) {","      obj = clone(obj)","","      each(newFields, function (selector) {","        var subExpr = expr[selector]","        var newValue","","        if (isObject(subExpr)) {","          var subKeys = keys(subExpr)","","          // check for any operators first","          var operator = subKeys.filter(function (k) {","            return k.indexOf('$') === 0","          })","","          if (!isEmpty(operator)) {","            assert(subKeys.length === 1, 'Can have only one root operator in $addFields')","            operator = operator[0]","            subExpr = subExpr[operator]","            newValue = computeValue(obj, subExpr, operator)","          }","        } else {","          newValue = computeValue(obj, subExpr, null)","        }","","        traverse(obj, selector, function (o, key) {","          o[key] = newValue","        }, true)","      })","","      return obj","    })","  },","","  /**","   * Groups documents together for the purpose of calculating aggregate values based on a collection of documents.","   *","   * @param collection","   * @param expr","   * @returns {Array}","   */","  $group: function (collection, expr) {","    // lookup key for grouping","    var idKey = expr[keyId()]","","    var partitions = groupBy(collection, function (obj) {","      return computeValue(obj, idKey, idKey)","    })","","    var result = []","","    // remove the group key","    delete expr[keyId()]","","    each(partitions.keys, function (value, i) {","      var obj = {}","","      // exclude undefined key value","      if (!isUndefined(value)) {","        obj[keyId()] = value","      }","","      // compute remaining keys in expression","      for (var key in expr) {","        if (has(expr, key)) {","          obj[key] = accumulate(partitions.groups[i], key, expr[key])","        }","      }","      result.push(obj)","    })","","    return result","  },","","  /**","   * Performs a left outer join to another collection in the same database to filter in documents from the “joined” collection for processing.","   *","   * @param collection","   * @param expr","   */","  $lookup: function (collection, expr) {","    var joinColl = expr.from","    var localField = expr.localField","    var foreignField = expr.foreignField","    var asField = expr.as","","    var errorMsg = \"Invalid $lookup expression. \"","    assert(isArray(joinColl), errorMsg + \"'from' must be an array\")","    assert(isString(foreignField), errorMsg + \"'foreignField' must be a string\")","    assert(isString(localField), errorMsg + \"'localField' must be a string\")","    assert(isString(asField), errorMsg + \"'as' must be a string\")","","    var result = []","    var hash = {}","    function hashCode (v) { return getHash(isNil(v)? null : v) }","","    if (joinColl.length <= collection.length) {","      each(joinColl, function (obj, i) {","        var k = hashCode(obj[foreignField])","        hash[k] = hash[k] || []","        hash[k].push(i)","      })","","      each(collection, function (obj) {","        var k = hashCode(obj[localField])","        var indexes = hash[k] || []","        var newObj = clone(obj)","        newObj[asField] = map(indexes, function (i) {","          return clone(joinColl[i])","        })","        result.push(newObj)","      })","","    } else {","","      each(collection, function (obj, i) {","        var k = hashCode(obj[localField])","        hash[k] = hash[k] || []","        hash[k].push(i)","      })","","      var tempResult = {}","      each(joinColl, function (obj) {","        var k = hashCode(obj[foreignField])","        var indexes = hash[k] || []","        each(indexes, function (i) {","          var newObj = tempResult[i] || clone(collection[i])","          newObj[asField] = newObj[asField] || []","          newObj[asField].push(clone(obj))","          tempResult[i] = newObj","        })","      })","      for (var i = 0, len = keys(tempResult).length; i < len; i++) {","        result.push(tempResult[i])","      }","    }","","    return result","  },","","  /**","   * Filters the document stream, and only allows matching documents to pass into the next pipeline stage.","   * $match uses standard MongoDB queries.","   *","   * @param collection","   * @param expr","   * @returns {Array|*}","   */","  $match: function (collection, expr) {","    return (new Mingo.Query(expr)).find(collection).all()","  },","","  /**","   * Reshapes a document stream.","   * $project can rename, add, or remove fields as well as create computed values and sub-documents.","   *","   * @param collection","   * @param expr","   * @returns {Array}","   */","  $project: function (collection, expr) {","    if (isEmpty(expr)) {","      return collection","    }","","    // result collection","    var projected = []","    var objKeys = keys(expr)","    var idOnlyExcludedExpression = false","","    // validate inclusion and exclusion","    var check = [false, false]","    each(objKeys, function (k) {","      var v = expr[k]","      if (k === keyId()) return","      if (v === 0 || v === false) {","        check[0] = true","      } else {","        check[1] = true","      }","      assert(check[0] !== check[1], 'Projection cannot have a mix of inclusion and exclusion.')","    })","","    if (inArray(objKeys, keyId())) {","      var id = expr[keyId()]","      if (id === 0 || id === false) {","        objKeys = objKeys.filter(notInArray.bind(null, [keyId()]))","        assert(notInArray(objKeys, keyId()), 'Must not contain collections _id')","        idOnlyExcludedExpression = isEmpty(objKeys)","      }","    } else {","      // if not specified the add the ID field","      objKeys.push(keyId())","    }","","    each(collection, function (obj, i) {","      var cloneObj = {}","      var foundSlice = false","      var foundExclusion = false","      var dropKeys = []","","      if (idOnlyExcludedExpression) {","        dropKeys.push(keyId())","      }","","      each(objKeys, function (key) {","        var subExpr = expr[key]","        var value // final computed value of the key","        var objValue // full object graph to value of the key","","        if (key !== keyId() && subExpr === 0) {","          foundExclusion = true","        }","","        if (key === keyId() && isEmpty(subExpr)) {","          // tiny optimization here to skip over id","          value = obj[key]","        } else if (isString(subExpr)) {","          value = computeValue(obj, subExpr, key)","        } else if (subExpr === 1 || subExpr === true) {","          // For direct projections, we use the resolved object value","        } else if (isObject(subExpr)) {","          var operator = keys(subExpr)","          operator = operator.length > 1 ? false : operator[0]","","          if (inArray(ops(KEY_PROJECTION), operator)) {","            // apply the projection operator on the operator expression for the key","            if (operator === '$slice') {","              // $slice is handled differently for aggregation and projection operations","              if (array(subExpr[operator]).every(isNumber)) {","                // $slice for projection operation","                value = projectionOperators[operator](obj, subExpr[operator], key)","                foundSlice = true","              } else {","                // $slice for aggregation operation","                value = computeValue(obj, subExpr, key)","              }","            } else {","              value = projectionOperators[operator](obj, subExpr[operator], key)","            }","          } else {","            // compute the value for the sub expression for the key","            value = computeValue(obj, subExpr, key)","          }","        } else {","          dropKeys.push(key)","          return","        }","","        // clone resolved values","        value = clone(value)","        objValue = clone(resolveObj(obj, key))","","        if (!isUndefined(objValue)) {","          Object.assign(cloneObj, objValue)","        }","        if (!isUndefined(value)) {","          setValue(cloneObj, key, value)","        }","","      })","      // if projection included $slice operator","      // Also if exclusion fields are found or we want to exclude only the id field","      // include keys that were not explicitly excluded","      if (foundSlice || foundExclusion || idOnlyExcludedExpression) {","        cloneObj = Object.assign(clone(obj), cloneObj)","        each(dropKeys, function (key) {","          removeValue(cloneObj, key)","        })","      }","      projected.push(cloneObj)","    })","","    return projected","  },","","  /**","   * Restricts the number of documents in an aggregation pipeline.","   *","   * @param collection","   * @param value","   * @returns {Object|*}","   */","  $limit: function (collection, value) {","    return collection.slice(0, value)","  },","","  /**","   * Skips over a specified number of documents from the pipeline and returns the rest.","   *","   * @param collection","   * @param value","   * @returns {*}","   */","  $skip: function (collection, value) {","    return collection.slice(value)","  },","","  /**","   * Takes an array of documents and returns them as a stream of documents.","   *","   * @param collection","   * @param expr","   * @returns {Array}","   */","  $unwind: function (collection, expr) {","    var result = []","    var field = expr.substr(1)","    for (var i = 0; i < collection.length; i++) {","      var obj = collection[i]","      // must throw an error if value is not an array","      var value = getValue(obj, field)","      if (isArray(value)) {","        each(value, function (item) {","          var tmp = clone(obj)","          tmp[field] = item","          result.push(tmp)","        })","      } else {","        except(\"Target field '\" + field + \"' is not of type Array.\")","      }","    }","    return result","  },","","  /**","   * Takes all input documents and returns them in a stream of sorted documents.","   *","   * @param collection","   * @param sortKeys","   * @returns {*}","   */","  $sort: function (collection, sortKeys) {","    if (!isEmpty(sortKeys) && isObject(sortKeys)) {","      var modifiers = keys(sortKeys)","      each(modifiers.reverse(), function (key) {","        var grouped = groupBy(collection, function (obj) {","          return resolve(obj, key)","        })","        var sortedIndex = {}","        var findIndex = function (k) { return sortedIndex[getHash(k)] }","","        var indexKeys = sortBy(grouped.keys, function (item, i) {","          sortedIndex[getHash(item)] = i","          return item","        })","","        if (sortKeys[key] === -1) {","          indexKeys.reverse()","        }","        collection = []","        each(indexKeys, function (item) {","          into(collection, grouped.groups[findIndex(item)])","        })","      })","    }","    return collection","  },","","  /**","   * Groups incoming documents based on the value of a specified expression,","   * then computes the count of documents in each distinct group.","   *","   * https://docs.mongodb.com/manual/reference/operator/aggregation/sortByCount/","   *","   * @param  {Array} collection","   * @param  {Object} expr","   * @return {*}","   */","  $sortByCount: function (collection, expr) {","    var newExpr = { count: { $sum: 1 } }","    newExpr[keyId()] = expr","","    return this.$sort(","      this.$group(collection, newExpr),","      { count: -1 }","    )","  },","","  /**","   * Randomly selects the specified number of documents from its input.","   * https://docs.mongodb.com/manual/reference/operator/aggregation/sample/","   *","   * @param  {Array} collection","   * @param  {Object} expr","   * @return {*}","   */","  $sample: function (collection, expr) {","    var size = expr['size']","    assert(isNumber(size), '$sample size must be a positive integer')","","    var result = []","    for (var i = 0; i < size; i++) {","      var n = Math.floor(Math.random() * collection.length)","      result.push(collection[n])","    }","    return result","  },","","  /**","   * Returns a document that contains a count of the number of documents input to the stage.","   * @param  {Array} collection","   * @param  {String} expr","   * @return {Object}","   */","  $count: function (collection, expr) {","    assert(","      isString(expr) && expr.trim() !== '' && expr.indexOf('.') === -1 && expr.trim()[0] !== '$',","      'Invalid expression value for $count'","    )","","    var result = {}","    result[expr] = collection.length","    return result","  },","","  /**","   * Replaces a document with the specified embedded document or new one.","   * The replacement document can be any valid expression that resolves to a document.","   *","   * https://docs.mongodb.com/manual/reference/operator/aggregation/replaceRoot/","   *","   * @param  {Array} collection","   * @param  {Object} expr","   * @return {*}","   */","  $replaceRoot: function (collection, expr) {","    var newRoot = expr['newRoot']","    var result = []","    each(collection, function (obj) {","      obj = computeValue(obj, newRoot, null)","      assert(isObject(obj), '$replaceRoot expression must return a valid JS object')","      result.push(obj)","    })","    return result","  },","","  /**","   * Restricts the contents of the documents based on information stored in the documents themselves.","   *","   * https://docs.mongodb.com/manual/reference/operator/aggregation/redact/","   */","  $redact: function (collection, expr) {","    return collection.map(function (obj) {","      return redactObj(clone(obj), expr)","    })","  },","}","","/**"," * Returns the result of evaluating a $group operation over a collection"," *"," * @param collection"," * @param field the name of the aggregate operator or field"," * @param expr the expression of the aggregate operator for the field"," * @returns {*}"," */","function accumulate (collection, field, expr) {","  if (inArray(ops(KEY_GROUP), field)) {","    return groupOperators[field](collection, expr)","  }","","  if (isObject(expr)) {","    var result = {}","    for (var key in expr) {","      if (has(expr, key)) {","        result[key] = accumulate(collection, key, expr[key])","        // must run ONLY one group operator per expression","        // if so, return result of the computed value","        if (inArray(ops(KEY_GROUP), key)) {","          result = result[key]","          // if there are more keys in expression this is bad","          if (keys(expr).length > 1) {","            err(\"Invalid $group expression '\" + stringify(expr) + \"'\")","          }","          break","        }","      }","    }","    return result","  }","","  return undefined","}","/**"," * Projection Operators. https://docs.mongodb.com/manual/reference/operator/projection/"," */","","var projectionOperators = {","","  /**","   * Projects the first element in an array that matches the query condition.","   *","   * @param obj","   * @param field","   * @param expr","   */","  $: function (obj, expr, field) {","    err('$ not implemented')","  },","","  /**","   * Projects only the first element from an array that matches the specified $elemMatch condition.","   *","   * @param obj","   * @param field","   * @param expr","   * @returns {*}","   */","  $elemMatch: function (obj, expr, field) {","    var array = resolve(obj, field)","    var query = new Mingo.Query(expr)","","    if (isUndefined(array) || !isArray(array)) {","      return undefined","    }","","    for (var i = 0; i < array.length; i++) {","      if (query.test(array[i])) {","        return [array[i]]","      }","    }","","    return undefined","  },","","  /**","   * Limits the number of elements projected from an array. Supports skip and limit slices.","   *","   * @param obj","   * @param field","   * @param expr","   */","  $slice: function (obj, expr, field) {","    var xs = resolve(obj, field)","","    if (!isArray(xs)) return xs","","    if (isArray(expr)) {","      return slice(xs, expr[0], expr[1])","    } else if (isNumber(expr)) {","      return slice(xs, expr)","    } else {","      err('Invalid argument type for $slice projection operator')","    }","  },","","  /**","   * Returns the population standard deviation of the input values.","   * @param  {Array} collection","   * @param  {Object} expr","   * @return {Number}","   */","  $stdDevPop: function (obj, expr, field) {","    var dataset = computeValue(obj, expr, field)","    return stddev({ dataset: dataset, sampled: false })","  },","","  /**","   * Returns the sample standard deviation of the input values.","   * @param  {Array} collection","   * @param  {Object} expr","   * @return {Number|null}","   */","  $stdDevSamp: function (obj, expr, field) {","    var dataset = computeValue(obj, expr, field)","    return stddev({ dataset: dataset, sampled: true })","  }","}","/**"," * Query and Projection Operators. https://docs.mongodb.com/manual/reference/operator/query/"," */","","var simpleOperators = {","","  /**","   * Checks that two values are equal. Pseudo operator introduced for convenience and consistency","   *","   * @param a         The lhs operand as resolved from the object by the given selector","   * @param b         The rhs operand provided by the user","   * @returns {*}","   */","  $eq: function (a, b) {","    return isEqual(a, b) || (isArray(a) && a.findIndex(isEqual.bind(null, b)) !== -1)","  },","","  /**","   * Matches all values that are not equal to the value specified in the query.","   *","   * @param a","   * @param b","   * @returns {boolean}","   */","  $ne: function (a, b) {","    return !this.$eq(a, b)","  },","","  /**","   * Matches any of the values that exist in an array specified in the query.","   *","   * @param a","   * @param b","   * @returns {*}","   */","  $in: function (a, b) {","    a = array(a)","    return intersection(a, b).length > 0","  },","","  /**","   * Matches values that do not exist in an array specified to the query.","   *","   * @param a","   * @param b","   * @returns {*|boolean}","   */","  $nin: function (a, b) {","    return isUndefined(a) || !this.$in(a, b)","  },","","  /**","   * Matches values that are less than the value specified in the query.","   *","   * @param a","   * @param b","   * @returns {boolean}","   */","  $lt: function (a, b) {","    a = array(a).find(function (val) {","      return val < b","    })","    return a !== undefined","  },","","  /**","   * Matches values that are less than or equal to the value specified in the query.","   *","   * @param a","   * @param b","   * @returns {boolean}","   */","  $lte: function (a, b) {","    a = array(a).find(function (val) {","      return val <= b","    })","    return a !== undefined","  },","","  /**","   * Matches values that are greater than the value specified in the query.","   *","   * @param a","   * @param b","   * @returns {boolean}","   */","  $gt: function (a, b) {","    a = array(a).find(function (val) {","      return val > b","    })","    return a !== undefined","  },","","  /**","   * Matches values that are greater than or equal to the value specified in the query.","   *","   * @param a","   * @param b","   * @returns {boolean}","   */","  $gte: function (a, b) {","    a = array(a).find(function (val) {","      return val >= b","    })","    return a !== undefined","  },","","  /**","   * Performs a modulo operation on the value of a field and selects documents with a specified result.","   *","   * @param a","   * @param b","   * @returns {boolean}","   */","  $mod: function (a, b) {","    a = array(a).find(function (val) {","      return isNumber(val) && isArray(b) && b.length === 2 && (val % b[0]) === b[1]","    })","    return a !== undefined","  },","","  /**","   * Selects documents where values match a specified regular expression.","   *","   * @param a","   * @param b","   * @returns {boolean}","   */","  $regex: function (a, b) {","    a = array(a).find(function (val) {","      return isString(val) && isRegExp(b) && (!!val.match(b))","    })","    return a !== undefined","  },","","  /**","   * Matches documents that have the specified field.","   *","   * @param a","   * @param b","   * @returns {boolean}","   */","  $exists: function (a, b) {","    return (b === false && isUndefined(a)) || (b === true && !isUndefined(a))","  },","","  /**","   * Matches arrays that contain all elements specified in the query.","   *","   * @param a","   * @param b","   * @returns boolean","   */","  $all: function (a, b) {","    var self = this","    var matched = false","    if (isArray(a) && isArray(b)) {","      for (var i = 0; i < b.length; i++) {","        if (isObject(b[i]) && inArray(keys(b[i]), '$elemMatch')) {","          matched = matched || self.$elemMatch(a, b[i].$elemMatch)","        } else {","          // order of arguments matter","          return intersection(b, a).length === b.length","        }","      }","    }","    return matched","  },","","  /**","   * Selects documents if the array field is a specified size.","   *","   * @param a","   * @param b","   * @returns {*|boolean}","   */","  $size: function (a, b) {","    return isArray(a) && isNumber(b) && (a.length === b)","  },","","  /**","   * Selects documents if element in the array field matches all the specified $elemMatch condition.","   *","   * @param a","   * @param b","   */","  $elemMatch: function (a, b) {","    if (isArray(a) && !isEmpty(a)) {","      var query = new Mingo.Query(b)","      for (var i = 0; i < a.length; i++) {","        if (query.test(a[i])) {","          return true","        }","      }","    }","    return false","  },","","  /**","   * Selects documents if a field is of the specified type.","   *","   * @param a","   * @param b","   * @returns {boolean}","   */","  $type: function (a, b) {","    switch (b) {","      case 1:","        return isNumber(a) && (a + '').indexOf('.') !== -1","      case 2:","      case 5:","        return isString(a)","      case 3:","        return isObject(a)","      case 4:","        return isArray(a)","      case 8:","        return isBoolean(a)","      case 9:","        return isDate(a)","      case 10:","        return isNull(a)","      case 11:","        return isRegExp(a)","      case 16:","        return isNumber(a) && a <= 2147483647 && (a + '').indexOf('.') === -1","      case 18:","        return isNumber(a) && a > 2147483647 && a <= 9223372036854775807 && (a + '').indexOf('.') === -1","      default:","        return false","    }","  }","}","","var queryOperators = {","","  /**","   * Joins query clauses with a logical AND returns all documents that match the conditions of both clauses.","   *","   * @param selector","   * @param value","   * @returns {{test: Function}}","   */","  $and: function (selector, value) {","    assert(isArray(value), 'Invalid expression: $and expects value to be an Array')","    var queries = []","    each(value, function (expr) {","      queries.push(new Mingo.Query(expr))","    })","","    return {","      test: function (obj) {","        for (var i = 0; i < queries.length; i++) {","          if (!queries[i].test(obj)) {","            return false","          }","        }","        return true","      }","    }","  },","","  /**","   * Joins query clauses with a logical OR returns all documents that match the conditions of either clause.","   *","   * @param selector","   * @param value","   * @returns {{test: Function}}","   */","  $or: function (selector, value) {","    if (!isArray(value)) {","      err('Invalid expression for $or criteria')","    }","    var queries = []","    each(value, function (expr) {","      queries.push(new Mingo.Query(expr))","    })","","    return {","      test: function (obj) {","        for (var i = 0; i < queries.length; i++) {","          if (queries[i].test(obj)) {","            return true","          }","        }","        return false","      }","    }","  },","","  /**","   * Joins query clauses with a logical NOR returns all documents that fail to match both clauses.","   *","   * @param selector","   * @param value","   * @returns {{test: Function}}","   */","  $nor: function (selector, value) {","    if (!isArray(value)) {","      err('Invalid expression for $nor criteria')","    }","    var query = this.$or('$or', value)","    return {","      test: function (obj) {","        return !query.test(obj)","      }","    }","  },","","  /**","   * Inverts the effect of a query expression and returns documents that do not match the query expression.","   *","   * @param selector","   * @param value","   * @returns {{test: Function}}","   */","  $not: function (selector, value) {","    var criteria = {}","    criteria[selector] = normalize(value)","    var query = new Mingo.Query(criteria)","    return {","      test: function (obj) {","        return !query.test(obj)","      }","    }","  },","","  /**","   * Matches documents that satisfy a JavaScript expression.","   *","   * @param selector","   * @param value","   * @returns {{test: test}}","   */","  $where: function (selector, value) {","    if (!isFunction(value)) {","      value = new Function('return ' + value + ';')","    }","    return {","      test: function (obj) {","        return value.call(obj) === true","      }","    }","  }","}","","// add simple query operators","each(simpleOperators, function (fn, op) {","  queryOperators[op] = (function (f, ctx) {","    return function (selector, value) {","      return {","        test: function (obj) {","          // value of field must be fully resolved.","          var lhs = resolve(obj, selector)","          return f.call(ctx, lhs, value)","        }","      }","    }","  }(fn, simpleOperators))","})","var arithmeticOperators = {","","  /**","   * Returns the absolute value of a number.","   * https://docs.mongodb.com/manual/reference/operator/aggregation/abs/#exp._S_abs","   * @param obj","   * @param expr","   * @return {Number|null|NaN}","   */","  $abs: function (obj, expr) {","    var val = computeValue(obj, expr, null)","    return (val === null || val === undefined) ? null : Math.abs(val)","  },","","  /**","   * Computes the sum of an array of numbers.","   *","   * @param obj","   * @param expr","   * @returns {Object}","   */","  $add: function (obj, expr) {","    var args = computeValue(obj, expr, null)","    return args.reduce(function (memo, num) {","      return memo + num","    }, 0)","  },","","  /**","   * Returns the smallest integer greater than or equal to the specified number.","   *","   * @param obj","   * @param expr","   * @returns {number}","   */","  $ceil: function (obj, expr) {","    var arg = computeValue(obj, expr, null)","    if (isNaN(arg)) return NaN","    if (isNil(arg)) return null","    assert(isNumber(arg), '$ceil must be a valid expression that resolves to a number.')","    return Math.ceil(arg)","  },","","  /**","   * Takes two numbers and divides the first number by the second.","   *","   * @param obj","   * @param expr","   * @returns {number}","   */","  $divide: function (obj, expr) {","    var args = computeValue(obj, expr, null)","    return args[0] / args[1]","  },","","  /**","   * Raises Euler’s number (i.e. e ) to the specified exponent and returns the result.","   *","   * @param obj","   * @param expr","   * @returns {number}","   */","  $exp: function (obj, expr) {","    var arg = computeValue(obj, expr, null)","    if (isNaN(arg)) return NaN","    if (isNil(arg)) return null","    assert(isNumber(arg), '$exp must be a valid expression that resolves to a number.')","    return Math.exp(arg)","  },","","  /**","   * Returns the largest integer less than or equal to the specified number.","   *","   * @param obj","   * @param expr","   * @returns {number}","   */","  $floor: function (obj, expr) {","    var arg = computeValue(obj, expr, null)","    if (isNaN(arg)) return NaN","    if (isNil(arg)) return null","    assert(isNumber(arg), '$floor must be a valid expression that resolves to a number.')","    return Math.floor(arg)","  },","","  /**","   * Calculates the natural logarithm ln (i.e loge) of a number and returns the result as a double.","   *","   * @param obj","   * @param expr","   * @returns {number}","   */","  $ln: function (obj, expr) {","    var arg = computeValue(obj, expr, null)","    if (isNaN(arg)) return NaN","    if (isNil(arg)) return null","    assert(isNumber(arg), '$ln must be a valid expression that resolves to a number.')","    return Math.log(arg)","  },","","  /**","   * Calculates the log of a number in the specified base and returns the result as a double.","   *","   * @param obj","   * @param expr","   * @returns {number}","   */","  $log: function (obj, expr) {","    var args = computeValue(obj, expr, null)","    assert(isArray(args) && args.length === 2, '$log must be a valid expression that resolves to an array of 2 items')","    if (args.some(isNaN)) return NaN","    if (args.some(isNil)) return null","    assert(args.every(isNumber), '$log expression must resolve to array of 2 numbers')","    return Math.log10(args[0]) / Math.log10(args[1])","  },","","  /**","   * Calculates the log base 10 of a number and returns the result as a double.","   *","   * @param obj","   * @param expr","   * @returns {number}","   */","  $log10: function (obj, expr) {","    var arg = computeValue(obj, expr, null)","    if (isNaN(arg)) return NaN","    if (isNil(arg)) return null","    assert(isNumber(arg), '$log10 must be a valid expression that resolves to a number.')","    return Math.log10(arg)","  },","","  /**","   * Takes two numbers and calculates the modulo of the first number divided by the second.","   *","   * @param obj","   * @param expr","   * @returns {number}","   */","  $mod: function (obj, expr) {","    var args = computeValue(obj, expr, null)","    return args[0] % args[1]","  },","","  /**","   * Computes the product of an array of numbers.","   *","   * @param obj","   * @param expr","   * @returns {Object}","   */","  $multiply: function (obj, expr) {","    var args = computeValue(obj, expr, null)","    return args.reduce(function (memo, num) {","      return memo * num","    }, 1)","  },","","  /**","   * Raises a number to the specified exponent and returns the result.","   *","   * @param obj","   * @param expr","   * @returns {Object}","   */","  $pow: function (obj, expr) {","    var args = computeValue(obj, expr, null)","    assert(isArray(args) && args.length === 2 && args.every(isNumber), '$pow must be a valid expression that resolves to an array of 2 numbers')","","    if (args[0] === 0 && args[1] < 0) err('$pow cannot raise 0 to a negative exponent')","","    return Math.pow(args[0], args[1])","  },","","  /**","   * Calculates the square root of a positive number and returns the result as a double.","   *","   * @param obj","   * @param expr","   * @returns {number}","   */","  $sqrt: function (obj, expr) {","    var n = computeValue(obj, expr, null)","    if (isNaN(n)) return NaN","    if (isNil(n)) return null","    assert(isNumber(n) && n > 0, '$sqrt must be a valid expression that resolves to a non-negative number.')","    return Math.sqrt(n)","  },","","  /**","   * Takes an array that contains two numbers or two dates and subtracts the second value from the first.","   *","   * @param obj","   * @param expr","   * @returns {number}","   */","  $subtract: function (obj, expr) {","    var args = computeValue(obj, expr, null)","    return args[0] - args[1]","  },","","  /**","   * Truncates a number to its integer.","   *","   * @param obj","   * @param expr","   * @returns {number}","   */","  $trunc: function (obj, expr) {","    var n = computeValue(obj, expr, null)","    if (isNaN(n)) return NaN","    if (isNil(n)) return null","    assert(isNumber(n) && n > 0, '$trunc must be a valid expression that resolves to a non-negative number.')","    return Math.trunc(n)","  }","}","","var arrayOperators = {","  /**","   * Returns the element at the specified array index.","   *","   * @param  {Object} obj","   * @param  {*} expr","   * @return {*}","   */","  $arrayElemAt: function (obj, expr) {","    var arr = computeValue(obj, expr, null)","    assert(isArray(arr) && arr.length === 2, '$arrayElemAt expression must resolve to an array of 2 elements')","    assert(isArray(arr[0]), 'First operand to $arrayElemAt must resolve to an array')","    assert(isNumber(arr[1]), 'Second operand to $arrayElemAt must resolve to an integer')","    var idx = arr[1]","    arr = arr[0]","    if (idx < 0 && Math.abs(idx) <= arr.length) {","      return arr[idx + arr.length]","    } else if (idx >= 0 && idx < arr.length) {","      return arr[idx]","    }","    return undefined","  },","","  /**","   * Concatenates arrays to return the concatenated array.","   *","   * @param  {Object} obj","   * @param  {*} expr","   * @return {*}","   */","  $concatArrays: function (obj, expr) {","    var arr = computeValue(obj, expr, null)","    assert(isArray(arr) && arr.length === 2, '$concatArrays expression must resolve to an array of 2 elements')","","    if (arr.some(isNil)) return null","","    return arr[0].concat(arr[1])","  },","","  /**","   * Selects a subset of the array to return an array with only the elements that match the filter condition.","   *","   * @param  {Object} obj  [description]","   * @param  {*} expr [description]","   * @return {*}      [description]","   */","  $filter: function (obj, expr) {","    var input = computeValue(obj, expr['input'], null)","    var asVar = expr['as']","    var condExpr = expr['cond']","","    assert(isArray(input), \"'input' expression for $filter must resolve to an array\")","","    return input.filter(function (o) {","      // inject variable","      var tempObj = {}","      tempObj['$' + asVar] = o","      return computeValue(tempObj, condExpr, null) === true","    })","  },","","  /**","   * Searches an array for an occurence of a specified value and returns the array index of the first occurence.","   * If the substring is not found, returns -1.","   *","   * @param  {Object} obj","   * @param  {*} expr","   * @return {*}","   */","  $indexOfArray: function (obj, expr) {","    var arr = computeValue(obj, expr, null)","    if (isNil(arr)) return null","","    var array = arr[0]","    if (isNil(array)) return null","","    assert(isArray(array), 'First operand for $indexOfArray must resolve to an array.')","","    var searchValue = arr[1]","    if (isNil(searchValue)) return null","","    var start = arr[2] || 0","    var end = arr[3] || array.length","","    if (end < array.length) {","      array = array.slice(start, end)","    }","","    return array.indexOf(searchValue, start)","  },","","  /**","   * Determines if the operand is an array. Returns a boolean.","   *","   * @param  {Object}  obj","   * @param  {*}  expr","   * @return {Boolean}","   */","  $isArray: function (obj, expr) {","    return isArray(computeValue(obj, expr, null))","  },","","  /**","   * Returns an array whose elements are a generated sequence of numbers.","   *","   * @param  {Object} obj","   * @param  {*} expr","   * @return {*}","   */","  $range: function (obj, expr) {","    var arr = computeValue(obj, expr, null)","    var start = arr[0]","    var end = arr[1]","    var step = arr[2] || 1","","    var result = []","","    while ((start < end && step > 0) || (start > end && step < 0)) {","      result.push(start)","      start += step","    }","","    return result","  },","","  /**","   * Returns an array with the elements in reverse order.","   *","   * @param  {Object} obj","   * @param  {*} expr","   * @return {*}","   */","  $reverseArray: function (obj, expr) {","    var arr = computeValue(obj, expr, null)","","    if (isNil(arr)) return null","    assert(isArray(arr), '$reverseArray expression must resolve to an array')","","    var result = []","    for (var i = arr.length - 1; i > -1; i--) {","      result.push(arr[i])","    }","    return result","  },","","  /**","   * Applies an expression to each element in an array and combines them into a single value.","   *","   * @param {Object} obj","   * @param {*} expr","   */","  $reduce: function (obj, expr) {","    var input = computeValue(obj, expr['input'], null)","    var initialValue = computeValue(obj, expr['initialValue'], null)","    var inExpr = expr['in']","","    if (isNil(input)) return null","    assert(isArray(input), \"'input' expression for $reduce must resolve to an array\")","","    return input.reduce(function (acc, n) {","      return computeValue({ '$value': acc, '$this': n }, inExpr, null)","    }, initialValue)","  },","","  /**","   * Counts and returns the total the number of items in an array.","   *","   * @param obj","   * @param expr","   */","  $size: function (obj, expr) {","    var value = computeValue(obj, expr, null)","    return isArray(value) ? value.length : undefined","  },","","  /**","   * Returns a subset of an array.","   *","   * @param  {Object} obj","   * @param  {*} expr","   * @return {*}","   */","  $slice: function (obj, expr) {","    var arr = computeValue(obj, expr, null)","    return slice(arr[0], arr[1], arr[2])","  },","","  /**","   * Merge two lists together.","   *","   * Transposes an array of input arrays so that the first element of the output array would be an array containing,","   * the first element of the first input array, the first element of the second input array, etc.","   *","   * @param  {Obj} obj","   * @param  {*} expr","   * @return {*}","   */","  $zip: function (obj, expr) {","    var inputs = computeValue(obj, expr.inputs, null)","    var useLongestLength = expr.useLongestLength || false","","    assert(isArray(inputs), \"'inputs' expression must resolve to an array\")","    assert(isBoolean(useLongestLength), \"'useLongestLength' must be a boolean\")","","    if (isArray(expr.defaults)) {","      assert(truthy(useLongestLength), \"'useLongestLength' must be set to true to use 'defaults'\")","    }","","    var len = 0","    var arr // temp variable","    var i // loop counter","","    for (i = 0; i < inputs.length; i++) {","      arr = inputs[i]","","      if (isNil(arr)) return null","      assert(isArray(arr), \"'inputs' expression values must resolve to an array or null\")","","      len = useLongestLength","        ? Math.max(len, arr.length)","        : Math.min(len || arr.length, arr.length)","    }","","    var result = []","    var defaults = expr.defaults || []","","    for (i = 0; i < len; i++) {","      arr = inputs.map(function (val, index) {","        return isNil(val[i])","          ? (defaults[index] || null)","          : val[i]","      })","      result.push(arr)","    }","","    return result","  }","}","","var booleanOperators = {","  /**","   * Returns true only when all its expressions evaluate to true. Accepts any number of argument expressions.","   * @param obj","   * @param expr","   * @returns {boolean}","   */","  $and: function (obj, expr) {","    var value = computeValue(obj, expr, null)","    return truthy(value) && value.every(truthy)","  },","","  /**","   * Returns true when any of its expressions evaluates to true. Accepts any number of argument expressions.","   * @param obj","   * @param expr","   * @returns {boolean}","   */","  $or: function (obj, expr) {","    var value = computeValue(obj, expr, null)","    return truthy(value) && value.some(truthy)","  },","","  /**","   * Returns the boolean value that is the opposite of its argument expression. Accepts a single argument expression.","   * @param obj","   * @param expr","   * @returns {boolean}","   */","  $not: function (obj, expr) {","    return !computeValue(obj, expr[0], null)","  }","}","","var comparisonOperators = {","  /**","   * Compares two values and returns the result of the comparison as an integer.","   *","   * @param obj","   * @param expr","   * @returns {number}","   */","  $cmp: function (obj, expr) {","    var args = computeValue(obj, expr, null)","    if (args[0] > args[1]) return 1","    if (args[0] < args[1]) return -1","    return 0","  }","}","// mixin comparison operators","each(['$eq', '$ne', '$gt', '$gte', '$lt', '$lte', '$in', '$nin'], function (op) {","  comparisonOperators[op] = function (obj, expr) {","    var args = computeValue(obj, expr, null)","    return simpleOperators[op](args[0], args[1])","  }","})","","var conditionalOperators = {","","  /**","   * A ternary operator that evaluates one expression,","   * and depending on the result returns the value of one following expressions.","   *","   * @param obj","   * @param expr","   */","  $cond: function (obj, expr) {","    var ifExpr, thenExpr, elseExpr","    if (isArray(expr)) {","      if (expr.length !== 3) {","        err('Invalid arguments for $cond operator')","      }","      ifExpr = expr[0]","      thenExpr = expr[1]","      elseExpr = expr[2]","    } else if (isObject(expr)) {","      ifExpr = expr['if']","      thenExpr = expr['then']","      elseExpr = expr['else']","    }","    var condition = computeValue(obj, ifExpr, null)","    return condition ? computeValue(obj, thenExpr, null) : computeValue(obj, elseExpr, null)","  },","","  /**","   * An operator that evaluates a series of case expressions. When it finds an expression which","   * evaluates to true, it returns the resulting expression for that case. If none of the cases","   * evaluate to true, it returns the default expression.","   *","   * @param obj","   * @param expr","   */","  $switch: function (obj, expr) {","    if (!expr.branches) {","      err('Invalid arguments for $switch operator')","    }","","    var validBranch = expr.branches.find(function (branch) {","      if (!(branch.case && branch.then)) {","        err('Invalid arguments for $switch operator')","      }","      return computeValue(obj, branch.case, null)","    })","","    if (validBranch) {","      return computeValue(obj, validBranch.then, null)","    } else if (!expr.default) {","      err('Invalid arguments for $switch operator')","    } else {","      return computeValue(obj, expr.default, null)","    }","  },","","  /**","   * Evaluates an expression and returns the first expression if it evaluates to a non-null value.","   * Otherwise, $ifNull returns the second expression's value.","   *","   * @param obj","   * @param expr","   * @returns {*}","   */","  $ifNull: function (obj, expr) {","    assert(isArray(expr) && expr.length === 2, 'Invalid arguments for $ifNull operator')","    var args = computeValue(obj, expr, null)","    return (args[0] === null || args[0] === undefined) ? args[1] : args[0]","  }","}","","// used for formatting dates in $dateToString operator","var DATE_SYM_TABLE = {","  '%Y': ['$year', 4],","  '%m': ['$month', 2],","  '%d': ['$dayOfMonth', 2],","  '%H': ['$hour', 2],","  '%M': ['$minute', 2],","  '%S': ['$second', 2],","  '%L': ['$millisecond', 3],","  '%j': ['$dayOfYear', 3],","  '%w': ['$dayOfWeek', 1],","  '%U': ['$week', 2],","  '%%': '%'","}","","var dateOperators = {","  /**","   * Returns the day of the year for a date as a number between 1 and 366 (leap year).","   * @param obj","   * @param expr","   */","  $dayOfYear: function (obj, expr) {","    var d = computeValue(obj, expr, null)","    if (isDate(d)) {","      var start = new Date(d.getFullYear(), 0, 0)","      var diff = d - start","      var oneDay = 1000 * 60 * 60 * 24","      return Math.round(diff / oneDay)","    }","    return undefined","  },","","  /**","   * Returns the day of the month for a date as a number between 1 and 31.","   * @param obj","   * @param expr","   */","  $dayOfMonth: function (obj, expr) {","    var d = computeValue(obj, expr, null)","    return isDate(d) ? d.getDate() : undefined","  },","","  /**","   * Returns the day of the week for a date as a number between 1 (Sunday) and 7 (Saturday).","   * @param obj","   * @param expr","   */","  $dayOfWeek: function (obj, expr) {","    var d = computeValue(obj, expr, null)","    return isDate(d) ? d.getDay() + 1 : undefined","  },","","  /**","   * Returns the year for a date as a number (e.g. 2014).","   * @param obj","   * @param expr","   */","  $year: function (obj, expr) {","    var d = computeValue(obj, expr, null)","    return isDate(d) ? d.getFullYear() : undefined","  },","","  /**","   * Returns the month for a date as a number between 1 (January) and 12 (December).","   * @param obj","   * @param expr","   */","  $month: function (obj, expr) {","    var d = computeValue(obj, expr, null)","    return isDate(d) ? d.getMonth() + 1 : undefined","  },","","  /**","   * Returns the week number for a date as a number between 0","   * (the partial week that precedes the first Sunday of the year) and 53 (leap year).","   * @param obj","   * @param expr","   */","  $week: function (obj, expr) {","    // source: http://stackoverflow.com/a/6117889/1370481","    var d = computeValue(obj, expr, null)","","    // Copy date so don't modify original","    d = new Date(+d)","    d.setHours(0, 0, 0)","    // Set to nearest Thursday: current date + 4 - current day number","    // Make Sunday's day number 7","    d.setDate(d.getDate() + 4 - (d.getDay() || 7))","    // Get first day of year","    var yearStart = new Date(d.getFullYear(), 0, 1)","    // Calculate full weeks to nearest Thursday","    return Math.floor((((d - yearStart) / 8.64e7) + 1) / 7)","  },","","  /**","   * Returns the hour for a date as a number between 0 and 23.","   * @param obj","   * @param expr","   */","  $hour: function (obj, expr) {","    var d = computeValue(obj, expr, null)","    return isDate(d) ? d.getUTCHours() : undefined","  },","","  /**","   * Returns the minute for a date as a number between 0 and 59.","   * @param obj","   * @param expr","   */","  $minute: function (obj, expr) {","    var d = computeValue(obj, expr, null)","    return isDate(d) ? d.getMinutes() : undefined","  },","","  /**","   * Returns the seconds for a date as a number between 0 and 60 (leap seconds).","   * @param obj","   * @param expr","   */","  $second: function (obj, expr) {","    var d = computeValue(obj, expr, null)","    return isDate(d) ? d.getSeconds() : undefined","  },","","  /**","   * Returns the milliseconds of a date as a number between 0 and 999.","   * @param obj","   * @param expr","   */","  $millisecond: function (obj, expr) {","    var d = computeValue(obj, expr, null)","    return isDate(d) ? d.getMilliseconds() : undefined","  },","","  /**","   * Returns the date as a formatted string.","   *","   * %Y  Year (4 digits, zero padded)  0000-9999","   * %m  Month (2 digits, zero padded)  01-12","   * %d  Day of Month (2 digits, zero padded)  01-31","   * %H  Hour (2 digits, zero padded, 24-hour clock)  00-23","   * %M  Minute (2 digits, zero padded)  00-59","   * %S  Second (2 digits, zero padded)  00-60","   * %L  Millisecond (3 digits, zero padded)  000-999","   * %j  Day of year (3 digits, zero padded)  001-366","   * %w  Day of week (1-Sunday, 7-Saturday)  1-7","   * %U  Week of year (2 digits, zero padded)  00-53","   * %%  Percent Character as a Literal  %","   *","   * @param obj current object","   * @param expr operator expression","   */","  $dateToString: function (obj, expr) {","    var fmt = expr['format']","    var date = computeValue(obj, expr['date'], null)","    var matches = fmt.match(/(%%|%Y|%m|%d|%H|%M|%S|%L|%j|%w|%U)/g)","","    for (var i = 0, len = matches.length; i < len; i++) {","      var hdlr = DATE_SYM_TABLE[matches[i]]","      var value = hdlr","","      if (isArray(hdlr)) {","        // reuse date operators","        var fn = this[hdlr[0]]","        var pad = hdlr[1]","        value = padDigits(fn.call(this, obj, date), pad)","      }","      // replace the match with resolved value","      fmt = fmt.replace(matches[i], value)","    }","","    return fmt","  }","}","","function padDigits (number, digits) {","  return new Array(Math.max(digits - String(number).length + 1, 0)).join('0') + number","}","","var literalOperators = {","  /**","   * Return a value without parsing.","   * @param obj","   * @param expr","   */","  $literal: function (obj, expr) {","    return expr","  }","}","","var setOperators = {","  /**","   * Returns true if two sets have the same elements.","   * @param obj","   * @param expr","   */","  $setEquals: function (obj, expr) {","    var args = computeValue(obj, expr, null)","    var xs = unique(args[0])","    var ys = unique(args[1])","    return xs.length === ys.length && xs.length === intersection(xs, ys).length","  },","","  /**","   * Returns the common elements of the input sets.","   * @param obj","   * @param expr","   */","  $setIntersection: function (obj, expr) {","    var args = computeValue(obj, expr, null)","    return intersection(args[0], args[1])","  },","","  /**","   * Returns elements of a set that do not appear in a second set.","   * @param obj","   * @param expr","   */","  $setDifference: function (obj, expr) {","    var args = computeValue(obj, expr, null)","    return args[0].filter(notInArray.bind(null, args[1]))","  },","","  /**","   * Returns a set that holds all elements of the input sets.","   * @param obj","   * @param expr","   */","  $setUnion: function (obj, expr) {","    var args = computeValue(obj, expr, null)","    return union(args[0], args[1])","  },","","  /**","   * Returns true if all elements of a set appear in a second set.","   * @param obj","   * @param expr","   */","  $setIsSubset: function (obj, expr) {","    var args = computeValue(obj, expr, null)","    return intersection(args[0], args[1]).length === args[0].length","  },","","  /**","   * Returns true if any elements of a set evaluate to true, and false otherwise.","   * @param obj","   * @param expr","   */","  $anyElementTrue: function (obj, expr) {","    // mongodb nests the array expression in another","    var args = computeValue(obj, expr, null)[0]","    return args.some(truthy)","  },","","  /**","   * Returns true if all elements of a set evaluate to true, and false otherwise.","   * @param obj","   * @param expr","   */","  $allElementsTrue: function (obj, expr) {","    // mongodb nests the array expression in another","    var args = computeValue(obj, expr, null)[0]","    return args.every(truthy)","  }","}","","var stringOperators = {","","  /**","   * Concatenates two strings.","   *","   * @param obj","   * @param expr","   * @returns {string|*}","   */","  $concat: function (obj, expr) {","    var args = computeValue(obj, expr, null)","    // does not allow concatenation with nulls","    if ([null, undefined].some(inArray.bind(null, args))) {","      return null","    }","    return args.join('')","  },","","  /**","   * Searches a string for an occurence of a substring and returns the UTF-8 code point index of the first occurence.","   * If the substring is not found, returns -1.","   *","   * @param  {Object} obj","   * @param  {*} expr","   * @return {*}","   */","  $indexOfBytes: function (obj, expr) {","    var arr = computeValue(obj, expr, null)","","    if (isNil(arr[0])) return null","","    assert(isString(arr[0]), '$indexOfBytes first operand must resolve to a string')","    assert(isString(arr[1]), '$indexOfBytes second operand must resolve to a string')","","    var str = arr[0]","    var searchStr = arr[1]","    var start = arr[2]","    var end = arr[3]","","    assert(","      isUndefined(start) || (isNumber(start) && start >= 0 && Math.round(start) === start),","      '$indexOfBytes third operand must resolve to a non-negative integer'","    )","    start = start || 0","","    assert(","      isUndefined(end) || (isNumber(end) && end >= 0 && Math.round(end) === end),","      '$indexOfBytes fourth operand must resolve to a non-negative integer'","    )","    end = end || str.length","","    if (start > end) return -1","","    var index = str.substring(start, end).indexOf(searchStr)","    return (index > -1)","      ? index + start","      : index","  },","","  /**","   * Splits a string into substrings based on a delimiter.","   * If the delimiter is not found within the string, returns an array containing the original string.","   *","   * @param  {Object} obj","   * @param  {Array} expr","   * @return {Array} Returns an array of substrings.","   */","  $split: function (obj, expr) {","    var args = computeValue(obj, expr, null)","    assert(isString(args[0]), '$split requires an expression that evaluates to a string as a first argument, found: ' + getType(args[0]))","    assert(isString(args[1]), '$split requires an expression that evaluates to a string as a second argument, found: ' + getType(args[1]))","    return args[0].split(args[1])","  },","","  /**","   * Compares two strings and returns an integer that reflects the comparison.","   *","   * @param obj","   * @param expr","   * @returns {number}","   */","  $strcasecmp: function (obj, expr) {","    var args = computeValue(obj, expr, null)","    args[0] = isEmpty(args[0]) ? '' : args[0].toUpperCase()","    args[1] = isEmpty(args[1]) ? '' : args[1].toUpperCase()","    if (args[0] > args[1]) {","      return 1","    }","    return (args[0] < args[1]) ? -1 : 0","  },","","  /**","   * Returns a substring of a string, starting at a specified index position and including the specified number of characters.","   * The index is zero-based.","   *","   * @param obj","   * @param expr","   * @returns {string}","   */","  $substr: function (obj, expr) {","    var args = computeValue(obj, expr, null)","    if (isString(args[0])) {","      if (args[1] < 0) {","        return ''","      } else if (args[2] < 0) {","        return args[0].substr(args[1])","      } else {","        return args[0].substr(args[1], args[2])","      }","    }","    return ''","  },","","  /**","   * Converts a string to lowercase.","   *","   * @param obj","   * @param expr","   * @returns {string}","   */","  $toLower: function (obj, expr) {","    var value = computeValue(obj, expr, null)","    return isEmpty(value) ? '' : value.toLowerCase()","  },","","  /**","   * Converts a string to uppercase.","   *","   * @param obj","   * @param expr","   * @returns {string}","   */","  $toUpper: function (obj, expr) {","    var value = computeValue(obj, expr, null)","    return isEmpty(value) ? '' : value.toUpperCase()","  }","}","","/**"," * Aggregation framework variable operators"," */","","var variableOperators = {","  /**","   * Applies a subexpression to each element of an array and returns the array of resulting values in order.","   * @param obj","   * @param expr","   * @returns {Array|*}","   */","  $map: function (obj, expr) {","    var inputExpr = computeValue(obj, expr['input'], null)","    if (!isArray(inputExpr)) {","      err('Input expression for $map must resolve to an array')","    }","    var asExpr = expr['as']","    var inExpr = expr['in']","","    // HACK: add the \"as\" expression as a value on the object to take advantage of \"resolve()\"","    // which will reduce to that value when invoked. The reference to the as expression will be prefixed with \"$$\".","    // But since a \"$\" is stripped of before passing the name to \"resolve()\" we just need to prepend \"$\" to the key.","    var tempKey = '$' + asExpr","    // let's save any value that existed, kinda useless but YOU CAN NEVER BE TOO SURE, CAN YOU :)","    var original = obj[tempKey]","    return inputExpr.map(function (item) {","      obj[tempKey] = item","      var value = computeValue(obj, inExpr, null)","      // cleanup and restore","      if (isUndefined(original)) {","        delete obj[tempKey]","      } else {","        obj[tempKey] = original","      }","      return value","    })","  },","","  /**","   * Defines variables for use within the scope of a subexpression and returns the result of the subexpression.","   * @param obj","   * @param expr","   * @returns {*}","   */","  $let: function (obj, expr) {","    var varsExpr = expr['vars']","    var inExpr = expr['in']","","    // resolve vars","    var originals = {}","    var varsKeys = keys(varsExpr)","    each(varsKeys, function (key) {","      var val = computeValue(obj, varsExpr[key], null)","      var tempKey = '$' + key","      // set value on object using same technique as in \"$map\"","      originals[tempKey] = obj[tempKey]","      obj[tempKey] = val","    })","","    var value = computeValue(obj, inExpr, null)","","    // cleanup and restore","    each(varsKeys, function (key) {","      var tempKey = '$' + key","      if (isUndefined(originals[tempKey])) {","        delete obj[tempKey]","      } else {","        obj[tempKey] = originals[tempKey]","      }","    })","","    return value","  }","}","","// combine aggregate operators","var aggregateOperators = Object.assign(","  {},","  arithmeticOperators,","  arrayOperators,","  booleanOperators,","  comparisonOperators,","  conditionalOperators,","  dateOperators,","  literalOperators,","  setOperators,","  stringOperators,","  variableOperators",")","","/**"," * Keys specifying different operator classes"," */","var KEY_QUERY = Mingo.KEY_QUERY = Mingo.OP_QUERY = 'query'","var KEY_GROUP = Mingo.KEY_GROUP = Mingo.OP_GROUP = 'group'","var KEY_AGGREGATE = Mingo.KEY_AGGREGATE = Mingo.OP_AGGREGATE = 'aggregate'","var KEY_PIPELINE = Mingo.KEY_PIPELINE = Mingo.OP_PIPELINE = 'pipeline'","var KEY_PROJECTION = Mingo.KEY_PROJECTION = Mingo.OP_PROJECTION = 'projection'","","// operator definitions","var OPERATORS = {","  'aggregate': aggregateOperators,","  'group': groupOperators,","  'pipeline': pipelineOperators,","  'projection': projectionOperators,","  'query': queryOperators","}","","/**"," * Returns the operators defined for the given operator key"," *"," * @param {String} opClass The operator class to query. See `Mingo.KEY_$XXX` members"," */","function ops (opClass) {","  return keys(OPERATORS[opClass])","}","","/**"," * Add new operators"," *"," * @param opClass the operator class to extend"," * @param fn a function returning an object of new operators"," */","Mingo.addOperators = function (opClass, fn) {","","  var newOperators = fn({","    'computeValue': computeValue,","    'key': keyId,","    'ops': ops,","    'resolve': resolve","  })","","  // ensure correct type specified","  assert(has(OPERATORS, opClass), \"Could not identify operator class '\" + opClass + \"'\")","","  var operators = OPERATORS[opClass]","","  // check for existing operators","  each(newOperators, function (fn, op) {","    assert(/^\\$\\w+$/.test(op), \"Invalid operator name '\" + op + \"'\")","    assert(!has(operators, op), 'Operator ' + op + ' is already defined for ' + opClass + ' operators')","  })","","  var wrapped = {}","","  switch (opClass) {","    case KEY_QUERY:","      each(newOperators, function (fn, op) {","        wrapped[op] = (function (f, ctx) {","          return function (selector, value) {","            return {","              test: function (obj) {","                // value of field must be fully resolved.","                var lhs = resolve(obj, selector)","                var result = f.call(ctx, selector, lhs, value)","                if (isBoolean(result)) {","                  return result","                } else if (result instanceof Query) {","                  return result.test(obj)","                } else {","                  err(\"Invalid return type for '\" + op + \"'. Must return a Boolean or Mingo.Query\")","                }","              }","            }","          }","        }(fn, newOperators))","      })","      break","    case KEY_PROJECTION:","      each(newOperators, function (fn, op) {","        wrapped[op] = (function (f, ctx) {","          return function (obj, expr, selector) {","            var lhs = resolve(obj, selector)","            return f.call(ctx, selector, lhs, expr)","          }","        }(fn, newOperators))","      })","      break","    default:","      each(newOperators, function (fn, op) {","        wrapped[op] = (function (f, ctx) {","          return function () {","            var args = ArrayProto.slice.call(arguments)","            return f.apply(ctx, args)","          }","        }(fn, newOperators))","      })","  }","","  // toss the operator salad :)","  Object.assign(OPERATORS[opClass], wrapped)","}","","/**"," * Performs a query on a collection and returns a cursor object."," *"," * @param collection"," * @param criteria"," * @param projection"," * @returns {Mingo.Cursor}"," */","Mingo.find = function (collection, criteria, projection) {","  return (new Mingo.Query(criteria)).find(collection, projection)","}","","/**"," * Returns a new array without objects which match the criteria"," *"," * @param collection"," * @param criteria"," * @returns {Array}"," */","Mingo.remove = function (collection, criteria) {","  return (new Mingo.Query(criteria)).remove(collection)","}","","/**"," * Return the result collection after running the aggregation pipeline for the given collection"," *"," * @param collection"," * @param pipeline"," * @returns {Array}"," */","Mingo.aggregate = function (collection, pipeline) {","  if (!isArray(pipeline)) {","    err('Aggregation pipeline must be an array')","  }","  return (new Mingo.Aggregator(pipeline)).run(collection)","}","","/**"," * Mixin for Collection types that provide a method `toJSON() -> Array[Object]`"," */","Mingo.CollectionMixin = {","","  /**","   * Runs a query and returns a cursor to the result","   * @param criteria","   * @param projection","   * @returns {Mingo.Cursor}","   */","  query: function (criteria, projection) {","    return Mingo.find(this.toJSON(), criteria, projection)","  },","","  /**","   * Runs the given aggregation operators on this collection","   * @params pipeline","   * @returns {Array}","   */","  aggregate: function (pipeline) {","    return Mingo.aggregate.call(null, this.toJSON(), pipeline)","  }","}","","","// Export the Mingo object for Node.js","if (typeof module !== 'undefined' && module.exports && typeof require !== 'undefined') {","  module.exports = Mingo","} else {","  root.Mingo = Mingo","}","","}(this))",""],"l":{"5":1,"10":1,"11":1,"14":1,"15":1,"18":1,"19":0,"20":0,"23":1,"29":1,"30":1,"31":1,"38":1,"39":0,"40":0,"43":0,"46":0,"47":0,"48":0,"49":0,"50":0,"56":0,"58":0,"60":0,"62":0,"67":1,"68":0,"70":0,"71":0,"74":0,"75":0,"77":0,"78":0,"81":0,"82":0,"84":0,"85":0,"86":0,"87":0,"89":0,"91":0,"97":1,"98":0,"100":0,"101":0,"104":0,"105":0,"107":0,"108":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"118":0,"120":0,"126":1,"127":0,"129":0,"130":0,"133":0,"134":0,"136":0,"137":0,"139":0,"140":0,"142":0,"143":0,"144":0,"146":0,"148":0,"154":1,"155":0,"157":0,"158":0,"161":0,"162":0,"164":0,"165":0,"167":0,"168":0,"170":0,"171":0,"176":0,"181":1,"182":0,"183":0,"184":0,"187":0,"188":0,"189":0,"190":0,"193":0,"198":1,"199":1,"200":0,"201":0,"203":0,"204":0,"205":0,"206":0,"209":0,"213":1,"214":0,"232":1,"233":2,"236":1,"237":0,"243":1,"244":0,"246":0,"248":0,"250":0,"254":2,"255":1,"256":1,"257":1,"258":2,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"267":1,"268":1,"269":1,"270":2,"271":1,"272":0,"278":1,"279":4,"280":15,"281":1,"282":2,"293":1,"294":2,"295":2,"296":1,"298":1,"299":15,"300":15,"314":1,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"324":0,"326":0,"336":1,"337":0,"347":1,"348":0,"349":0,"350":0,"351":0,"360":1,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"368":0,"372":0,"373":0,"383":1,"385":0,"388":0,"389":0,"392":0,"395":0,"397":0,"398":0,"400":0,"401":0,"402":0,"403":0,"404":0,"406":0,"408":0,"409":0,"412":0,"415":0,"416":0,"419":0,"422":0,"423":0,"424":0,"428":0,"431":0,"439":1,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"449":0,"453":1,"454":0,"459":1,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"467":0,"476":1,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"487":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"499":0,"500":0,"509":1,"510":0,"515":0,"517":0,"518":0,"519":0,"520":0,"522":0,"523":0,"524":0,"525":0,"526":0,"528":0,"529":0,"532":0,"533":0,"536":1,"537":0,"545":1,"553":1,"554":0,"561":1,"562":0,"571":1,"572":0,"573":0,"580":1,"581":0,"582":0,"585":0,"587":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"597":0,"600":0,"603":0,"604":0,"606":0,"610":0,"615":1,"616":1,"621":1,"622":0,"632":1,"633":0,"642":1,"643":0,"644":0,"646":0,"647":0,"649":0,"653":0,"654":0,"657":0,"658":0,"663":0,"664":0,"667":0,"668":0,"671":0,"674":0,"684":1,"685":0,"687":0,"688":0,"690":0,"691":0,"692":0,"693":0,"694":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"703":0,"704":0,"706":0,"707":0,"708":0,"709":0,"711":0,"714":0,"715":0,"716":0,"718":0,"719":0,"720":0,"723":0,"726":0,"737":1,"738":0,"739":0,"740":0,"742":0,"743":0,"745":0,"746":0,"747":0,"751":0,"752":0,"753":0,"754":0,"757":0,"769":1,"770":0,"771":0,"775":1,"776":0,"777":0,"778":0,"779":0,"780":0,"787":1,"791":1,"792":0,"793":0,"794":0,"797":0,"801":1,"802":0,"810":1,"812":0,"813":0,"817":0,"818":0,"819":0,"822":0,"823":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"837":0,"838":0,"842":0,"853":1,"854":0,"855":0,"858":0,"859":0,"863":0,"865":0,"866":0,"868":0,"873":0,"875":0,"876":0,"877":0,"878":0,"882":0,"883":0,"884":0,"885":0,"886":0,"888":0,"891":0,"895":0,"897":0,"898":0,"901":0,"902":0,"903":0,"904":0,"907":0,"909":0,"910":0,"911":0,"915":0,"917":0,"929":1,"932":0,"933":0,"934":0,"935":0,"937":0,"938":0,"941":0,"942":0,"944":0,"945":0,"947":0,"955":1,"956":0,"957":0,"958":0,"959":0,"960":0,"961":0,"972":1,"973":0,"974":0,"976":0,"977":0,"988":1,"989":0,"991":0,"1001":1,"1002":0,"1004":0,"1005":0,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1012":0,"1015":0,"1019":0,"1029":1,"1030":0,"1031":0,"1034":0,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1042":1,"1045":0,"1047":0,"1048":0,"1052":0,"1053":0,"1056":0,"1057":0,"1061":0,"1062":0,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1072":0,"1073":0,"1074":0,"1076":0,"1084":0,"1092":0,"1100":0,"1108":0,"1117":0,"1118":0,"1127":0,"1128":0,"1137":0,"1138":0,"1146":0,"1147":0,"1149":0,"1157":0,"1166":0,"1175":0,"1184":0,"1192":0,"1202":1,"1203":0,"1205":0,"1206":0,"1207":0,"1208":0,"1211":1,"1214":0,"1216":0,"1218":0,"1219":0,"1220":0,"1221":0,"1222":0,"1225":0,"1226":0,"1227":0,"1228":0,"1237":0,"1238":0,"1240":0,"1250":0,"1251":0,"1252":0,"1255":0,"1265":0,"1274":0,"1275":0,"1276":0,"1277":0,"1279":0,"1289":1,"1299":0,"1310":0,"1312":0,"1314":0,"1316":0,"1317":0,"1329":0,"1330":0,"1331":0,"1332":0,"1344":0,"1345":0,"1346":0,"1347":0,"1359":0,"1360":0,"1361":0,"1372":0,"1374":0,"1375":0,"1387":0,"1398":0,"1408":0,"1409":0,"1419":0,"1420":0,"1427":1,"1437":0,"1439":0,"1440":0,"1442":0,"1443":0,"1444":0,"1446":0,"1447":0,"1450":0,"1451":0,"1454":0,"1455":0,"1456":0,"1457":0,"1458":0,"1461":0,"1464":0,"1465":0,"1469":0,"1482":0,"1484":0,"1485":0,"1488":0,"1491":0,"1493":0,"1494":0,"1497":0,"1498":0,"1502":0,"1503":0,"1504":0,"1507":0,"1510":0,"1520":0,"1521":0,"1522":0,"1523":0,"1525":0,"1526":0,"1527":0,"1528":0,"1529":0,"1531":0,"1532":0,"1533":1,"1535":0,"1536":0,"1537":0,"1538":0,"1539":0,"1542":0,"1543":0,"1544":0,"1545":0,"1546":0,"1547":0,"1549":0,"1554":0,"1555":0,"1556":0,"1557":0,"1560":0,"1561":0,"1562":0,"1563":0,"1564":0,"1565":0,"1566":0,"1567":0,"1568":0,"1571":0,"1572":0,"1576":0,"1588":0,"1600":0,"1601":0,"1605":0,"1606":0,"1607":0,"1610":0,"1611":0,"1612":0,"1613":0,"1614":0,"1615":0,"1617":0,"1619":0,"1622":0,"1623":0,"1624":0,"1625":0,"1626":0,"1627":0,"1631":0,"1634":0,"1635":0,"1636":0,"1637":0,"1638":0,"1640":0,"1641":0,"1644":0,"1645":0,"1646":0,"1647":0,"1649":0,"1650":0,"1653":0,"1655":0,"1656":0,"1657":0,"1658":0,"1660":0,"1661":0,"1662":0,"1664":0,"1666":0,"1668":0,"1670":0,"1671":0,"1674":0,"1677":0,"1681":0,"1684":0,"1685":0,"1689":0,"1690":0,"1692":0,"1693":0,"1695":0,"1696":0,"1703":0,"1704":0,"1705":0,"1706":0,"1709":0,"1712":0,"1723":0,"1734":0,"1745":0,"1746":0,"1747":0,"1748":0,"1750":0,"1751":0,"1752":0,"1753":0,"1754":0,"1755":0,"1758":0,"1761":0,"1772":0,"1773":0,"1774":0,"1775":0,"1776":0,"1778":0,"1779":0,"1781":0,"1782":0,"1783":0,"1786":0,"1787":0,"1789":0,"1790":0,"1791":0,"1795":0,"1809":0,"1810":0,"1812":0,"1827":0,"1828":0,"1830":0,"1831":0,"1832":0,"1833":0,"1835":0,"1845":0,"1850":0,"1851":0,"1852":0,"1866":0,"1867":0,"1868":0,"1869":0,"1870":0,"1871":0,"1873":0,"1882":0,"1883":0,"1896":1,"1897":0,"1898":0,"1901":0,"1902":0,"1903":0,"1904":0,"1905":0,"1908":0,"1909":0,"1911":0,"1912":0,"1914":0,"1918":0,"1921":0,"1927":1,"1937":0,"1949":0,"1950":0,"1952":0,"1953":0,"1956":0,"1957":0,"1958":0,"1962":0,"1973":0,"1975":0,"1977":0,"1978":0,"1979":0,"1980":0,"1982":0,"1993":0,"1994":0,"2004":0,"2005":0,"2012":1,"2022":0,"2033":0,"2044":0,"2045":0,"2056":0,"2067":0,"2068":0,"2070":0,"2081":0,"2082":0,"2084":0,"2095":0,"2096":0,"2098":0,"2109":0,"2110":0,"2112":0,"2123":0,"2124":0,"2126":0,"2137":0,"2138":0,"2140":0,"2151":0,"2162":0,"2163":0,"2164":0,"2165":0,"2166":0,"2167":0,"2170":0,"2174":0,"2185":0,"2195":0,"2196":0,"2197":0,"2198":0,"2199":0,"2203":0,"2214":0,"2216":0,"2219":0,"2221":0,"2223":0,"2225":0,"2227":0,"2229":0,"2231":0,"2233":0,"2235":0,"2237":0,"2242":1,"2252":0,"2253":0,"2254":0,"2255":0,"2258":0,"2260":0,"2261":0,"2262":0,"2265":0,"2278":0,"2279":0,"2281":0,"2282":0,"2283":0,"2286":0,"2288":0,"2289":0,"2290":0,"2293":0,"2306":0,"2307":0,"2309":0,"2310":0,"2312":0,"2325":0,"2326":0,"2327":0,"2328":0,"2330":0,"2343":0,"2344":0,"2346":0,"2348":0,"2355":1,"2356":15,"2357":15,"2358":0,"2361":0,"2362":0,"2368":1,"2378":0,"2379":0,"2390":0,"2391":0,"2392":0,"2404":0,"2405":0,"2406":0,"2407":0,"2408":0,"2419":0,"2420":0,"2431":0,"2432":0,"2433":0,"2434":0,"2435":0,"2446":0,"2447":0,"2448":0,"2449":0,"2450":0,"2461":0,"2462":0,"2463":0,"2464":0,"2465":0,"2476":0,"2477":0,"2478":0,"2479":0,"2480":0,"2481":0,"2492":0,"2493":0,"2494":0,"2495":0,"2496":0,"2507":0,"2508":0,"2519":0,"2520":0,"2521":0,"2533":0,"2534":0,"2536":0,"2538":0,"2549":0,"2550":0,"2551":0,"2552":0,"2553":0,"2564":0,"2565":0,"2576":0,"2577":0,"2578":0,"2579":0,"2580":0,"2584":1,"2593":0,"2594":0,"2595":0,"2596":0,"2597":0,"2598":0,"2599":0,"2600":0,"2601":0,"2602":0,"2604":0,"2615":0,"2616":0,"2618":0,"2620":0,"2631":0,"2632":0,"2633":0,"2635":0,"2637":0,"2639":0,"2640":0,"2641":0,"2654":0,"2655":0,"2657":0,"2658":0,"2660":0,"2662":0,"2663":0,"2665":0,"2666":0,"2668":0,"2669":0,"2672":0,"2683":0,"2694":0,"2695":0,"2696":0,"2697":0,"2699":0,"2701":0,"2702":0,"2703":0,"2706":0,"2717":0,"2719":0,"2720":0,"2722":0,"2723":0,"2724":0,"2726":0,"2736":0,"2737":0,"2738":0,"2740":0,"2741":0,"2743":0,"2744":0,"2755":0,"2756":0,"2767":0,"2768":0,"2782":0,"2783":0,"2785":0,"2786":0,"2788":0,"2789":0,"2792":0,"2793":0,"2794":0,"2796":0,"2797":0,"2799":0,"2800":0,"2802":0,"2807":0,"2808":0,"2810":0,"2811":0,"2812":0,"2816":0,"2819":0,"2823":1,"2831":0,"2832":0,"2842":0,"2843":0,"2853":0,"2857":1,"2866":0,"2867":0,"2868":0,"2869":0,"2873":1,"2874":8,"2875":0,"2876":0,"2880":1,"2890":0,"2891":0,"2892":0,"2893":0,"2895":0,"2896":0,"2897":0,"2898":0,"2899":0,"2900":0,"2901":0,"2903":0,"2904":0,"2916":0,"2917":0,"2920":0,"2921":0,"2922":0,"2924":0,"2927":0,"2928":0,"2929":0,"2930":0,"2932":0,"2945":0,"2946":0,"2947":0,"2952":1,"2966":1,"2973":0,"2974":0,"2975":0,"2976":0,"2977":0,"2978":0,"2980":0,"2989":0,"2990":0,"2999":0,"3000":0,"3009":0,"3010":0,"3019":0,"3020":0,"3031":0,"3034":0,"3035":0,"3038":0,"3040":0,"3042":0,"3051":0,"3052":0,"3061":0,"3062":0,"3071":0,"3072":0,"3081":0,"3082":0,"3104":0,"3105":0,"3106":0,"3108":0,"3109":0,"3110":0,"3112":0,"3114":0,"3115":0,"3116":0,"3119":0,"3122":0,"3126":1,"3127":0,"3130":1,"3137":0,"3141":1,"3148":0,"3149":0,"3150":0,"3151":0,"3160":0,"3161":0,"3170":0,"3171":0,"3180":0,"3181":0,"3190":0,"3191":0,"3201":0,"3202":0,"3212":0,"3213":0,"3217":1,"3227":0,"3229":0,"3230":0,"3232":0,"3244":0,"3246":0,"3248":0,"3249":0,"3251":0,"3252":0,"3253":0,"3254":0,"3256":0,"3260":0,"3262":0,"3266":0,"3268":0,"3270":0,"3271":0,"3285":0,"3286":0,"3287":0,"3288":0,"3299":0,"3300":0,"3301":0,"3302":0,"3303":0,"3305":0,"3317":0,"3318":0,"3319":0,"3320":0,"3321":0,"3322":0,"3324":0,"3327":0,"3338":0,"3339":0,"3350":0,"3351":0,"3359":1,"3367":0,"3368":0,"3369":0,"3371":0,"3372":0,"3377":0,"3379":0,"3380":0,"3381":0,"3382":0,"3384":0,"3385":0,"3387":0,"3389":0,"3400":0,"3401":0,"3404":0,"3405":0,"3406":0,"3407":0,"3408":0,"3410":0,"3411":0,"3414":0,"3417":0,"3418":0,"3419":0,"3420":0,"3422":0,"3426":0,"3431":1,"3448":1,"3449":1,"3450":1,"3451":1,"3452":1,"3455":1,"3468":1,"3469":0,"3478":1,"3480":0,"3488":0,"3490":0,"3493":0,"3494":0,"3495":0,"3498":0,"3500":0,"3502":0,"3503":0,"3504":0,"3505":0,"3508":0,"3509":0,"3510":0,"3511":0,"3512":0,"3513":0,"3515":0,"3522":0,"3524":0,"3525":0,"3526":0,"3527":0,"3528":0,"3532":0,"3534":0,"3535":0,"3536":0,"3537":0,"3538":0,"3545":0,"3556":1,"3557":0,"3567":1,"3568":0,"3578":1,"3579":0,"3580":0,"3582":0,"3588":1,"3597":0,"3606":0,"3612":1,"3613":1,"3615":0}}}